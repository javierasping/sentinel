[{"categories":null,"contents":"Instalación pila LAMP en Debian 12 Si estás utilizando Debian 12, sigue los pasos a continuación para instalar un servidor web LAMP completo en Debian GNU/Linux 12 \u0026ldquo;Bookworm\u0026rdquo; (Stable). Ten en cuenta que Debian 12 incluye PHP 8.2 en sus repositorios, lo que puede ser diferente de versiones anteriores de Debian.\nInstalación del servidor web Lo primero en un servidor LAMP es la \u0026ldquo;A\u0026rdquo; de Apache. Para instalar Apache, ejecuta los siguientes comandos:\njaviercruces@IWEB:~$ sudo apt install apache2 javiercruces@IWEB:~$ sudo systemctl enable apache2 \u0026amp;\u0026amp; sudo systemctl start apache2 Con estos comandos, habrás instalado y activado el servidor web Apache. Puedes verificarlo escribiendo la IP del servidor en tu navegador favorito y debería mostrarte la página de inicio de Apache por defecto.\nInstalación de PHP Por lo general, necesitarás instalar algunos paquetes específicos para PHP, llamados modulos en funcion de la base de datos que utilices. Puedes instalarlos con el siguiente comando:\njaviercruces@IWEB:~$ sudo apt install php8.2 libapache2-mod-php8.2 php8.2-mysql Si instalas CMS como WordPress, Moodle o Prestashop en tu servidor, es posible que te pidan paquetes adicionales para su correcto funcionamiento. Estas aplicaciones suelen indicar claramente qué paquetes necesitas instalar.\nPara que Apache aplique los cambios y active PHP, reinicia el servicio con el siguiente comando:\njaviercruces@IWEB:~$ sudo systemctl restart apache2 Instalación y configuración de MariaDB Puedes usar indistintamente MariaDB o Mysql , en mi caso usare MariaDB :\njaviercruces@IWEB:~$ sudo apt install mariadb-server javiercruces@IWEB:~$ sudo systemctl enable mysql \u0026amp;\u0026amp; sudo systemctl start mysql Durante la instalación, se te pedirá establecer una contraseña para el usuario root de MySQL. Una vez que haya finalizado la instalación, ejecuta el siguiente comando para asegurar tu instalación de MariaDB:\njaviercruces@IWEB:~$ sudo mysql_secure_installation Sigue las instrucciones para asegurar tu instalación de MariaDB, como configurar la contraseña del usuario root y eliminar usuarios anónimos y bases de datos de prueba.\nDespués de completar estos pasos, habrás configurado MariaDB y podrás conectarte a través de la terminal:\njaviercruces@IWEB:~$ sudo mysql -u root -p Enter password: Welcome to the MariaDB monitor. Commands end with ; or \\g. Your MariaDB connection id is 32 Server version: 10.11.4-MariaDB-1~deb12u1 Debian 12 Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others. Type \u0026#39;help;\u0026#39; or \u0026#39;\\h\u0026#39; for help. Type \u0026#39;\\c\u0026#39; to clear the current input statement. MariaDB [(none)]\u0026gt; Con esto ya tendrías instalada la pila LAMP en debian 12\n","date":"October 28, 2023","hero":"/javierasping.github.io/images/iweb/lamp/portada_lamp.png","permalink":"https:/javierasping.github.io/posts/iaw/lamp/lamp/","summary":"Instalación pila LAMP en Debian 12 Si estás utilizando Debian 12, sigue los pasos a continuación para instalar un servidor web LAMP completo en Debian GNU/Linux 12 \u0026ldquo;Bookworm\u0026rdquo; (Stable). Ten en cuenta que Debian 12 incluye PHP 8.2 en sus repositorios, lo que puede ser diferente de versiones anteriores de Debian.\nInstalación del servidor web Lo primero en un servidor LAMP es la \u0026ldquo;A\u0026rdquo; de Apache. Para instalar Apache, ejecuta los siguientes comandos:","tags":["WordPress","CMS","IWEB","AW","debian","LAMP"],"title":"Instalación pila LAMP en debian 12"},{"categories":null,"contents":"Instalación pila LEMP en debian 12 con PHP-8 En esta guía, te explicare los pasos necesarios para instalar una pila LEMP (Linux, Nginx, MariaDB y PHP) en un servidor con Debian 12. La configuración incluirá PHP 8.2 como versión principal. La pila LEMP es esencial para alojar sitios web y aplicaciones web basadas en PHP, como WordPress u otras aplicaciones dinámicas. Sigue los pasos detallados a continuación para configurar tu servidor LEMP con PHP 8.2.\nRequisitos previos Antes de comenzar, asegúrate de que cumples con los siguientes requisitos:\nUn servidor Linux. Un usuario no root con privilegios sudo. Un nombre de dominio completo que apunte al servidor. Primero, actualiza y actualiza los paquetes del sistema:\njaviercruces@IWEB:~$ sudo apt update \u0026amp;\u0026amp; sudo apt upgrade Además, asegúrate de que los siguientes paquetes estén instalados en tu sistema , ya que los utilizaremos mas adelante :\njaviercruces@IWEB:~$ sudo apt install wget nano unzip tar -y Instalación PHP Debian 12 incluye PHP 8.2 por defecto. Puedes instalarlo ejecutando el siguiente comando:\njaviercruces@IWEB:~$ sudo apt install php-fpm php-cli php-mysql php-mbstring php-xml php-gd Hemos instalado las extensiones MySQL, CLI, GD, Mbstring y XML de PHP. Puedes instalar cualquier extensión adicional según tus necesidades. Para verificar la instalación de PHP, puedes ejecutar:\njaviercruces@IWEB:~$ php --version PHP 8.2.7 (cli) (built: Jun 9 2023 19:37:27) (NTS) Copyright (c) The PHP Group Zend Engine v4.2.7, Copyright (c) Zend Technologies with Zend OPcache v8.2.7, Copyright (c), by Zend Technologies javiercruces@IWEB:~$ Instalación MariaDB Puedes usar indistintamente MariaDB o Mysql , en mi caso usare MariaDB :\njaviercruces@IWEB:~$ sudo apt install mariadb-server javiercruces@IWEB:~$ sudo systemctl enable mysql \u0026amp;\u0026amp; sudo systemctl start mysql Durante la instalación, se te pedirá establecer una contraseña para el usuario root de MySQL. Una vez que haya finalizado la instalación, ejecuta el siguiente comando para asegurar tu instalación de MariaDB:\njaviercruces@IWEB:~$ sudo mysql_secure_installation Sigue las instrucciones para asegurar tu instalación de MariaDB, como configurar la contraseña del usuario root y eliminar usuarios anónimos y bases de datos de prueba.\nDespués de completar estos pasos, habrás configurado MariaDB y podrás conectarte a través de la terminal .\nSi te has saltado lanzar el script de la instalación segura , el usuario root de la base de datos no tiene contraseña asi que pulsa espacio para iniciar sesión una vez lanzado el comando .\njaviercruces@IWEB:~$ sudo mysql -u root -p Enter password: Welcome to the MariaDB monitor. Commands end with ; or \\g. Your MariaDB connection id is 32 Server version: 10.11.4-MariaDB-1~deb12u1 Debian 12 Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others. Type \u0026#39;help;\u0026#39; or \u0026#39;\\h\u0026#39; for help. Type \u0026#39;\\c\u0026#39; to clear the current input statement. MariaDB [(none)]\u0026gt; Instalar Nginx Primero, asegurémonos de que Nginx esté instalado en tu servidor:\njaviercruces@IWEB:~$ sudo apt install nginx Una vez que Nginx esté instalado, procederemos a configurar un socket TCP para trabajar con PHP-FPM.\nAbre el archivo de configuración de PHP-FPM para realizar la configuración necesaria:\njaviercruces@IWEB:~$ sudo nano /etc/php/8.2/fpm/pool.d/www.conf Dentro del archivo, busca la sección que define la dirección en la que PHP-FPM acepta solicitudes FastCGI.\nComenta la línea que comienza con listen y reemplázala por la siguiente línea para configurar un socket TCP en la dirección 127.0.0.1 y el puerto 9000:\n; The address on which to accept FastCGI requests. ; Valid syntaxes are: ; \u0026#39;ip.add.re.ss:port\u0026#39; - to listen on a TCP socket to a specific IPv4 address on ; a specific port; ; \u0026#39;[ip:6:addr:ess]:port\u0026#39; - to listen on a TCP socket to a specific IPv6 address on ; a specific port; ; \u0026#39;port\u0026#39; - to listen on a TCP socket to all addresses ; (IPv6 and IPv4-mapped) on a specific port; ; \u0026#39;/path/to/unix/socket\u0026#39; - to listen on a Unix socket. ; Note: This value is mandatory. ;listen = /run/php/php8.2-fpm.sock --\u0026gt; Comenta esta linea listen = 127.0.0.1:9000 Guarda los cambios y cierra el archivo.\nAhora vamos a editar la configuración del sitio virtual por defecto para hacerlo funcionar con fpm .\nPara lograrlo, vamos a modificar el contenido dentro de la sección location en la configuración del servidor. Aquí te proporciono un ejemplo de archivo de configuración que puedes utilizar:\nserver { listen 80 default_server; listen [::]:80 default_server; root /var/www/html; index index.html index.php index.htm index.nginx-debian.html ; server_name _; location / { try_files $uri $uri/ =404; } location ~ \\.php$ { include snippets/fastcgi-php.conf; fastcgi_pass 127.0.0.1:9000; #fastcgi_pass unix:/var/run/php/php8.2-fpm.sock; # fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; } } Ahora vamos a reiniciar los servicios tanto de php como de Nginx para asegurar de que sea aplicado la configuración , pero primero vamos a comprobar si tienes errores de sintais en ambos ficheros .\nPara comprobar errores de sintaxis en Nginx :\njaviercruces@IWEB:~$ sudo nginx -t nginx: the configuration file /etc/nginx/nginx.conf syntax is ok nginx: configuration file /etc/nginx/nginx.conf test is successful Si la salida es correcta continua comprobando si has cometido errores de sintaxis en la configuración de PHP-FPM :\njaviercruces@IWEB:~$ sudo php-fpm8.2 -t [02-Nov-2023 17:33:02] NOTICE: configuration file /etc/php/8.2/fpm/php-fpm.conf test is successful Una vez las dos salidas de estos comandos no contienen errores , vamos a reiniciar ambos servicios para que se aplique la configuración :\njaviercruces@IWEB:/etc/nginx$ sudo systemctl restart php8.2-fpm nginx.service Comprobación de funcionamiento Para asegurarnos de que el servidor está funcionando correctamente con PHP-FPM, vamos a crear un archivo llamado info.php que mostrará información sobre la configuración de PHP en el servidor. A continuación, te mostraré cómo crear el archivo:\njaviercruces@IWEB:~$ sudo nano /var/www/html/info.php Dentro del archivo info.php, agrega el siguiente contenido:\n\u0026lt;?php phpinfo(); ?\u0026gt; Guarda y cierra el archivo\nEste archivo PHP mostrará información detallada sobre la configuración de PHP en tu servidor. Puedes acceder a él en tu navegador visitando http://tudominio.com/info.php (reemplaza tudominio.com con tu nombre de dominio real) o también puedes acceder al mismo poniendo en el navegador la IP de tu maquina.\nUna vez hecho esto , ya tienes instalado la pila LEMP para que la utilices en tus CMS.\n","date":"October 28, 2023","hero":"/javierasping.github.io/images/iweb/lamp/portada_lemp.png","permalink":"https:/javierasping.github.io/posts/iaw/lemp/lemp/","summary":"Instalación pila LEMP en debian 12 con PHP-8 En esta guía, te explicare los pasos necesarios para instalar una pila LEMP (Linux, Nginx, MariaDB y PHP) en un servidor con Debian 12. La configuración incluirá PHP 8.2 como versión principal. La pila LEMP es esencial para alojar sitios web y aplicaciones web basadas en PHP, como WordPress u otras aplicaciones dinámicas. Sigue los pasos detallados a continuación para configurar tu servidor LEMP con PHP 8.","tags":["WordPress","CMS","IWEB","AW","debian","LEMP"],"title":"Instalación pila LEMP en debian 12 con PHP-8"},{"categories":null,"contents":"Instalación WordPress en Debian 12 con pila LAMP PHP-8 WordPress es un sistema de gestión de contenidos (CMS, por sus siglas en inglés) de código abierto muy popular que se utiliza para crear y administrar sitios web y blogs. Fue lanzado por primera vez en 2003 y desde entonces ha ganado una amplia base de usuarios y una comunidad activa de desarrolladores y diseñadores.\nPreparación Antes de empezar con la instalación de WordPress vamos a dejar claro en una lista cual es el ecosistema de nuestro servidor para que todo funcione correctamente:\nServidor LAMP completo: Apache + MySQL -o MariaDB- y PHP 8.x. Configurado un Virtualhost para nuestro dominio. Creación de base de datos con usuario. Si no tienes instalado la pila LAMP sigue puedes hacerlo en este enlace.\nCreación del virtualhost Copiamos el archivo de configuración predeterminado de Apache y lo renombramos a wordpress.conf\njaviercruces@IWEB:/etc/apache2/sites-available$ sudo cp 000-default.conf wordpress.conf Configuramos el sitio virtual , recuerda cambiar el ServerName y DocumentRoot\n\u0026lt;VirtualHost *:80\u0026gt; # The ServerName directive sets the request scheme, hostname and port that # the server uses to identify itself. This is used when creating # redirection URLs. In the context of virtual hosts, the ServerName # specifies what hostname must appear in the request\u0026#39;s Host: header to # match this virtual host. For the default virtual host (this file) this # value is not decisive as it is used as a last resort host regardless. # However, you must set it for any further virtual host explicitly. ServerName wordpress.fjcd.es ServerAdmin webmaster@localhost DocumentRoot /var/www/wordpress # Available loglevels: trace8, ..., trace1, debug, info, notice, warn, # error, crit, alert, emerg. # It is also possible to configure the loglevel for particular # modules, e.g. #LogLevel info ssl:warn ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined # For most configuration files from conf-available/, which are # enabled or disabled at a global level, it is possible to # include a line for only one particular virtual host. For example the # following line enables the CGI configuration for this host only # after it has been globally disabled with \u0026#34;a2disconf\u0026#34;. #Include conf-available/serve-cgi-bin.conf \u0026lt;/VirtualHost\u0026gt; Habilitamos el sitio virtual wordpress.conf\njaviercruces@IWEB:/etc/apache2/sites-available$ sudo a2ensite wordpress.conf Enabling site wordpress. To activate the new configuration, you need to run: systemctl reload apache2 Recargamos Apache para aplicar la nueva configuración\njaviercruces@IWEB:/etc/apache2/sites-available$ sudo systemctl reload apache2 Para acceder a este virtualhost , en la maquina donde vayas a acceder al wordpress , al no tener servidor dns recuerda poner en el fichero host la ip de tu servidor con el ServerName :\njaviercruces@HPOMEN15:~$ cat /etc/hosts #Añade la IP de tu servidor y el ServerName correspondiente (wordpress.fjcd.es) #Ponlo al final del fichero y no modifiques las lineas existentes en tu fichero 192.168.125.27 wordpress.fjcd.es Creación de la base de datos con un usuario. Te recomiendo que apuntes los datos introducidos a continuación ya que los necesitaras mas adelante . Nos conectamos a la base de datos :\njaviercruces@IWEB:~$ sudo mysql -u root -p Enter password: Welcome to the MariaDB monitor. Commands end with ; or \\g. Your MariaDB connection id is 31 Server version: 10.11.4-MariaDB-1~deb12u1 Debian 12 Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others. Type \u0026#39;help;\u0026#39; or \u0026#39;\\h\u0026#39; for help. Type \u0026#39;\\c\u0026#39; to clear the current input statement. #Creamos una base de datos : MariaDB [(none)]\u0026gt; CREATE DATABASE fjcd_wordpress; Query OK, 1 row affected (0,001 sec) #Nos creamos el usuario para nuestra base de datos MariaDB [(none)]\u0026gt; CREATE USER \u0026#39;fjcd-wordpress\u0026#39;@\u0026#39;localhost\u0026#39; IDENTIFIED BY \u0026#39;tu_contraseña\u0026#39;; Query OK, 0 rows affected (0,013 sec) #Le damos permisos sobre la base de datos que hemos creado: MariaDB [(none)]\u0026gt; GRANT ALL PRIVILEGES ON fjcd_wordpress.* TO \u0026#39;fjcd-wordpress\u0026#39;@\u0026#39;localhost\u0026#39;; Query OK, 0 rows affected (0,010 sec) #Actualizamos los permisos: MariaDB [(none)]\u0026gt; FLUSH PRIVILEGES; Query OK, 0 rows affected (0,000 sec) #Nos salimos de la CLI de mysql MariaDB [(none)]\u0026gt; EXIT; Bye Instalación de WordPress Lo primero que haremos será descargarnos WordPress, podemos hacerlo usando wget o si lo tenemos descargado en nuestro anfitrión pasarlo haciendo uso de SCP o FTP .\njaviercruces@IWEB:~$ wget https://wordpress.org/latest.tar.gz --2023-10-27 12:33:17-- https://wordpress.org/latest.tar.gz Resolviendo wordpress.org (wordpress.org)... 198.143.164.252 Conectando con wordpress.org (wordpress.org)[198.143.164.252]:443... conectado. Petición HTTP enviada, esperando respuesta... 200 OK Longitud: 23465047 (22M) [application/octet-stream] Grabando a: «latest.tar.gz» latest.tar.gz 100%[=====================================\u0026gt;] 22,38M 14,8MB/s en 1,5s 2023-10-27 12:33:19 (14,8 MB/s) - «latest.tar.gz» guardado [23465047/23465047] Y descomprimiremos el fichero y copiaremos los ficheros dentro del DocumentRoot de nuestro VirtualHost:\njaviercruces@IWEB:~$ sudo mkdir /var/www/wordpress/ javiercruces@IWEB:~$ sudo tar -zxf latest.tar.gz -C /var/www/ Entramos a la ruta del WordPress para realizar poner correctamente el esquema de permisos :\njaviercruces@IWEB:~$ cd /var/www/ Cambiamos usuario y grupos:\njaviercruces@IWEB:/var/www$ sudo chown -R www-data:www-data wordpress/ Una vez hemos configurado todo esto, ahora ya podemos acceder con nuestro navegador a nuestro dominio para iniciar la instalación de WordPress.\nInstalación Web Accedemos a la url que hemos puesto en el ServerName de nuestro sitio virtual y posteriormente hemos configurado en el fichero hosts .\nLo primero sera seleccionar el idioma :\nA continuación nos dará una breve explicación de que es el CMS WordPress :\nAhora deberás de introducir los datos referente a los usuarios y el nombre de la base de datos que has creado con anterioridad\nUna vez introducidos los datos correctos continuaremos con la instalación :\nAhora deberás de introducir los datos para tu wordpress , como el nombre del sitio asi como la creación de un usuario administrador para que posteriormente puedas acceder a wp-admin:\nListo !! Ya has instalado wordpress\nAhora para acceder al panel de administración de wordpress deberás de introducir la siguiente url en tu navegador e inicia sesión con el usuario que has creado:\nListo !! Asi se ve el panel de administración de wordpress:\n","date":"October 28, 2023","hero":"/javierasping.github.io/images/iweb/wordpress/portada_wordpress.png","permalink":"https:/javierasping.github.io/posts/iaw/wordpress/instalacion_wordpress/","summary":"Instalación WordPress en Debian 12 con pila LAMP PHP-8 WordPress es un sistema de gestión de contenidos (CMS, por sus siglas en inglés) de código abierto muy popular que se utiliza para crear y administrar sitios web y blogs. Fue lanzado por primera vez en 2003 y desde entonces ha ganado una amplia base de usuarios y una comunidad activa de desarrolladores y diseñadores.\nPreparación Antes de empezar con la instalación de WordPress vamos a dejar claro en una lista cual es el ecosistema de nuestro servidor para que todo funcione correctamente:","tags":["WordPress","CMS","IWEB","AW","debian"],"title":"Instalación WordPress en Debian 12 con pila LAMP PHP-8"},{"categories":null,"contents":"Instalación WordPress en Debian 12 con pila LEMP PHP-8 WordPress es un sistema de gestión de contenidos (CMS, por sus siglas en inglés) de código abierto muy popular que se utiliza para crear y administrar sitios web y blogs. Fue lanzado por primera vez en 2003 y desde entonces ha ganado una amplia base de usuarios y una comunidad activa de desarrolladores y diseñadores.\nRequisitos previos Servidor con Linux: Debes disponer de un servidor que ejecute Linux , la guía esta pensada para Debian 12 . Usuario con permisos de superusuario: Debes tener acceso a un usuario con privilegios sudo en el servidor para poder llevar a cabo las tareas de instalación y configuración. Nombre de Dominio Completo (FQDN): Si deseas acceder a tu sitio WordPress a través de un dominio personalizado, asegúrate de tener configurado y apuntando un nombre de dominio completo (FQDN) al servidor. Acceso a Internet: Necesitas acceso a Internet para descargar paquetes y realizar actualizaciones durante el proceso de instalación. Asegúrate de cumplir con todos estos requisitos antes de comenzar con la instalación de WordPress en tu servidor .\nSi no tienes instalado la pila LEMP sigue puedes hacerlo en este enlace.\nCreación de un VirtualHost en Nginx La creación de un VirtualHost en Nginx te permite configurar múltiples sitios web en un único servidor. Sigue estos pasos para crear un VirtualHost en Nginx.\nCopia el archivo de configuración por defecto de Nginx para usarlo como ejemplo y nómbralo como quieras. En este ejemplo, lo nombraremos \u0026ldquo;wordpress\u0026rdquo; , ya que vamos a instalarlo sin embargo el nombre es meramente informativo.\njaviercruces@IWEB:~$ sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/wordpress Vamos a editar el contenido del mismo , para ello :\njaviercruces@IWEB:~$ sudo nano /etc/nginx/sites-available/wordpress Aquí te dejo el ejemplo del fichero de configuración de mi sitio , asegúrate de definir el nombre del servidor (tu dominio) y el directorio raíz del sitio.\nserver { listen 80; root /var/www/wordpress; # Cambia esta linea por la ubicación del directorio root de tu wordpress index index.php index.html index.htm; server_name wordpress.fjcd.es; # Cambia esta linea y pon el FQDN , a traves de este accederás a tu wordpress client_max_body_size 500M; location / { try_files $uri $uri/ /index.php?$args; } location = /favicon.ico { log_not_found off; access_log off; } location ~* \\.(js|css|png|jpg|jpeg|gif|ico)$ { expires max; log_not_found off; } location = /robots.txt { allow all; log_not_found off; access_log off; } location ~ \\.php$ { include snippets/fastcgi-php.conf; fastcgi_pass 127.0.0.1:9000; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; } } Para hacer esta configuración activa vamos a crear un enlace simbólico\njaviercruces@IWEB:~$ sudo ln -s /etc/nginx/sites-available/wordpress /etc/nginx/sites-enabled/ Ahora vamos a reiniciar nginx , para que se apliquen los cambios :\njaviercruces@IWEB:~$ sudo systemctl reload nginx Para acceder a este virtualhost , en la maquina donde vayas a acceder al wordpress , al no tener servidor dns recuerda poner en el fichero host la ip de tu servidor con el ServerName :\njaviercruces@HPOMEN15:~$ cat /etc/hosts #Añade la IP de tu servidor y el ServerName correspondiente (wordpress.fjcd.es) #Ponlo al final del fichero y no modifiques las lineas existentes en tu fichero 192.168.125.27 wordpress.fjcd.es Creación de la base de datos con un usuario. Te recomiendo que apuntes los datos introducidos a continuación ya que los necesitaras mas adelante . Nos conectamos a la base de datos :\njaviercruces@IWEB:~$ sudo mysql -u root -p Enter password: Welcome to the MariaDB monitor. Commands end with ; or \\g. Your MariaDB connection id is 31 Server version: 10.11.4-MariaDB-1~deb12u1 Debian 12 Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others. Type \u0026#39;help;\u0026#39; or \u0026#39;\\h\u0026#39; for help. Type \u0026#39;\\c\u0026#39; to clear the current input statement. #Creamos una base de datos : MariaDB [(none)]\u0026gt; CREATE DATABASE fjcd_wordpress; Query OK, 1 row affected (0,001 sec) #Nos creamos el usuario para nuestra base de datos MariaDB [(none)]\u0026gt; CREATE USER \u0026#39;fjcd-wordpress\u0026#39;@\u0026#39;localhost\u0026#39; IDENTIFIED BY \u0026#39;tu_contraseña\u0026#39;; Query OK, 0 rows affected (0,013 sec) #Le damos permisos sobre la base de datos que hemos creado: MariaDB [(none)]\u0026gt; GRANT ALL PRIVILEGES ON fjcd_wordpress.* TO \u0026#39;fjcd-wordpress\u0026#39;@\u0026#39;localhost\u0026#39;; Query OK, 0 rows affected (0,010 sec) #Actualizamos los permisos: MariaDB [(none)]\u0026gt; FLUSH PRIVILEGES; Query OK, 0 rows affected (0,000 sec) #Nos salimos de la CLI de mysql MariaDB [(none)]\u0026gt; EXIT; Bye Instalación de WordPress Lo primero que haremos será descargarnos WordPress, podemos hacerlo usando wget o si lo tenemos descargado en nuestro anfitrión pasarlo haciendo uso de SCP o FTP .\njaviercruces@IWEB:~$ wget https://wordpress.org/latest.tar.gz --2023-10-27 12:33:17-- https://wordpress.org/latest.tar.gz Resolviendo wordpress.org (wordpress.org)... 198.143.164.252 Conectando con wordpress.org (wordpress.org)[198.143.164.252]:443... conectado. Petición HTTP enviada, esperando respuesta... 200 OK Longitud: 23465047 (22M) [application/octet-stream] Grabando a: «latest.tar.gz» latest.tar.gz 100%[=====================================\u0026gt;] 22,38M 14,8MB/s en 1,5s 2023-10-27 12:33:19 (14,8 MB/s) - «latest.tar.gz» guardado [23465047/23465047] Y descomprimiremos el fichero y copiaremos los ficheros dentro del DocumentRoot de nuestro VirtualHost:\njaviercruces@IWEB:~$ sudo mkdir /var/www/wordpress/ javiercruces@IWEB:~$ sudo tar -zxf latest.tar.gz -C /var/www/ Entramos a la ruta del WordPress para realizar poner correctamente el esquema de permisos :\njaviercruces@IWEB:~$ cd /var/www/ Cambiamos usuario y grupos:\njaviercruces@IWEB:/var/www$ sudo chown -R www-data:www-data wordpress/ Una vez hemos configurado todo esto, ahora ya podemos acceder con nuestro navegador a nuestro dominio para iniciar la instalación de WordPress.\nInstalación Web Accedemos a la url que hemos puesto en el ServerName de nuestro sitio virtual y posteriormente hemos configurado en el fichero hosts .\nLo primero sera seleccionar el idioma :\nA continuación nos dará una breve explicación de que es el CMS WordPress :\nAhora deberás de introducir los datos referente a los usuarios y el nombre de la base de datos que has creado con anterioridad\nUna vez introducidos los datos correctos continuaremos con la instalación :\nAhora deberás de introducir los datos para tu wordpress , como el nombre del sitio asi como la creación de un usuario administrador para que posteriormente puedas acceder a wp-admin:\nListo !! Ya has instalado wordpress\nAhora para acceder al panel de administración de wordpress deberás de introducir la siguiente url en tu navegador e inicia sesión con el usuario que has creado:\nListo !! Asi se ve el panel de administración de wordpress:\n","date":"October 28, 2023","hero":"/javierasping.github.io/images/iweb/wordpress/portada_wordpress.png","permalink":"https:/javierasping.github.io/posts/iaw/wordpress_lemp/instalacion_wordpress_lemp/","summary":"Instalación WordPress en Debian 12 con pila LEMP PHP-8 WordPress es un sistema de gestión de contenidos (CMS, por sus siglas en inglés) de código abierto muy popular que se utiliza para crear y administrar sitios web y blogs. Fue lanzado por primera vez en 2003 y desde entonces ha ganado una amplia base de usuarios y una comunidad activa de desarrolladores y diseñadores.\nRequisitos previos Servidor con Linux: Debes disponer de un servidor que ejecute Linux , la guía esta pensada para Debian 12 .","tags":["WordPress","CMS","IWEB","AW","debian"],"title":"Instalación WordPress en Debian 12 con pila LEMP PHP-8"},{"categories":null,"contents":"Active Directory en Ubuntu En el siguiente post voy a montar un escenario de Active Directory sobre un ubuntu , ademas uniremos varios clientes Windows y linux al mismo .\nIntroducción Se quiere configurar un servidor Linux (Ubuntu Server 20.04 LTS) para dar servicio a un conjunto de equipos clientes (Windows y Linux).\nAprovecharé que el escenario lo tenemos montado de las anteriores actividades de clase y restauraré las instantáneas para disponer de las máquinas limpias .\nPreparación del entorno 1. El servidor Linux no tendrá entorno gráfico. Tendrá al menos las particiones: raiz, home y de intercambio. Aquí podemos ver que no tengo instalado entorno gráfico , podemos ver que el servicio está activo, sin embargo, no se lanza ningún entorno . Además, si buscamos algún proceso con los nombres de escritorio más conocidos no nos lanza ningún resultado .\nAquí te muestro las particiones que tiene mi servidor Ubuntu (raíz , boot , home y swap):\n2.El servidor debe estar preparado para que pueda administrarse de forma remota (a partir de este momento toda la gestión se hará remotamente desde otro equipo de la red). Para administrarlo de forma remota utilizaré ssh, para ello lo instalamos en el servidor :\nUna vez que se instale lo tendremos funcionando , no es necesario realizar ninguna configuración .\nSi consultamos el estado del servicio podemos ver que ha tomado la configuración por defecto :\nPara conectarnos remotamente necesitaremos saber la IP del equipo o el nombre :\nEn mi caso me conectaré desde la red externa a nuestro servidor (enp0s3) , previamente hemos configurado la red con netplan :\nY hemos aplicado los cambios :\nUna vez conociendo estos datos nos conectaremos por ssh desde una máquina de nuestra red para seguir con los demás apartados, en mi caso utilizaré mi máquina host, para ello me he instalado el paquete openssh-client previamente:\n3. Crea los usuarios y grupos siguientes Grupos: profesores, alumnos, smr, asir. Creo los grupos : Usuario a crear : profedesiree, profejose , proferaul , erik, manu, oliver, sandra, fabio y domi Creo los usuarios :\nLos he creado con directorio home y les he asignado la contraseña 1234:\nUsuarios del grupo profesores: profedesiree, profejose y proferaul. Los añadimos : Podemos comprobar que se han añadido con el siguiente comando :\nUsuarios del grupo alumnos: erik, manu, oliver, sandra, fabio y domi. Los añadimos :\nComprobamos que se han añadido :\nUsuarios del grupo smr: profedesiree, profejose, proferaul, erik, manu y oliver. Los añadimos:\nComprobamos que se han añadido :\nUsuarios del grupo asir: sandra, fabio y domi. Comprobamos que se han añadido :\n4. Todos los usuarios serán usuarios Samba. Para ello deberemos tener instalado samba : Para añadir un usuario samba debemos de introducir el siguiente comando y asignarle una contraseña :\nEsto lo haremos con los 9 usuarios , una vez añadidos podemos utilizar este comando para listar los usuarios samba que tenemos :\nControlador de dominio samba 5. Crea y configura un controlador de dominio Samba en el Servidor. Antes de comenzar con la instalación debemos de tener en cuenta una serie de datos :\nNombre del controlador de dominio de Active Directory: FJCD\nNombre DNS del dominio de Active Directory: javiercruces.local Nombre del Reino Kerberos: javiercruces.local Nombre NetBIOS del dominio: javiercruces Dirección IP fija del servidor: 192.168.0.1 Rol del servidor: Domain Controller (DC) Reenviador DNS:192.168.0.1 Una vez con estos datos claros comenzaremos con la instalación , lo primero será actualizar el sistema :\nA continuación deberemos de cambiar el nombre de nuestro servidor para estar acorde con los datos que hemos seleccionado anteriormente, para ello yo he seleccionado mis iniciales , para ello editamos el fichero /etc/hostname :\nAhora será necesario que reiniciemos el equipo para que se apliquen los cambios , perderemos la conexión por ssh :\nRetomamos el control remoto por ssh en unos minutos cuando haya reiniciado :\nComo puedes observar nos hemos conectado usando el antiguo nombre que tenia nuestro servidor , esto es porque el archivo /etc/hosts, contiene una relación de direcciones IP con sus correspondientes nombres lógicos. Este archivo contenía una referencia al nombre antiguo del propio servidor, que cambiaremos para que haga referencia al nuevo nombre :\nUna vez hemos aplicado estos dos cambios , antes de continuar solo nos quedara asegurarnos de que nuestro servidor tiene correctamente configurada la red . En nuestro escenario disponemos de dos tarjetas de red en nuestro servidor :\nenp0s3 (Tarjeta externa , nos da acceso a internet) enp0s8 (Tarjeta interna , es la que se comunica con nuestra red local) Debido a esto la primera está configurada por DHCP, ya que no nos importa la configuración que se le asigne , sin embargo, la segunda está configurada estáticamente, ya que debemos de controlar la configuración de la misma para que tengamos control sobre la misma y posteriormente unir los equipos al dominio .\nUna vez aclarado esto , al principio del documento indico como se configuraran las interfaces , aquí dejo un pantallazo para recordar las direcciones :\nAhora necesitaremos disponer de unos paquetes que deberán de estar instalados antes de comenzar ,estos son :\nsamba: servidor de archivos, impresión y autenticación para SMB/CIFS. smbclient: clientes de línea de comandos para SMB/CIFS. krb5-config: Archivos de configuración para Kerberos Version 5. winbind: Servicio para resolver información sobre usuarios y grupos de servidores Windows NT. Podremos hacer la instalación de estos cuatro paquetes con un simple comando :\nKerberos, nos preguntará por el reino (nombre de dominio ) durante la instalación de los paquetes, en nuestro caso será javiercruces.local :\nAquí introduciremos el nombre de nuestro equipo servidor :\nAquí volveremos a introducir el nombre de nuestro servidor :\nDespués de esto, la instalación continuará un poco más, pero sin necesitar que aportemos más información:\nAhora configuraremos samba , pero antes de hacerlo le cambiaremos el nombre al archivo de configuración smb.conf para que no lo use mientras que lo configuramos y así además tendremos una copia del archivo original :\nUsaremos el comando samba-tool domain provision, para que sea el propio comando sea el que nos solicite los valores que necesite y, cuando sea posible, nos sugiera sus valores predeterminados. Así, si estos coinciden con los que nosotros esperamos, será muy probable que los pasos anteriores hayan sido los correctos:\nComo puedes observar es muy intuitivo hacerlo, ya que salvo la IP de forwarder y la contraseña de administrador hemos elegido las respuestas que el mismo comando nos ofrece . Esta debe cumplir unos requisitos de complejidad mínimos :\n8 caracteres como mínimo 1 mayúscula 1 numero o símbolo Con esto, además de configurarse Samba , se ha generado un archivo de configuración para Kerberos en la ruta /var/lib/samba/private/krb5.conf. Asi que lo copiaremos a /etc :\nLo siguiente será configurar la resolución de nombres, para ello comenzaremos deteniendo los servicios implicados :\nTambién quitaremos que se inicien automáticamente al reiniciar el equipo :\nA continuación, nos aseguraremos de que el servicio samba-ad-dc se podrá iniciar sin dificultades, evitando cualquier enmascaramiento que pueda existir:\nDespués, eliminamos el archivo resolv.conf que, en realidad, será un enlace a stub-resolv.conf. Así que lo eliminamos y creamos uno nuevo para sustiruirlo:\nAhora introducimos los valores adecuados en función de nuestro dominio , para mi caso :\nGuardamos los cambios y salimos del fichero.\nIniciaremos el servicio de samba-ad-dc y lo habilitaremos para que se inicie al reiniciar el equipo :\nComprobar la instalación Si hemos conseguido llegar hasta aquí , tenemos todas las papeletas para que nuestra instalación haya sido correcta . Pero nunca está de más hacer unas comprobaciones\nConsultar el nivel del dominio y crear un nuevo usuario Para saber nuestro nivel de dominio simplemente introducimos este comando :\nAl hacerlo, comprobamos que el nivel del dominio, y del bosque donde se encuentra, equivale a una instalación Windows Server 2008 R2\nProbaremos a crear una nueva cuenta de usuario en el dominio con el comando(deberemos de tener en cuenta la política de contraseñas):\nConfirmar que el servidor DNS funciona de forma adecuada Lo primero será comprobar el servicio LDAP sobre el protocolo TCP, para lo que escribiremos la siguiente orden:\nSi tenemos una respuesta parecida a esa, todo funciona como debe.\nA continuación, comprobaremos el registro SRV para el protocolo Kerberos sobre UDP, para lo que usamos la siguiente orden:\nLa respuesta debe ser parecida a la anterior, si es así registro SRV es correcto.\nPor último, comprobamos la resolución del nombre de nuestro servidor:\nComprobar el funcionamiento de Kerberos Para comprobar el funcionamiento podemos, por ejemplo, usar el comando smbclient para comprobar los servicios que puede obtener un determinado usuario. Para ello utilizaremos el siguiente comando :\nSi la autenticación es correcta , ya sabremos que Kerberos está haciendo su trabajo . Si queremos, incluso podemos iniciar sesión en el servidor empleando la cuenta de administrador. Para lograrlo, usaremos una sintaxis como esta:\nYa hemos verificado todo así que podemos empezar a unir clientes a nuestro dominio .\nUnir clientes al dominio 6. Integra al menos un cliente con Windows en el dominio Samba. Cliente Windows Lo primero que haremos será configurar la red de nuestro cliente :\nIP : 192.168.0.10 Mascará de subred : /24 Puerta de enlace 192.168.0.1 DNS 192.168.0.1 Ambas tarjetas (Interna del servidor y la de Windows cliente ) deberán de estar en red interna para que se comuniquen .\nUna vez configurada la tarjeta le haremos un ping al servidor para comprobar la conectividad:\nAhora accedemos a panel de control → sistema y seguridad → sistema → configuración avanzada del sistema → nombre de equipo → id de red . Seleccionamos la primera opción para unirnos al dominio\nSeleccionaremos la primera opción, ya que nuestra red tiene un dominio :\nAhora deberemos de introducir los datos del usuario administrador y el nombre de nuestro dominio :\nEl usuario administrador que se crea por defecto en samba se llama administrator\nUna vez introducido los datos nos preguntará si queremos crear una cuenta de dominio en este equipo , yo seleccionare que no :\nY para que se apliquen los cambios deberemos de reiniciar :\nUna vez reiniciado podremos iniciar sesión con los diferentes usuarios de nuestro dominio :\nPodemos ver que podemos iniciar sesión en el equipo con las cuentas de nuestro dominio:\nCliente Linux Lo primero será configurar la red, para ello le he asignado la dirección IP 192.168.0.2\nAhora deberemos añadir a nuestro servidor en el fichero hosts, una línea en la que ira la dirección IP de nuestro servidor seguido del nombre de este y el nombre completo del dominio de nuestro servidor :\nPara comprobar este cambio que hemos realizado le haremos un ping al servidor usando su nombre :\nAhora actualizaremos el equipo para poder descargar las versiones más recientes desde los repositorios :\nPara tener internet en el cliente he configurado previamente NAT en el servidor .\nUna vez actualizado el sistema instalaremos los siguientes paquetes :\nsssd (System Security Services Daemon): Administra los mecanismos de autenticación y el acceso a directorios remotos. Sustituye al clásico Winbind aportando más velocidad y estabilidad. heimdal-clients: Se trata de una implementación libre de Kerberos 5 creada con la intención de ser compatible con el protocolo Kerberos implementado por el MIT. msktutil: La utilidad que obtiene y administra los keytabs de Kerberos en un entorno de Microsoft Active Directory. Podemos hacerlo con 1 comando :\nMientras instalamos nos solicitara el nombre de nuestro servidor de active directory asi que lo introducimos :\nAhora nos preguntará el nombre del equipo que actúa como servidor en nuestro caso es :\nPor último nos preguntará por el servidor administrativo que en nuestro caso es el mismo:\nUna vez hecho esto, la instalación continuará sin que tengamos que introducir más datos.\nAhora vamos a añadir en Kerberos unos datos adicionales para asegurarnos que se comporte correctamente. Comenzaremos por cambiar el nombre del archivo de configuración, para poder volver a los parámetros originales si fuese preciso:\nAhora utilizaremos nano para editar la configuración del archivo , este estará vacío así que añadiremos lo siguiente :\nUna vez rellenado con los datos de nuestro dominio, guardamos el archivos y comprobaremos si podemos iniciarnos sesión en el dominio :\nSi la salida no nos ofrece ningún tipo de error, es porque el proceso de autenticación ha funcionado correctamente.\nProcederemos a unirnos al dominio, para ello utilizaremos el siguiente comando :\nEste comando deberemos de rellenarlo conforme a los datos de nuestro dominio , en el caso de que no nos salga ninguna salida , nos habremos unido al dominio .\nPara completar la tarea, eliminaremos los tickets de autorización de kerberos que activamos al ejecutar kinit. Para lograrlo, basta con utilizar el comando kdestroy.\nCompartir carpetas 7. Se necesitan carpetas personales en el servidor para cada usuario. También habrá una carpeta para cada grupo, a la que solo podrán acceder y escribir los miembros de cada grupo. Vamos a crear los directorios en la partición raíz para cada usuario y uno para cada grupo. Estos los crearé con el nombre del grupo o usuario:\nTenemos que tener en cuenta que los usuarios samba que hemos generado al principio del documento se han eliminado al instalar el dominio y deberemos de producirlos nuevamente.\nVamos a compartir estas carpetas a través de samba, para ello editamos el fichero /etc/samba/smb.conf :\nPara indicar que pueda acceder un grupo deberemos de poner una @ delante dele nombre del grupo :\nSolo nos quedaría asignar correctamente los permisos locales adecuados para nuestros recursos y cambiar los propietarios de las carpetas para que los usuarios puedan escribir en ellas :\nEsto sería lo correcto, pero si le asignamos los permisos 775 no podremos escribir en la carpeta, así que le asignaremos todos los permisos :\nAhora repetiremos esto con todos los directorios , primero le daré los permisos:\nY por último cambiaremos los propietarios de las carpetas y haremos a cada usuario o grupo sus respectivos dueños :\nVamos a asegurarnos de que hemos aplicado correctamente estos cambios :\nVamos a comprobar que podemos acceder a los recursos compartidos desde el usuario oliver , accederemos a la carpeta Oliver y a crear un directorio dentro :\n8. Desde Windows acceder a estas carpetas a través de unidades de red. Desde el explorador de archivos podremos ver todos los recursos compartidos en la red .Ahora vamos a crear unidades de red, así que por ejemplo vamos a añadir la carpeta Oliver al usuario Oliver como unidad de red, para esto , hacemos clic derecho en la carpeta \u0026gt; conectar a unidad de red :\nY seleccionaremos una letra para asignarle a la unidad de red :\nAhora esta unidad nos aparecerá en este equipo :\nPerfiles móviles 9. Definir perfiles móviles en el servidor Linux mediante Samba, de forma que los usuarios se puedan autentificar en diferentes máquinas Windows, manteniendo su configuración. Para realizar esto vamos a instalarlos RSAT (Remote Server Administration Tools) que nos permitirá administrar nuestro controlador de dominio samba de forma idéntica a windows server . Para añadirlas buscaremos en la búsqueda de Windows *Añadir características opcionales una vez aquí le daremos a añadir característica :\nUna vez aquí buscaremos las siguientes características con RSAT y las instalaremos :\nUna vez instaladas se nos creará una aplicación similar a la de un Windows server llamada herramientas administrativas :\nSe nos abrirá una carpeta con las herramientas de administración :\nY buscaremos administración de usuarios y equipos de active directory o escribimos en ejecutar dsa.msc , esto lo haremos con el usuario administrador de nuestro dominio para poder acceder a esta:\nAntes de crear nuestro usuario móvil crearemos un recurso de red al igual que hemos hecho anteriormente llamado perfiles y le daremos permisos al grupo móviles para que estos puedan escribir en ellos :\nPara que nuestro usuario pueda escribir en este directorio lo añadiremos al grupo :\nAhora nos vamos a la configuración de nuestro usuario y le cambiamos la ruta del perfil . Pondremos la ruta de nuestra carpeta compartida perfiles seguida de %username% :\nGuardamos y ya tendríamos hecho nuestro perfil móvil creado .\nVamos a demostrar el funcionamiento del perfil móvil , para ello le he cambiado el fondo y he creado dos carpetas :\nAhora vamos a cerrar sesión e iniciarla en el Windows de la derecha :\nVemos que se ha realizado correctamente el perfil móvil .\nNFS 10. Mediante NFS, se compartirán en el servidor las carpetas: proyectos, documentación, programas_y_drivers. De la primera solo se podrá leer; en las dos últimas también se podrá escribir. Los equipos Linux montarán las carpetas automáticamente en el arranque. Lo primero que haremos será instalarnos los siguientes paquetes :\nAhora crearemos en la raíz los directorios que vamos a compartir :\nY le cambiaremos el propietario y los permisos a estos directorios :\nDespués de esto, debemos editar el archivo /etc/exports. Este es el archivo donde se indican a NFS las carpetas que vamos a compartir . La primera será solo de lectura y las dos últimas se podrán escribir :\nPara poder acceder a estos recursos en el servidor vamos a instalarlos los siguientes paquetes :\nAhora vamos a crear los directorios donde montaremos nuestras carpetas :\nPara montarlas manualmente en Linux haremos el siguiente comando :\nVamos a comprobar que en proyectos no podremos escribir :\nMientras que en las otras dos si podremos escribir :\nSi queremos acceder a estos recursos en Windows \u0026ndash;\u0026gt; \\192.168.0.1\\documentacion\n\\192.168.0.1\\proyectos (directorio de solo lectura)\n\\192.168.0.1\\programas_y_drivers\nPara poder visualizarlos será necesario tener instalados las siguientes características en Windows (Podemos acceder a este programa a través del buscador de Windows escribiendo características de Windows)\nPara finalizar con este punto vamos a configurar que los equipos Linux monten automáticamente al arrancar los directorios . Editaremos el fichero /etc/fstab añadiendo las siguientes líneas :\nUna vez hecho esto reiniciamos y veremos que se nos habrán montado automáticamente:\nCuotas 11. La carpeta /home del servidor tendrá un sistema de cuotas para evitar la saturación con archivos de los usuarios (100 MB por usuario). Lo primero que haremos será instalar los paquetes para implementar cuotas :\nAhora permitiremos las cuotas en la partición /home añadiendo esto al fstab de nuestro servidor :\nRemontamos la partición home para que se apliquen estos cambios :\nY aplicamos cuotas en la partición /home\nComprobaremos que en la raíz de la partición se nos ha creado dos archivos (aquota.group y aquota.user):\nAhora le aplicaremos la cuota de 100Mb a oliver usando edquota :\nAhora usaremos una herramienta la cual es gawk, el cual nos permitirá concatenándolo con este comando, aplicarle la cuota que le acabamos de crear a Oliver a todos nuestros usuarios :\nLa orden que acabamos de lanzar ha extraído una lista de todos los usuarios y ha aplicado la cuota de Oliver a todos usuarios con un UID mayor a 499 .\nAhora revisaremos las cuotas para ver como han quedado :\nPara comprobar que funciona vamos a agotar la cuota del usuario proferaul , para ello crearemos un archivo de 30 MB :\nAhora lo moveremos al directorio home de él y le haremos propietario del archivo :\nVemos que se actualiza el espacio usado en el directorio del usuario :\nWebmin 12. Instala Webmin en el servidor para tener la posibilidad de gestionarlo gráficamente desde un cliente. Demuestra alguna de sus funcionalidades. Webmin es un panel de control web moderno que le permite administrar su servidor Linux a través de una interfaz basada en navegador.\nNecesitaremos instalar apache para poder instalar webmin en nuestro servidor :\nAhora deberemos de añadir el repositorio de webmin , así que editaremos el sources.list y lo añadiremos :\nGuardamos el archivo y haremos un apt update para actualizar los repositorios , nos saldrá un error advirtiéndonos de que el repositorio no es fiable .\nAsí que ahora descargaremos la clave PGP de Webmin y la añadiremos a nuestro sistema :\nVolvemos a hacer un apt update y veremos que ahora el repositorio es fiable\nA continuación descargaremos el paquete webmin :\nLas últimas líneas de la instalación nos dará los datos para acceder vía web a este servicio :\nAsí que en un cliente vamos al navegador y accedemos a esta url :\nNos dirá que la conexión no es privada , para saltarnos esta advertencia Configuración avanzada \u0026gt; acceder\nTendremos un portal donde deberemos entrar con un usuario administrador de nuestro servidor :\nLo primero que veremos en la interfaz web será un monitor de recursos, así como datos de nuestro equipo :\nPodremos ver un histórico del monitor de recursos, el cual nos mostrara las horas y el porcentaje de uso de nuestro hardware, así como información del sistema :\nTenemos más apartados como el de logins recientes o interfaces de red , el cual nos dará información de quien se ha conectado y las configuraciones de las mismas respectivamente :\nPara finalizar con el panel tendremos una última ventana la cual nos dirá el uso del disco y particiones :\nUna vez que hemos echado un vistazo a la página principal vamos a aprovechar una funcionalidad que tiene que nos permite ver los directorios compartidos por nfs , para acceder aquí vamos a networking \u0026gt; NFS exports :\nVamos, que además nos permite editar los directorios compartidos actuales, así como añadir o eliminar estos .\nAdemás, esta herramienta nos permite configurar un Firewall con iptables , lo cual hoy día es de vital importancia disponer de seguridad en nuestra red :\nIncluso dispone de una terminal web para que podamos administrar el servidor desde un cliente , para acceder a esta desplegamos el menú y pulsamos sobre el símbolo de terminal o pulsamos Alt + K :\nVemos que usara ssh con el usuario conectado en la aplicación , en mi caso javiercruces :\nWebmin incluye muchas más funciones de administración que nos ayuda a trabajar con el servidor de forma gráfica para hacer más ameno la administración del mismo ,desde actualizar paquetes hasta configurar un Firewall . Además, usa https, por lo que nuestro tráfico viajara cifrado , lo que nos permitiría configurar nat para poder acceder desde un dispositivo que este fuera de nuestra red , sin que un snifer pueda descifrar nuestro trafico fácilmente. Es aconsejable que cambiemos el certificado auto-firmado que usa webmin por uno propio que podemos generar con Let`s encrypt, por ejemplo .\nCUPS 13. Habrá un servidor de impresión CUPS, que se administrará desde un cliente Ubuntu. Lo primero que deberemos de hacer es instalar en el servidor cups : Una vez hecho esto vamos a configurar el servicio para permitir ser administrado desde nuestro cliente Ubuntu , para ello editamos el siguiente fichero :\nAhora añadiremos los siguientes parámetros :\nListen 192.168.0.1:631 allow 192.168.0.0/24 Para permitir que nuestro cliente Ubuntu sea capaz de administrar el servicio\nAhora solo nos quedaría reiniciar el servicio :\nNos desplazaremos al cliente y en el navegador introduciremos la ip de nuestro servidor seguido de dos puntos y 631 :\nCon esto hemos comprobado que el cliente puede administrar cups .\n14. Configura una impresora en red para todos los usuarios, con límites de páginas diarias para todos los usuarios. Para compartir nuestra impresora en red , accedemos al panel web y en el apartado de administración marcamos compartir impresoras conectadas a este sistema :\nAntes de establecer los límites vamos a habilitar que el servicio registre el nombre de los usuarios al mandar archivos , para ello en el fichero cupsd.conf cambiamos este valor de default a none :\nAhora reiniciaremos el servicio :\nPara establecer un límite diario para cada usuarios de 20 páginas por ejemplo , aplicaríamos el siguiente comando para nuestra impresora .\nUna vez aplicado este comando los usuarios solo podrán imprimir el número indicado de páginas ,cuando supere el límite los trabajos se mandaran a cups , pero este los desechara de la cola y no los imprimirá :\nEs decir, el trabajo 21 en este ejemplo no se creará hasta qué pasen 24 horas .\nBibliografía Como saber que escritorio tengo Montar controlador de dominio samba Configurar la red con netplan Unir cliente linux a dominio parte 1 Unir cliente linux a dominio parte 2 Administrar dominio con RSAT Acceder carpetas compartidas w10 Cuotas Instalación y uso de webmin Comandos CUPS ","date":"September 20, 2023","hero":"/javierasping.github.io/images/sistemas/ad_ubuntu/portada.jpeg","permalink":"https:/javierasping.github.io/posts/sistemas/ad_ubuntu/ad_ubuntu/","summary":"Active Directory en Ubuntu En el siguiente post voy a montar un escenario de Active Directory sobre un ubuntu , ademas uniremos varios clientes Windows y linux al mismo .\nIntroducción Se quiere configurar un servidor Linux (Ubuntu Server 20.04 LTS) para dar servicio a un conjunto de equipos clientes (Windows y Linux).\nAprovecharé que el escenario lo tenemos montado de las anteriores actividades de clase y restauraré las instantáneas para disponer de las máquinas limpias .","tags":["Debian 12","sistemas","ISO","ASO"],"title":"Active Directory en Ubuntu"},{"categories":null,"contents":"Comandos programación de tareas en Linux La gestión eficiente de tareas programadas es esencial para los administradores de sistemas, ya que facilita la ejecución automática de procesos rutinarios. En este contexto, contar con un conjunto sólido de comandos en Linux para programar y controlar tareas se convierte en una herramienta fundamental.\nComando sleep El comando sleep pausa la ejecución en la terminal durante un intervalo de tiempo especificado antes de regresar a la línea de comandos. Puedes indicar el tiempo en segundos, minutos, horas o días. Este comando se encuentra en el paquete coreutils.\ns : segundos m : minutos h : horas d : días Ej: sleep 10m –\u0026gt; esperar 10 min\nPor si solo no tiene ninguna utilidad , sin embargo es muy útil en Scripts . Aquí un pequeño ejemplo :\ndate +\u0026quot;%H:%M:%S\u0026quot;;sleep 5;date +\u0026quot;%H:%M:%S\u0026quot;\nComando watch La utilidad watch es parte del paquete procps (o procps-ng) que está preinstalado en casi todas las distribuciones Gnu/Linux.\nCuando se usa sin argumentos, esta utilidad ejecutará el comando especificado cada dos segundos:\nPodemos especificar el tiempo de repetición utilizando el parámetro -n , especificando el parámetro en segundos :\nwatch -n 5 date –\u0026gt; Cada 5 segundos\nSi queremos eliminar el encabezado , es decir que nos muestre cada cuanto tiempo se repite , utilizamos el parámetro -t :\nSi queremos poner un mensaje de error en caso de que el comando no pueda ejecutarse utilizamos el parámetro -e seguido del mensaje de error :\nwatch -e ‘error’\nLa opción -b de watch emite un pitido cada vez que el comando sale con un código de estado distinto de cero.\nwatch -b\nCon el parámetro -d nos señala los cambios que han ocurrido en la ejecución del comando : watch -d\nComando at Este comando se usa para ejecutar comandos a una determinada hora , principalmente se usa para programar tareas periódicas como puedes ser , copias de seguridad .\nLos principales parámetros son :\nV :imprime el número de versión en el error estándar y sale con éxito.\nm :Enviar correo al usuario cuando el trabajo haya finalizado aunque no haya habido salida. -M: Nunca envía correo al usuario.\nf :archivo Lee el trabajo desde un archivo en lugar de la entrada estándar.\nt :time Ejecuta el trabajo a la hora, dada en el formato [[CC]YY]MMDDhhmm[.ss]\nl :Es un alias para atq.\nr :Es un alias para atrm.\nd: Es un alias para atrm.\nb: Es un alias para batch.\nv: Muestra el tiempo que se ejecutará el trabajo antes de leerlo.\nLos tiempos mostrados estarán en el formato \u0026ldquo;Thu Feb 20 14:50:00 1997\u0026rdquo;.\nc recoge los trabajos listados en la línea de comandos en la salida estándar.\nPodemos programar tareas desde la linea de comandos , con echo :\necho \u0026ldquo;sh copia-seguridad.sh\u0026rdquo; | at 10:00 PM\nHa esta tarea se le asignara un numero automáticamente , para listar las tareas que tenemos invocamos el comando at sin ningún parámetro\nSi queremos borrar una tarea programada , utilizamos el parámetro -c seguido con el numero de la tarea a eliminar .\nAlgunos ejemplos para programar tareas son :\nDentro de 30 min : at now + 30 minutes 11AM del próximo 14 abril : at 11:00 AM April 14 Comando crontab El comando crontab se utiliza en sistemas UNIX para programar la ejecución de otros comandos, es decir, para automatizar tareas. Podemos ver los crontabs que se están programados y también editarlos, lógicamente.\nPara verlos, utilizamos este comando: sudo crontab -l Para editarlos: sudo crontab -e\nLas tareas cron siguen una determinada sintaxis. Tienen 5 asteriscos seguidos del comando a ejecutar. Ahora explicaré para qué sirve cada cosa.\n* * * * * /bin/ejecutar/script.sh\nLos 5 asteriscos , de izquierda a derecha, los asteriscos representan:\nMinutos: de 0 a 59. Horas: de 0 a 23. Día del mes: de 1 a 31. Mes: de 1 a 12. Día de la semana: de 0 a 6, siendo 0 el domingo. Si se deja un asterisco, quiere decir \u0026ldquo;cada\u0026rdquo; minuto, hora, día de mes, mes o día de la semana.\nSi queremos que un archivo se ejecute a las 5 de la mañana todos los días : 0 5 * * * ruta_absoluta_del_script\nPara que se ejecute dos veces al día a las 6 AM Y a las 6 PM: 0 6,18 * * * ruta_absoluta_del_script\nMuchas veces tenemos palabras reservadas para facilitar el uso de programas o lenguajes de programación. Cron no podía ser menos, así que tenemos algunas que suelen ser las más comunes. Ya cada uno que lo configure conforme a sus necesidades. Aquí van:\n@reboot: se ejecuta una única vez al inicio. @yearly/@annually: ejecutar cada año. @monthly: ejecutar una vez al mes. @weekly: una vez a la semana. @daily/@midnight: una vez al día. @hourly: cada hora. También debemos conocer los usos de los parámetros :\ncrontab archivo.cron (establecerá el archivo.cron como el crontab del usuario)\ncrontab -e (abrirá el editor preestablecido donde se podrá crear o editar el archivo crontab) crontab -l (lista el crontab actual del usuario, sus tareas de cron)\ncrontab -r (elimina el crontab actual del usuario)\nCuando hagamos algún cambio deberemos de reiniciar el servicio para asegurarnos de que nuestros cambios surtan efecto :\nservice crond restart\nEstos comandos nos dará la posibilidad de automatizar procesos , haciendo mas cómoda y amena la administración de nuestros sistemas .\nBibliografía Comando watch Comando crontab ","date":"September 20, 2023","hero":"/javierasping.github.io/images/sistemas/programacion_tareas/portada.png","permalink":"https:/javierasping.github.io/posts/sistemas/programacion_tareas/programacion_tareas/","summary":"Comandos programación de tareas en Linux La gestión eficiente de tareas programadas es esencial para los administradores de sistemas, ya que facilita la ejecución automática de procesos rutinarios. En este contexto, contar con un conjunto sólido de comandos en Linux para programar y controlar tareas se convierte en una herramienta fundamental.\nComando sleep El comando sleep pausa la ejecución en la terminal durante un intervalo de tiempo especificado antes de regresar a la línea de comandos.","tags":["Debian 12","sistemas","ISO","ASO"],"title":"Comandos programación de tareas en Linux"},{"categories":null,"contents":"Instalar y configurar samba en Debian Samba es una implementación libre y de código abierto del protocolo Server Message Block (SMB), que se utiliza para compartir archivos e impresoras en redes de computadoras. El protocolo SMB es un protocolo de red que permite que los sistemas operativos Windows se comuniquen con otros dispositivos de red, como servidores de archivos, impresoras y otros recursos compartidos.\nSamba facilita la interoperabilidad entre sistemas Windows y sistemas operativos basados en Unix/Linux al permitir que los sistemas Unix compartan archivos y recursos con sistemas Windows utilizando el protocolo SMB/CIFS. Esto significa que un servidor Samba puede actuar como un servidor de archivos para clientes Windows, permitiéndoles acceder y compartir archivos como si estuvieran en un entorno Windows.\n1.Instalación Lo primero sera instalarnos el servidor samba :\nEn el fichero /etc/samba/smb.conf realizaremos la configuración de nuestra carpeta :\nNos crearemos un usuario de samba para poder acceder a los recursos :\nReiniciaremos el servicio para que se aplique la configuración :\n2.Acceso desde Windows Ahora podemos acceder desde un cliente Windows con el usuario que acabamos de crear -–\u0026gt; \\IP\\DIRECTORIO\\COMPARTIDO\nNos pedirá que nos autentiquemos :\nPodremos ver el contenido y crear :\n3.Acceso desde Linux Nos instalamos el paquete smbclient para poder conectarnos a unidades compartidas con samba:\nListar los directorios compartidos :\nNos conectamos al recurso compartido\nCreare un directorio y comprobare que existe :\nBibliografía -Habilitar el acceso de invitado\n","date":"September 20, 2023","hero":"/javierasping.github.io/images/sistemas/samba_debian/portada.png","permalink":"https:/javierasping.github.io/posts/sistemas/samba_debian/samba_debian/","summary":"Instalar y configurar samba en Debian Samba es una implementación libre y de código abierto del protocolo Server Message Block (SMB), que se utiliza para compartir archivos e impresoras en redes de computadoras. El protocolo SMB es un protocolo de red que permite que los sistemas operativos Windows se comuniquen con otros dispositivos de red, como servidores de archivos, impresoras y otros recursos compartidos.\nSamba facilita la interoperabilidad entre sistemas Windows y sistemas operativos basados en Unix/Linux al permitir que los sistemas Unix compartan archivos y recursos con sistemas Windows utilizando el protocolo SMB/CIFS.","tags":["Debian 12","sistemas","ISO","ASO"],"title":"Instalar y configurar samba en Debian"},{"categories":null,"contents":"Documento en el cual se detallan los principales comandos a la hora de detectar incidencias en redes y lograr solucionarlos .\nComandos en Windows Explica el significado de los distintos parámetros a configurar en las Propiedades de TCP/IP en Windows Tenemos que tener en cuenta que cada configuración que hagamos es independiente para cada uno de nuestros adaptadores de red .\nPara acceder a configurar estos parámetros seguiremos la siguiente ruta en nuestro sistema :\nPanel de control \u0026gt;Redes e Internet \u0026gt; Centro de redes y recursos compartidos \u0026gt; Cambiar configuración del adaptador :\nUna vez aquí le daremos Clic derecho \u0026gt; Propiedades \u0026gt; Protocolo de version 4 (TCP/IP)\nUna vez aquí veremos dos pestañas a la cual podemos dirigirnos para configurar nuestra tarjeta , en la pestaña general podemos observar los siguiente apartados :\nEl primer apartado (General) relacionado con nuestra dirección ip :\nObtener una dirección ip automáticamente : Marcaremos esta opción cuando queramos que se use el servicio DHCP para asignar mediante el servicio dirección IP , mascara de subred y la puerta de enlace predeterminada . Usar la siguiente dirección IP : Aquí introduciremos nosotros manualmente la configuración de red deseada : Dirección IP: es una etiqueta numérica que identifica a nuestra maquina de manera única en nuestra red , no puede estar repetida . Mascara de subred : conjunto numérico cuya función es indicar a los dispositivos qué parte de la dirección IP es el número de la red incluyendo la subred, y qué parte es la correspondiente al host. Puerta de enlace predeterminada : Es la dirección ip predeterminada que se le asigna a un equipo para enviar los paquetes a otras redes . En el segundo apartado de esta pestaña realizaremos la configuración referente a los servidores DNS los cuales permitirán traducirnos nombres a direcciones IP para poder navegar .\nObtener la dirección del servidor DNS automáticamente : Esta opción hará que la dirección se obtenga del servidor DHCP que tengamos configurado en nuestra red . Usar la siguientes direcciones del servidor DNS : Esta opción nos sirve para manualmente seleccionar la dirección ip de nuestros servidores DNS: Servidor DNS preferido : La dirección que pongamos aquí sera la primera en consultar en caso de que necesite hacer una resolución Servidor DNS alternativo : Si el servidor primario fallase o estuviera caído en ese momento pasaríamos a utilizar el secundario . En la pestaña configuración alternativa , esta pensado para equipos que necesiten usarse en mas de una red , suele verse en entornos profesionales :\nDirección ip privada automática : Hará uso del servidor DHCP para configurarse . Configurada por el usuario : Nos permitirá introducirla manualmente la configuración (omitiré los campos explicados anteriormente ) : WINS preferido : es un servidor de nombres de Microsoft para NetBIOS, que mantiene una tabla con la correspondencia entre direcciones IP y nombres NetBIOS de ordenadores . WINS alternativo : Si el servidor primario fallase o estuviera caído en ese momento pasaríamos a utilizar el secundario . Utilidad del comando ping Ping es un comando o una herramienta de diagnóstico que permite hacer una verificación del estado de una determinada conexión de un host local con al menos un equipo remoto contemplado en una red de tipo TCP/IP , es la herramienta de diagnostico de redes mas conocida .\nLos usos mas comunes de esta herramienta son :\nComprobar la conectividad de una red. Medir la latencia que tardan en comunicarse dos puntos . Conocer la dirección IP utilizada por un nombre de dominio. Scripts que permiten llevar un registro de la disponibilidad de un servidor remoto. Scripts que permiten conocer cuando existe conexión en un equipo. Para hacer uso de este abriremos una cmd , pulsaremos WIN + R y escribiremos cmd .\nUso general de Ping La sintaxis mas simple de ping es la siguiente : ping [Parámetros] [IP/Nombre]\nSi nos fijamos en la salida del comando vemos que nos permite conoces :\nDirección IP que corresponde al nombre de la máquina remota. El número de secuencia ICMP (“Código que nos devuelve , ej : 0=red inaccesible”). TTL: Tiempo de vida en segundos; como este valor se decrementa en cada máquina en la cual es procesado, debe ser al menos igual o mayor que el número de saltos que dará .Si alguna vez este número es cero, el router interpretará que el paquete está viajando en círculos, por lo tanto, finaliza el proceso. **Latencia :**corresponde al lapso de tiempo en milisegundos que se necesita para dar una vuelta entre las máquinas fuente y destino. Como regla general, la demora de un paquete no debe ser mayor a 200 ms. Estadísticas del ping : Nos reúne toda la información mostrándonos los paquetes perdidos , enviados y recibidos . Además nos muestra el paquete con menor latencia y con mayor así como una media aritmética . PING -T Este parámetro nos permitirá hacer un ping infinito es decir no finalizara hasta que matemos el proceso , si no lo pusiésemos por defecto solo se enviaran 4 trazas . Para finalizar este la ejecución de este comando pulsaremos CTRL + C .\nCuando detengamos la ejecución nos mostrara las estadísticas que ha recopilado , paquetes enviados, paquetes recibidos y paquetes perdidos así como los tiempos medios de ida y vuelta .\nPING -A Este parámetro sirve para que nos resuelva una ip en un nombre de host ,imprimiendo una linea indicando el nombre de host al cual le estamos dirigiendo las trazas , lo que nos permite identificar mas fácilmente las maquinas :\nPING -N Este parámetro sirve para especificar el numero de solicitudes echo que deseemos al enviar paquetes , este lo indicaremos con un numero comprendido entre 1 – 4294967295 .\nPor ejemplo si queremos enviar 10 trazas el comando seria el siguiente :\nPodemos comprobar en la parte inferior que ha enviado en numero que le hemos indicado .\nPING -L Nos permite modificar el tamaño en bytes de los paquetes enviados , deberemos especificar un numero entre 0 y 65000 .\nPING -F Este parámetro sirve para evitar que los paquetes se fragmenten , el tamaño máximo de los paquetes sin fragmentar es de 1472 bytes .\nPodemos ver que si superamos este numero , nos dará un error informándonos que es necesario fragmentar el paquete :\nPING -I Este parámetro nos permite especificar el numero máximo que se pueden dar hasta alcanzar al destino , el valor máximo que podemos introducir 255 .\nCuando especificamos un TTL esto fija el número máximo de saltos, al pasar por un nuevo dispositivo (un router) este descuenta 1 al TTL especificando hasta que llega a 0, en este caso el destino se mostrará como inalcanzable, de esta forma se evita que un paquete viaje por la red indefinidamente buscando un destino que puede que no exista.\nPING -4 -6 Ping -4 : Fuerza la respuesta del host especificado con una dirección IPv4. Es necesario que tanto el equipo que lanza el ping como el destino tengan una configuración IPv4 correcta.\nPing -6 : Fuerza la respuesta del host especificado con una dirección IPv6. Es necesario que tanto el equipo que lanza el ping como el destino tengan una configuración IPv6 correcta.\nComprobar conectividad en una red Vamos a efectuar una serie de pruebas para verificar el funcionamiento y encontrar errores . Lo primero sera hacernos ping a nosotros mismos para ello :\nSi la salida es correcta esto demuestra que nuestro adaptador de red funciona correctamente .\nVamos a hacerle ping a una maquina de nuestra red local , así demostraremos que las conexiones físicas son correctas :\nVamos a hacerle ping a la puerta de enlace , de tener éxito demuestra que existe conexión con el equipo que suministra internet :\nHaremos ping a un sitio de internet usando ip , para comprobar que tenemos conexión a internet :\nPor ultimo hacer ping a un dominio en internet ,de tener éxito demuestra que existe conexión a internet y los servidores DNS configurados en la conexión funcionan correctamente:\nUso general del comando ipconfig Este comando se usa para ver la configuración actual de los adaptadores de red de nuestro equipo , un ejemplo de uso general del comando es el siguiente :\nEste nos muestra la siguiente información :\nDescripción del adaptador : Nombre del adaptador o tarjeta de red utilizado en la conexión. Dirección IPV4: Es la dirección IP asignada al equipo en la red local. Puerta de enlace predeterminada: Es la dirección IP del equipo proporciona acceso a internet. Servidores DNS: Dirección ip del encargado de resolver nombre de dominio a dirección IP de las paginas solicitadas. Generalmente son dos, el principal y el secundario. Estado de DHCP: Configuración dinámica de host, en el caso del equipo mostrado se encuentra habilitada, eso significa que siempre se utilizará una dirección IP asignada por este servicio . A partir de estos parámetros podemos consultar la información del adaptador o identificar una incoherencia en la configuración del mismo .\nIPCONFIG /ALL Nos devolverá toda la información disponible de los adaptadores de red , es una salida mas detallada que si omitimos este parámetro , con este podemos consultar los servidores DNS y las direcciones MAC .\nIPCONFIG /RELEASE Se utiliza para liberar una dirección ip en el servicio DHCP , no se nos volverá a asignar una hasta que ejecutemos ipconfig /renew\nPodemos especificar el adaptador del cual queremos que se libere la ip escribiéndolo a continuación, si omitimos el nombre los aplicara a todos .\nEJ: ipconfig /release Ethernet0 –\u0026gt; Solo liberara la ip del adaptador Ethernet0 *****Si queremos liberar una dirección ipv6 utilizaremos el parámetro /release6\nIPCONFIG /RENEW Una vez ejecutado el comando anterior deberemos de ejecutar este para solicitar al servidor DHCP una nueva concesión de dirección IP .\nPodemos especificar el adaptador del cual queremos que se renueve la oferta DHCP escribiéndolo a continuación.\nEJ: ipconfig /renew Ethernet0 –\u0026gt; Solo renovara la concesión del adaptador Ethernet0 *****Si queremos renovar una dirección ipv6 utilizaremos el parámetro /renew6\nIPCONFIG /FLUSHDNS Se utiliza para vaciar la cache de resolución DNS de nuestro equipo local , suele utilizarse cuando queremos comprobar el correcto funcionamiento del servidor DNS .\nIPCONFIG /REGISTERDNS Actualiza todas las concesiones DHCP y vuelve a registrar los nombres DNS. Este comando esta orientado al trabajo en entornos de dominio y a la actualización de los registros dinámicos del servidor de DNS del sistema en el que se esta ejecutando, teniendo en cuenta que si esta bloqueada de alguna forma la actualización dinámica no se efectuará.\nIPCONFIG /DISPLAYDNS Este comando simplemente nos muestra las consultas DNS que se están almacenados en la caché de nuestro sistema de la forma que se muestran en la imagen, muestran datos de registros del protocolo IPv4 como de IPv6.\nIPCONFIG /SHOWCLASSID Este comando nos permite comprobar las clases de usuario configuradas en nuestro servidor DHCP y que estarán disponibles para los diferentes clientes.\n*Si queremos comprobarlo para IPV6 utilizaremos el parámetro /showclassid6 .\nUso general ARP El comando arp muestra y modifica las tablas de conversión de direcciones IP en direcciones\nMAC que utiliza el protocolo de resolución de direcciones (ARP).\nARP -A Pide los datos de protocolo actuales y muestra las entradas ARP actuales. Si se especifica inet_addr, solo se muestran las direcciones IP y física del equipo especificado. Si existe más de una interfaz de red que utilice ARP, se muestran las entradas de cada tabla ARP.\n* La opción -g hace la misma función :\nComo se muestra en la captura de pantalla el comando arp –a enumera todos los dispositivos que se encuentran actualmente en la caché ARP del host, lo cual incluye la dirección IPv4, la dirección física y el tipo de direccionamiento (estático/dinámico) para cada dispositivo.\nSi queremos borrar la cache arp utilizaremos la opción -d seguida del comodín * para borrar todas las entradas en esta tabla , si solo quisiéramos eliminar una consulta pondríamos la dirección IP .\nPodemos solicitar la MAC de una dirección usando arp + IP del dispositivo y posteriormente verla en nuestra tabla con arp -a .\nUso general netstat El comando netstat genera visualizaciones que muestran el estado de la red y estadísticas de protocolo. El estado de los protocolos TCP, SCTP y los puntos finales de UDP puede visualizarse en formato de tabla. También puede visualizarse información sobre la tabla de enrutamiento e información de interfaces.\nNETSTAT -A Muestra las todas conexiones y puertos de escucha de nuestro equipo , así como el estado del puerto y la dirección remota la cual esta usando el mismo :\nNETSTAT -B Muestra el archivo ejecutable implicado en la creación de cada conexión o puerto de escucha.\nNETSTAT -E Nos muestra estadísticas sobre las interfaces de red , sirve para ver la actividad que ha tenido esta:\nNETSTAT -R Nos muestra la tabla de enrutamiento , así podemos ver los sitios a los cual nuestro equipo es capaz de llegar a través de la red :\nNETSTAT -N Nos muestra las conexiones activas con un formato de tabla , similar al parámetro -a solo que este nos indica el numero de puerto en lugar del nombre .\nNETSTAT -O Similar al parámetro anterior pero este nos añade el PID del proceso :\nNETSTAT -P Nos permite filtrar las conexiones según el protocolo (TCP, UDP, tcpv6 o tcpv4…)\nNETSTAT -T Muestra el estado de descarga de la conexión actual :\nNetstat es muy interesante para ver datos estadísticos de la conexión, pero también va a ser muy útil para analizar los puertos abiertos en un momento determinado y así identificar problemas. Es esencial para determinadas aplicaciones y poder lograr un rendimiento óptimo .\nUso general nslookup Es una aplicación incluida en todos los sistemas Windows, para consultar, obtener información, probar y solucionar problemas con los servidores DNS .\nAl invocarlo sin especificar ningún parámetro, devolverá el nombre del servidor DNS predeterminado y su dirección IP :\nEl comando dispone de dos modos de uso , el tradicional a través de linea de comandos y el interactivo . Podemos usarlo para resolver nombres de direcciones desde la terminal poniendo nslookup seguido del nombre que queramos resolver :\nTambién podemos hacer consultas inversas , es decir que a través de la ip nos diga el nombre :\nPor ejemplo podemos seleccionar el tipo de registros DNS para hacer peticiones los cuales son :\nA: para buscar registros A que son los relacionados con la dirección IPv4.. AAAA: para buscar registros AAAA que son los relacionados con la dirección IPv6. Si una web utiliza direccionamiento IPv6 y nosotros también, entonces tendremos que indicar este registro DNS. PTR: para buscar registros reversos. MX :para buscar los registros Mail Exchange del correo. TXT:, para buscar registros de texto como SPF o DKIM. CNAME: para buscar alias del dominio, esto también se conoce como subdominios, por ejemplo, el «www» siempre es un subdominio del principal» o el típico «ftp.» que es también un subdominio. Para cambiar el tipo de registro utilizamos la orden set type=Nombre del registro , por ejemplo :\nTambién podemos elegir el servidor desde el cual realizamos las consultas de la siguiente manera :\nUso general tracert Sirve para trazar la ruta que hace un paquete entrante que viene desde un host o punto de red hasta tu ordenador , así conocemos por donde viaja nuestro viaje .\nDiciendo uno a uno todos los nodos y routers por los que pasa el mensaje de prueba que has enviado, sus direcciones IP y la latencia de cada uno de ellos hasta llegar a su destino.\nHay algunos nodos que no son capaces de respondernos por eso las entradas de tiempo de espera agotado .\nTenemos algunos parámetros interesantes como :\n-d : No convierte direcciones en nombres de host -h : Nos permite seleccionar el numero máximos de saltos -4 o -6 : Fuerza usar IPV4 o IPV6 : -w : Nos permite especificar el tiempo de espera en milisegundos : Uso general route print El comando Route se utiliza para visualizar y modificar la tabla de enrutamiento. Route print muestra una lista con las rutas actuales conocidas por IP para el host. Route add se utiliza para añadir rutas a la tabla, y route delete se utiliza para borrar rutas de la tabla.\nAsí podemos especificar el camino para llegar a una red o dispositivo .\nLa sintaxis es la siguiente : route [-f] [-p] [comando [destino]] [MASK máscara de red]\nComando route print sin parámetros para mostrar todo el contenido de la tabla de enrutamiento :\nSi deseamos borrar la tabla de enrutamiento deberemos de utilizar el parámetro -f :\nAdemás podemos añadir , rutas manuales de la siguiente manera :\n→ route add IP_Destino Mascara_Destino Puerta_de_enlace métrica interfaz\nSi queremos cambiar una ruta , la sintaxis es la misma que el comando anterior cambiando la orden add por change :\nCuando solo queramos eliminar una ruta , utilizaremos la orden delete seguida del destino :\n¿Cómo puedes averiguar la IP pública de tu router? Hay muchas forma de saber esto desde Windows , podemos utilizar el comando curl para pedir la siguiente web y que nos devuelva la ip :\nOtra forma desde la linea de comandos es hacer una consulta dns con nslookup al servicio opendns :\nSi tenemos un navegador podemos usar una de las muchas webs que nos dicen la dirección ip publica del router , yo uso la siguiente https://ipchicken.com/ :\nLinux Configurar una interfaz de red Para configurar una tarjeta de red en Linux podemos hacerlo desde la interfaz gráfica o desde linea de comandos .\nDesde interfaz gráfica nos dirigimos a Configuración \u0026gt; Inalámbrica o Red . Una vez aquí encenderemos la tarjeta y le daremos al engranaje .\nUna vez aquí podemos configurar manualmente la configuración de red de nuestra tarjeta .\nEsto mismo podremos hacerlo desde la linea de comandos editando el fichero /etc/network/interfaces con permisos de superusuario .\nDentro de este podemos indicar la configuración de nuestros adaptadores de red , aquí te indico con lineas comentadas los parámetros básicos que podemos indicar en este archivo .\nUna vez hayamos configurado nuestras interfaces los cambios no se aplicaran automáticamente , para hacer esto tenemos varias formas , la mas cómodas es reiniciar el servicio :\nOtra forma de cambiar los servidores DNS que se utilizan es a través del fichero /etc/resolf.conf\nAquí seguido de nameserver pondremos la dirección ip o nombre de nuestro servidor DNS\nUso general ifconfig Explica la utilidad del comando ifconfig a partir de una captura real. ¿Hay alguna información de las que se obtiene con ipconfig /all que no aparezca? Trata de conseguirla de otra forma.\nEs similar a ifconfig y esta enfocado a las mismas funciones , este comando también se utiliza para ver, cambiar y administrar todas las configuraciones actuales de la red informática.\nEsta se instala con el paquete net-tools , para instalarlo:\nPara utilizar esta herramienta necesitaremos hacerlo como superusuario , con su uso mas simple nos mostrara la configuración básica TCP/IP de nuestra tarjeta de red así como unas estadísticas de la misma :\nPor ejemplo con ipconfig /all podemos ver los servidores DNS configurados cosa que con ifconfig no podremos ver .\nAsí que tendremos que ver el fichero /etc/resolf.conf\nUn uso común de este comando es configurar rápidamente una interfaz de red , por ejemplo :\nEsto podemos ponerlo en una sola linea\nAdemás también podremos levantar y bajar la tarjeta de red\nUso general dhclient Este utiliza el protocolo de configuración dinámica de host para configurar dinámicamente los parámetros de red de la interfaz de red.\nEl siguiente comando indicará a dhclient que libere la concesión actual que tiene del servidor DHCP ,es decir que queremos liberar la ip actual . Utilizaremos los parámetros -r y -v\nSi queremos volver a pedir una configuración de red al comando dhcp utilizaremos solamente el parámetro -v .\nPrincipalmente este comando se usa para esto , para solucionar problemas con la configuración del servicio DHCP .\nAlgunos parámetros que no he mencionado y pueden resultar útil son :\n-6 : Sirve para indicar que quieres IPV6 -p: Sirve para indicar otro puerto para hacer la consulta -s : Sirve para indicar la dirección del servidor DHCP Diferencias de los comandos netstat y ping respecto a los empleados en Windows netstat muestra información sobre el subsistema de red en nuestro equipo al igual que Windows . Si nos fijamos en el manual nos indica que Esta aplicación está parcialmente obsoleta. El reemplazo de netstat es ss, para netstat -r tiene ip route, para netstat -i puede usar ip -s link y para netstat -g dispone de ip maddr.\nSi lanzamos el parámetro podemos ver a simple vista que nos muestra mas información sin indicar ningún parámetro , por lo demás estos son los mismo que en Windows .\nMientras que el comando ping la diferencia es que es por defecto infinito , a diferencia de Windows este no acabara hasta que lo detengamos nosotros .\nEn este los parámetros con respecto a Windows cambia su “letra ” , aquí serian :\n-i : Indicar el intervalo para enviar el siguiente paquete en segundos (por defecto es 1 ) -s : Cambiar el tamaño del paquete en bytes -f : inundación , para probar el rendimiento de la red bajo una carga pesada (envía una gran cantidad de paquetes lo más rápido posible) -c : Indicar el numero de trazas enviadas -w: Dejara de imprimir los resultados después de los segundos indicados -q: Elimina la salida del comando , opción silenciosa -a : hace un sonido cuando hay una respuesta -V indica la version del comando La utilidad de este sigue siendo la misma , solucionar problemas de accesibilidad de hosts en una red. Esto nos ayuda a comprender por qué un sitio web no se carga.\nUso general comando dig Dig es un comando que permite realizar consultas a servidores DNS para obtener información relacionada con este servicio. Para instalarlo en nuestro sistema , haremos un apt install dnsutils .\nPodemos hacer una consulta dns , por ejemplo al instituto para comprobar si somos capaces de obtener su dirección ip :\nUtilizando la opción +trace realiza consultas iterativas para resolver la búsqueda de nombres. Consultará los nombres de servidores a partir de la raíz y posteriormente atravesará el árbol del espacio de nombres mediante consultas iterativas siguiendo las referencias en el camino:\nTambién podemos realizar consultas inversas con la opción -x :\nDiferencias del comando traceroute de Linux con el comando tracert de Windows La herramienta traceroute es exactamente la misma que el tracert, pero se denomina de otra forma, aunque internamente puede hacer uso de diferentes protocolos, ya que en algunos sistemas operativos se hace uso del protocolo ICMP Echo Request/reply, y en otros de hace uso de mensajes UDP directamente para comprobar cuantos saltos hay de un host a otro .\nEstas se usan para detectar donde esta el error a la hora de acceder a un determinado equipo y saber en que nodo se produce el “error” .\nAlgunos parámetros que pueden interesarnos son :\n-f, :Establece la distancia entre el primer salto y el siguiente salto. -g,: nos permite indicar la puerta de enlace. -I : Usa ICMP ECHO -m, :Establece el número de saltos; el valor predeterminado es 64. -M, :las rutas de seguimiento se realizan con ICMP o UDP; el método predeterminado es UDP. -p: Define el puerto de red; el valor predeterminado es 33434. -q: Define el numero de paquetes por salto. –resolve-hostnames: puede usar esta sintaxis para corregir los nombres de host. -w, : Define el tiempo de espera en segundos. Uso general wget Wget es una herramienta informática creada por el Proyecto GNU. Puedes usarlo para recuperar contenido y archivos de varios servidores web. El nombre es una combinación de World Wide Web y la palabra get. Admite descargas a través de FTP, SFTP, HTTP y HTTPS.\nPara instalarlo usamos el comando apt install wget .\nUn ejemplo es para descargar archivos , por ejemplo una iso . Pondríamos el comando seguido de la url :\nEste nos descargara el archivo en el directorio actual de trabajo .\nPodemos utilizar el comando -o para indicar un nombre diferente al descargar el archivo :\nAlgunos parámetros interesantes son :\n-P : Indicar el directorio donde queremos guardar el archivos \u0026ndash;limit-rate : sirve para limitar la velocidad de descarga -tries : nos permite indicar el numero de reintentos de la descarga -b : Realizara la descarga en segundo plano -c para indicar que se reanude una descarga Si quisiéramos descargar archivos desde un servidor ftp utilizaríamos la siguiente sintaxis : wget –ftp-user=usuario\u0026ndash;ftp-password=contraseña\nUso general de tcpdump Tcpdump es una herramienta para línea de comandos cuya utilidad principal es analizar el tráfico que circula por la red. Permite al usuario capturar y mostrar en tiempo real los paquetes transmitidos y recibidos por la red a la cual el ordenador está conectado\nLos parámetros mas comunes son :\n-i Permite especificar la interfaz de red en la que vamos a atender el tráfico. -c Permite limitar la cantidad de paquetes capturados en un número determinado. -n Evita la resolución de puertos y direcciones ip a nombres. -e Muestra las cabeceras ethernet además del paquete ip. -t No imprime la estampa de tiempo de captura de cada paquete. -x Muestra el contenido hexadecimal de la trama capturada. -xx Idem a -x, pero además muestra el contenido de la cabecera Ethernet. -X Muestra el contenido hexadecimal y en ASCII de la trama capturada. -A Solo muesta el contenido ASCII del paquete capturado. -s Muestra solo los primeros bytes desde el principio del paquete. -vv Muestra información adicional, incluyendo parámetros de las cabeceras de protocolo. -w file Permite guardar la salida en un archivo con formato pcap. -r file Permite leer los paquetes previamente capturados y almacenados en un archivo pcap. Por ejemplo podemos hacer una captura de nuestra red de un máximo de 50 paquetes :\nComo ves la salida es indescifrable , para leerla usaremos el comando ngrep para buscar coincidencias sin tener en cuenta mayúsculas y minúsculas .\nUso general del comando arp El comando arp nos permitirá interactuar con la cache de resolución arp , modificándola por ejemplo .\nTambién podemos averiguar la dirección MAC de un dispositivo , buscándolo en la tabla :\nLos parámetros son los mismo que podemos encontrar en Windows :\n-a : Encontrar una determinada dirección en la tabla -v : Muestra todas las entradas -n : Muestra todas las entradas de forma numérica -d : elimina una resolución determinada También podemos hacer esto mismo con el comando ip :\nPara este la sintaxis básica es de la siguiente forma :\nadd : Añadir resolución del : Eliminar resolución change : Cambiar una resolución replace : Remplazar una resolución Por ejemplo para añadir una tabla :\nComando ip Podremos ver y configurar direcciones IP, ver y configurar tablas de enrutamiento, ver y configurar túneles IP, y también ver y configurar la interfaz física .\nEste se le añade un “segundo comando ” para indicar su funcion , son los siguientes :\nlink: nos sirve para configurar las interfaces de red físicas o lógicas, por ejemplo, para ver el estado de todas las interfaces de red. address: permite ver y configurar las direcciones IPv4 y IPv6 asociadas a las diferentes interfaces de red. Cada interfaz debe tener al menos, una dirección IP configurada. addrlabel: permite añadir una etiqueta neighbour: permite ver los enlaces de vecindad, es decir, se puede ver la tabla ARP del sistema operativo. rule: permite ver y configurar políticas de enrutado y cambiarlas, esto se utiliza sobre todo cuando vas a configurar varias tablas de enrutamiento. route: permite ver y configurar las tablas de enrutamiento, tanto de la tabla de enrutamiento principal, como de las «secundarias» que configures. tunnel: permite ver los túneles IP y también configurarlos. maddr: permite ver y configurar las direcciones multienlace. mroute: permite ver y configurar la tabla de enrutamiento multicast. mrule: permite ver y configurar políticas de enrutamiento de direcciones multicast. monitor: permite monitorizar el estado de las tarjetas de red de manera continua, también direcciones IP y rutas. ntable: gestiona el caché de neighbour (ARP) tuntap: gestiona las interfaces TUN/TAP, orientado a las VPN como OpenVPN o WireGuard. maddress: configuración de las direcciones multicast xfrm: gestiona las políticas IPsec. netns: administrar espacios de nombres de red l2tp: configuración de L2TP tcp_metrics: gestiona métricas TCP. token: gestiona los identificadores con token de las interfaces. Bibliografía Cambiar configuración TCP/IP Información general sobre comandos Información protocolo ICMP\nComando PING\nComando NSLOOKUP\nDescripción parámetros de los comandos Configuración red debian Comando ifconfig\nComando ip\n","date":"September 8, 2023","hero":"/javierasping.github.io/images/redes/comando_de_supervision_de_redes/comando_de_supervision_de_redes.webp","permalink":"https:/javierasping.github.io/posts/redes/comandos_de_supervision_de_redes/comandos_de_supervisi%C3%B3n_de_redes/","summary":"Documento en el cual se detallan los principales comandos a la hora de detectar incidencias en redes y lograr solucionarlos .\nComandos en Windows Explica el significado de los distintos parámetros a configurar en las Propiedades de TCP/IP en Windows Tenemos que tener en cuenta que cada configuración que hagamos es independiente para cada uno de nuestros adaptadores de red .\nPara acceder a configurar estos parámetros seguiremos la siguiente ruta en nuestro sistema :","tags":["Redes","comandos"],"title":"Comandos de supervisión de redes"},{"categories":null,"contents":"Compartir directorios con NFS en debian La tecnología NFS (Network File System) ha sido una pieza fundamental en la compartición de archivos en entornos de red. Desarrollada por Sun Microsystems, NFS permite a sistemas operativos Unix y Linux compartir recursos de archivos de manera transparente, brindando acceso a archivos y directorios remotos como si estuvieran almacenados localmente.\n1.Instalación y configuración NFS Instalamos el paquete nfs-kernel-server.\nCrearemos el directorio que vamos a compartir y le cambiamos los dueños y los permisos del mismo :\nEn el fichero etc/exports indicaremos cual es nuestro directorio y sus respectivos permisos :\nro: permiso de solo lectura del directorio rw: permiso de lectura y escritura del directorio subtree_check: especifica la verificación de subdirectorios no_subtree_check: previene verificación de subdirectorios sync: Escribe todos los cambios en el disco antes de aplicarlo Async: ignora la verificación de sincronización para mejorar la velocidad Aplicamos los cambios y reiniciamos el servicio :\n2.Visualizarlo en un cliente debian Nos instalaremos el siguiente paquete :\nLa montamos en nuestro cliente :\nTambién podemos hacerlo de forma permanente en el fstab :\nPodemos visualizar el contenido :\nVamos a crear un archivo y a comprobar que se ha creado en el servidor :\n3.Visualización en Windows Nos descargamos la característica de cliente NFS:\nMapeamos la unidad de red :\nCreamos un fichero de forma remota y comprobamos que se ha creado .\nLo comprobamos también en el servidor :\n","date":"September 8, 2023","hero":"/javierasping.github.io/images/sistemas/nfs/portada.png","permalink":"https:/javierasping.github.io/posts/sistemas/nfs_debian/nfs/","summary":"Compartir directorios con NFS en debian La tecnología NFS (Network File System) ha sido una pieza fundamental en la compartición de archivos en entornos de red. Desarrollada por Sun Microsystems, NFS permite a sistemas operativos Unix y Linux compartir recursos de archivos de manera transparente, brindando acceso a archivos y directorios remotos como si estuvieran almacenados localmente.\n1.Instalación y configuración NFS Instalamos el paquete nfs-kernel-server.\nCrearemos el directorio que vamos a compartir y le cambiamos los dueños y los permisos del mismo :","tags":["Linux","sistemas","ISO","ASO"],"title":"Compartir directorios con NFS en debian"},{"categories":null,"contents":"Compartir recursos en red en Windows Server En el entorno empresarial, la capacidad de compartir recursos en red es esencial para la colaboración y la eficiencia operativa. En este artículo, exploraremos cómo compartir directorios en un entorno Windows Server, abordando los métodos tanto a través de la interfaz gráfica como mediante cmd y PowerShell.\nDesde la interfaz gráfica Podemos compartir un directorio de nuestro servidor , accediendo a las propiedades del mismo . Una vez aquí pulsamos sobre el menú compartir :\nAhora le daremos permisos a los usuarios que deseemos que tengan acceso a este :\nUna vez compartido nos mostrara la ruta que tendremos que poner para acceder a este recurso , que podemos modificarla a nuestro gusto en uso compartido avanzado :\nDesde un cliente podemos ver los recursos que esta compartiendo nuestro servidor usando net view :\nPodemos mapear la unidad de red desde la linea de comandos usando net use :\nVamos a crear un directorio y comprobar que se ha creado :\nVemos que en el servidor se ha creado :\nTambién podemos hacer esto desde la administración de usuarios y grupos de active directory :\nCompartir recursos desde cmd Ahora vamos a usar net share para compartir un recurso en red a traves de la linea de comandos :\nSi desde otro cliente vemos los recursos que comparte el server core , lo veremos :\nSi queremos cambiar los permisos de un recurso compartido podemos usar los comandos cacls y icacls . También tenemos la posibilidad de hacerlo usando la interfaz gráfica con las RSAT.\nComandos powershell Crearemos el recurso compartido\nNew-SmbShare -Name JCD\\_comp -Path \u0026#34;C:\\compartir\\\u0026#34; -FullAccess \u0026#34;Administrador\u0026#34; Si queremos añadir permisos específicos a un grupo a la hora de crear el recurso compartido seria :\nNew-SmbShare -Name \u0026lt;Nombre-de-la-carpeta\u0026gt; -Path \u0026lt;Ruta-de-la-carpeta\u0026gt; -ReadAccess \u0026#34;\u0026lt;Grupo-o-usuario-que-tiene-acceso-de-lectura\u0026gt;\u0026#34; -FullAccess \u0026#34;\u0026lt;Grupo-o-usuario-que-tiene- acceso-total\u0026gt;\u0026#34; Si después de esto queremos añadirle o quitarle permisos a algún usuario o grupo al directorio samba compartido :\nSet-SmbPathAcl -Path \u0026#34;C:\\compartir\u0026#34; -AceType Allow -AccessType Write -AccountName UsuariosCompartidos Si por el contrario queremos eliminar permisos al usuario o grupo :\nRemove-SmbPathAcl -Path \u0026#34;C:\\compartir\u0026#34; -AceType Allow -AccessType Write -AccountName UsuariosCompartidos Para montar este directorio compartido en otro host Windows :\nNew-PSDrive -Name J -PSProvider FileSystem -Root [\\\\172.22.9.143\\JCD_comp](file://172.22.9.143/JCD_comp) Además podemos listar para ver si se ha montado correctamente :\nListaremos el contenido del mismo para ver si tenemos acceso a el :\n","date":"September 8, 2023","hero":"/javierasping.github.io/images/sistemas/compartir_directorios_win/portada.jpg","permalink":"https:/javierasping.github.io/posts/sistemas/comparticion_de_directorios_en_windows/comparticion_de_directorios_en_windows/","summary":"Compartir recursos en red en Windows Server En el entorno empresarial, la capacidad de compartir recursos en red es esencial para la colaboración y la eficiencia operativa. En este artículo, exploraremos cómo compartir directorios en un entorno Windows Server, abordando los métodos tanto a través de la interfaz gráfica como mediante cmd y PowerShell.\nDesde la interfaz gráfica Podemos compartir un directorio de nuestro servidor , accediendo a las propiedades del mismo .","tags":["Windows","sistemas","ISO","ASO"],"title":"Compartir recursos en red en Windows Server"},{"categories":null,"contents":"Configuración Apache bajo debian Instalar un servidor web Apache para el uso en una Intranet Para instalar el servidor debemos ejecutar como root el siguiente comando:\nCrea dentro del directorio /var/www/html un fichero llamado entrada.html en el que pongáis un mensaje de bienvenida\nAhora lo meteré dentro de la ruta :\nA continuación vamos a publicar una página más completa en nuestro servidor, para ello\nutiliza tu sitio web de aplicaciones web.\nAdemas debemos de darle permisos de lectura a otros para que podamos visualizarla :\nAccede desde los clientes, poniendo en un navegador la siguiente URL:\nDesde debian cliente :\nA continuación vamos a publicar una página más completa en nuestro servidor, para ello utiliza tu sitio web de aplicaciones web:\nResolución local de nombres : modifica los ficheros necesarios en el servicio BIND y accede usando el nombre que has indicado :\nComo ya tenia echo el dns anteriormente he utilizado este nombre :\nConfiguración de sitios web virtuales usando Apache La primera web tendrá el directorio base será /var/www/iesgn y contendrá una página llamada index.html, donde sólo se verá una bienvenida a la página del instituto Gonzalo Nazareno .\nLa segunda web tendrá el directorio base será /var/www/departamentos. En este sitio sólo tendremos una página inicial index.html, dando la bienvenida a la página de los departamentos del instituto.\nNecesitamos tener dos ficheros para realizar la configuración de los dos sitios virtuales, para ello vamos a copiar el fichero 000-default.conf\nUna vez hayamos creado los ficheros añadiremos dentro de cada uno el siguiente contenido :\nAhora deberemos crear un enlace simbólico en el directorio /etc/apache2/sites-enabled.\nPara que se apliquen estos cambios debemos reiniciar el servicio :\nAhora deberemos de actualizar el dns :\nUna vez reiniciado el dns podremos acceder a ambos sitios desde el navegador :\nAcceso autentificado al servidor web Apache Para activar la autentificación básica debemos de añadir las siguientes lineas a nuestro archivo de configuración del sitio :\nAhora creamos el archivo de las contraseñas , con el usuario previamente creado :\nReiniciamos el servicio y nos conectamos :\nAhora vamos ha hacer que a la pagina departamentos solo acceda el director y el profesor , ademas que a dirección solo acceda el director , para eso añadimos en departamentos:\nAhora vamos a añadir los usuarios de las zonas para eso , utilizamos este comando :\nUsuario profesor a departamentos : Usuario director a departamentos : Usuario director a zona dirección : Ahora reiniciaremos el servicio y comprobaremos que podemos acceder :\nAccederemos a departamentos :\nAhora a la zona equipo directivo :\n","date":"September 8, 2023","hero":"/javierasping.github.io/images/servicios/apache/portada-apache.jpg","permalink":"https:/javierasping.github.io/posts/servicios/apache/apache/","summary":"Configuración Apache bajo debian Instalar un servidor web Apache para el uso en una Intranet Para instalar el servidor debemos ejecutar como root el siguiente comando:\nCrea dentro del directorio /var/www/html un fichero llamado entrada.html en el que pongáis un mensaje de bienvenida\nAhora lo meteré dentro de la ruta :\nA continuación vamos a publicar una página más completa en nuestro servidor, para ello\nutiliza tu sitio web de aplicaciones web.","tags":["Servicios","NAT","SMR","IPTABLES","SNAT","SSH","FORWARDING","APACHE"],"title":"Configuración Apache bajo debian"},{"categories":null,"contents":"Configuración de NAT con Cisco y Linux En este artículo, exploraremos la configuración de SNAT (Source Network Address Translation) y DNAT (Destination Network Address Translation) en escenarios con direcciones públicas, haciendo uso de routers en entornos Linux y dispositivos Cisco.\nEscenario con maquinas debian Preparación del entorno Instalación de paquetes Una vez colocadas las maquinas deberemos de descargarnos apache para los servidores web , para realizar esto conectaremos ambos servidores a un switch y este a la nube NAT para disponer de acceso a internet .\nAhora actualizaremos los repositorios haciendo un apt update :\nA continuación ya podremos descargar los paquetes , para los servidores instalaremos apache :\nY para el router de casa descargaremos el servidor DHCP :\nAl acabar la instalación saltara un código de error similar a este , esto es debido a que no hay una configuración valida en el servicio :\nPor ahora ignoraremos esto y posteriormente configuraremos el servidor DHCP .\nCon esto habríamos instalado todos los paquetes necesarios para instalar la practica así que podemos montar el escenario .\nConfiguración de las tarjetas de red Nos encontraremos con un pequeño obstáculo a la hora de hacer el escenario ya que necesitamos que algunos routers tengan mas de una tarjeta de red .\nPara añadir mas de una tarjeta con el dispositivo apagado y sin estar conectado a nadie , hacemos sobre el clic derecho y pulsamos sobre configure \u0026gt; network , y seleccionamos el numero de adaptadores que necesitamos tener en cada uno , por ejemplo para el router de casa necesito tener dos adaptadores :\nUna vez hecho esto con las maquinas que necesitan mas de una tarjeta , montaremos el escenario y procederemos a configurar sus tarjetas .\nPara modificar la configuración de las tarjetas de red lo haremos editando el fichero /etc/network/interfaces .Para que se aplique la configuración de las tarjetas de red que hemos realizado tenemos varias opciones .\nSubir y bajar la tarjeta que hemos modificado :\nTambién podemos ahorrar tiempo y reiniciar el servicio de networking , esto funcionara para todas las tarjetas simultáneamente así que nos ahorrara tiempo :\nRouter CASA:\nRouter R1:\nRouter ISP:\nRouter R2:\nAsí seria la relación de ips que tienen las tarjetas de red de los routers . Para aplicar esta configuración a las tarjetas de red tendremos que reiniciar la misma como indico al principio de este apartado .\nPara que el escenario funcione debemos activar el bit de forwarding para estos 4 routers , en este caso lo haré de forma permanente para ello editamos el fichero /etc/sysctl.conf y descomentamos esta linea :\nRutas necesarias Para mi esquema actual las rutas que necesitamos en los routers son :\nRouter R1:\nRouter ISP:\nRouter R2:\nRouter CASA:\nComprobación de conectividad Vamos a hacer ping desde cada uno de los routers a su extremos “mas lejanos” para asegurarnos de que hemos realizado correctamente el enrutamiento .\nRouter R1 –\u0026gt; R2\nRouter R1 –\u0026gt; CASA\nRouter R2 –\u0026gt; R1\nRouter R2 –\u0026gt; CASA\nRouter CASA –\u0026gt; R1\nRouter CASA –\u0026gt; R2\nVemos que todos los dispositivos que tiene direcciónes ips publicas tienen conectividad entre si pero que pasa con los que tienen direcciónamiento privado en nuestro escenario , estos no tendrán conectividad ya que no se enrutan direcciónes privadas en los routers de internet .\nEs decir si lanzamos un ping hacia una dirección privada que sea de otra red , por ejemplo del servidor1 al servidor2 este no llegara , ya que en las tablas de enrutamiento del router del ISP no existen rutas para direcciónes privadas .\nPor lo que sera imposible alcanzar una red privada diferente a la que pertenezcamos .\nPor ejemplo desde casa si le hacemos ping a google se lo hacemos a la dirección PUBLICA 8..8.8.8 no a la dirección privada que tiene el servidor , puede ser la 172.22.1.15\nConfiguración del servicio DHCP en router CASA Retomando lo que habíamos hecho anteriormente en el apartado de instalación de paquetes ya hemos descargado el servidor DHCP para debian (isc-dhcp-server). Así que ahora vamos a configurarlo .\nLo primero que necesitamos hacer es decirle a nuestro servidor a través de que tarjeta de red queremos que este reparta direcciónes ip , en nuestro caso es la tarjeta ens5 .\nPara ello editaremos el fichero /etc/default/isc-dhcp-server y añadiremos el nombre de la tarjeta en la sección de IPV4 :\nAhora vamos a indicarle a nuestro servidor DHCP que configuración queremos que le asigne a nuestros clientes para ello editamos el fichero /etc/dhcp/dhcpd.conf , podemos aprovechar uno de los ejemplos que vienen comentados y aplicar nuestra configuración :\nEste es un ejemplo muy sencillo de un servidor dhcp pero con esto es suficiente para nuestro escenario .\nLos campos significan :\nsubnet : dirección de red de la cual queremos repartir direcciónes ip con este servicio . netmask : Mascara de red de la red la cual queremos configurar los dispositivos. range: Rango de direcciónes de la cual queremos repartir ips siendo la primera la inicial y la ultima la final . option routers: Seria la puerta de enlace de nuestra red option broadcast-address : dirección de broadcast de nuestra red . Una vez configurado con los parámetros de nuestra red reiniciaremos el servicio :\nY comprobaremos que el servicio esta activo :\nAhora para que los clientes puedan recibir una dirección utilizando este servicio deberemos de configurar las tarjetas de red de PC1 y PC2 de la siguiente manera :\nReiniciamos el servicio para que esta se aplique y el servidor nos asigne automáticamente la configuración de red :\nComprobamos que efectivamente nos ha asignado la configuración de la red :\nTambién podemos hacer un seguimiento de a quien le hemos asignado la ip través del servidor viendo el siguiente archivo /var/lib/dhcp/dhcpd.leases el cual guarda las concesiones que hemos realizado .\nPodemos ver cuando empieza así como a quien se le ha asignado viendo su dirección MAC.\nConfiguración de NAT Router CASA Vamos a configurar el SNAT en el router de casa viendo el esquema actual la regla para hacer esto es :\nSin embargo así se eliminaría cuando reiniciase la maquina así que en este caso voy a añadirla al /etc/network/interfaces :\nAsí podemos ver que se han aplicado después de reiniciar el servicio networking :\nVamos a comprobar que funciona la regla viendo si lanzo un ping a otra red (R1) si este cambia mi dirección IP :\nVemos que haciendo la captura este me ha cambiado la dirección privada de la maquina por la publica del router de casa por lo que la regla de SNAT estaría funcionando correctamente .\nRouter R2 Vamos a configurar SNAT y DNAT para ello añadiré las reglas al /etc/network/interfaces :\nReiniciamos el servicio networking y vemos si se ha aplicado :\nComprobaremos que funciona el SNAT haciendo ping del servidor hacia fuera a una dirección publica :\nVemos que esta funcionando correctamente la regla de SNAT :\nYa que nos ha cambiado la dirección ip privada por la publica correspondiente al router . En los apartados posteriores probare el DNAT .\nRouter R1 Para este router vamos a realizar la creación de las reglas de una forma diferente , para ella crearemos un servicio que se encargue de levantar las reglas de DNAT y SNAT cuando la maquina se reinicie para evitar añadirlas al fichero interfaces .\nLas reglas de DNAT y SNAT para esta maquina son :\nLo primero que tendremos que hacer sera crear un script con nuestras reglas , así que las volcare con el comando iptables-save \u0026gt; /etc/iptables/rules.v4 para volcar las reglas existentes .\nAhora crearemos un script en en el cual restauraremos las reglas que hemos volcado y lo crearemos en la siguiente ruta /usr/local/bin/ :\nNos tendremos que asegurar que tiene permisos de ejecución :\nCrearemos un archivo de servicio de Systemd , este archivo debe tener permisos de lectura y escritura solo para root, por lo que se debe ejecutar el siguiente comando como root:\nDentro de este añadiremos el siguiente contenido , solo tendrías que añadir la ruta donde se encuentre tu script de iptables que restaura las reglas :\nLe diremos al servicio que se inicie automáticamente al reiniciar la maquina :\nY lo iniciamos :\nSi queremos asegurarnos de que ha realizado su cometido correctamente miraremos el estado del servicio :\nVeremos que las reglas se han añadido automáticamente :\nComprobaremos que nos ha realizado el SNAT correctamente lanzando un ping :\nVemos que nos ha cambiado la dirección ip privada por la publica .\nComprobación de navegación y DNAT Ahora vamos a comprobar que desde la red de casa podemos acceder a los servidores web .\nCliente Debian Desde el cliente debian podemos hacer un curl para comprobar el correcto funcionamiento del DNAT en el Router R1:\nDesde el cliente debian podemos hacer un curl para comprobar el correcto funcionamiento del DNAT en el Router R2:\nAhora vamos a comprobar que pasa si ponemos la dirección privada de los distintos servidores web :\nVemos que no podemos llegar a esa red ya que los routers de internet son incapaces de encaminarnos hacia esta red privada ya que puede haber miles de dispositivos con la misma ip :\nTampoco recibiríamos respuesta si hiciésemos una petición web .\nSi interceptamos una petición http vemos que el SNAT se realiza correctamente , cambiando la ip privada del solicitante por la publica de su router :\nAhora voy a interceptar una petición en la que se haga DNAT para comprobar que este se realiza correctamente :\nPodemos ver que el origen es una dirección ip publica mientras que el destino es una dirección ip privada podemos ver que el DNAT se ha realizado correctamente .\nAhora voy a pinchar un Firefox y volveré a comprobar que podemos acceder a los servidores web solo usando su dirección ip publica :\nServer 1 :\nServer 2:\nVemos que usando dirección ip publica podemos conectarnos , sin embargo no podremos usando las direcciónes ips privada de las maquinas :\nServer 1 :\nServer 2 :\nFunciona correctamente ya que hemos conseguido que nuestros routers Linux sean capaces de hacer SNAT y DNAT pudiendo hacer que estos “utilicen” internet y puedan acceder a los recursos de otras redes . Ya que las direcciónes privadas no se enrutan en los mismos así que si comprobamos usando estas no obtendremos ningún resultado .\nDepuración NAT Para ver cuantos hits ha tenido una regla o para ver cuanta información ha “utilizado” cada regla utilizaremos el siguiente comando :\nPara borrar los contadores de todas las cadenas y reglas usaremos iptables -Z :\nSi nuestra cadena tiene hits la regla estará funcionando correctamente si por el contrario esta se mantiene en 0 , la regla no se esta aplicando así que tendremos que revisarla .\nEscenario con routers Cisco Volveremos a repetir el mismo escenario que con los routers Linux pero ahora usando routers cisco 7200.\nPreparación del entorno Configuración de las tarjetas de red Lo primeros que haremos sera añadirle los slots necesarios a nuestros routers ya que necesitamos 2 tarjetas de red en R1,R2 y CASA . Edemas de 3 para el router ISP .\nPara los primeros le añadiremos el slot PA-FE-TX , que nos añadirá una interfaz FastEthernet:\nMientras que para el router del ISP le añadiremos PA-2FE-TX que nos añadirá dos interfaces de red FastEthernet.\nAhora podemos arrancar los routers y comenzar con la configuración de las tarjetas de red . Usare las mismas direcciónes que en el escenario anterior .\nRouter CASA Configuramos las tarjetas de red :\nQuedando así nuestras interfaces :\nRouter R1 Configuramos las tarjetas de red :\nQuedando así nuestras interfaces :\nRouter R2 Configuramos las tarjetas de red :\nQuedando así nuestras interfaces :\nRouter ISP Configuramos las tarjetas de red :\nQuedando así nuestras interfaces :\nRutas necesarias Rutas ISP: Rutas CASA : Rutas R2: Rutas R1: Seria necesario únicamente que añadamos las rutas por defecto en los Routers R1 , R2 y CASA .\nPrueba de conectividad R1 –\u0026gt; R2\nR1 –\u0026gt; CASA\nR2-→ R1\nR2 –\u0026gt; CASA\nCASA –\u0026gt; R1\nCASA –\u0026gt; R2\nVemos que todos los dispositivos que tiene direcciónes ips publicas tienen conectividad entre si pero que pasa con los que tienen direcciónamiento privado en nuestro escenario , estos no tendrán conectividad ya que no se enrutan direcciónes privadas en los routers de internet .\nConfiguración del servicio DHCP en router CASA Lo primero que haremos sera establecer el rango de IP´s excluidas del conjunto (pool) de direcciónes que podrá asignar el servicio indicando la ip inicial y final del rango, ambas incluidas:\nPonemos un nombre al rango del servicio DHCP:\nDefinimos la red a la que dará servicio de DHCP:\nIncluimos la puerta de enlace que ofrecerá el servicio :\nCon esto ya estaría configurado el servidor DHCP del router de CASA , nos salimos y guardamos los cambios . Ahora encenderemos nuestras maquinas y veremos que están recibirán automáticamente su configuración por DHCP , con el siguiente comando podemos ver las estadísticas del servicio :\nAdemás podemos ver las concesiones con el siguiente comando :\nEste nos sera útil para realizar un seguimiento de quien tiene asignada cada IP sin tener que ir individualmente a casa maquina .\nConfiguración del NAT Router CASA Lo primero que haremos sera crear una acl para permitir el trafico que queremos hacer SNAT :\nLe asignaremos a la interfaz interna de nuestra red esta regla :\nAhora crearemos un pool con las ips publicas , el comando seria este no sale completo en la terminal :\nip nat pool ip_publica 102.168.0.2 102.168.0.2 netmask 255.255.255.0 Activamos el NAT :\nIndicamos que interfaz es de “dentro” :\nIndicamos la interfaz de “fuera”:\nEl SNAT estaría funcionando , así que vamos a comprobarlo :\nVemos que nos cambia correctamente la ip privada de nuestro host por la publica del router de casa .\nRouter R1 Lo primero que haremos sera crear una acl para permitir el trafico que queremos hacer SNAT :\nLe asignaremos a la interfaz interna de nuestra red esta regla :\nAhora crearemos un pool con las ips publicas , el comando seria este no sale completo en la terminal :\nip nat pool ip_publica 101.168.0.2 101.168.0.2 netmask 255.255.255.0 Activamos el NAT :\nIndicamos que interfaz es de “dentro” :\nIndicamos la interfaz de “fuera”:\nY comprobaremos que se esta realizando correctamente :\nNos cambia la ip 172.22.1.1 por la 101.168.0.2 que es la publica del router al realizar un ping , por lo que esta funcionando correctamente el SNAT.\nAhora configuraremos la regla de DNAT , la sintaxis es la siguiente :\nip nat inside source static tcp ip_privada puerto ip_publica puerto *Posteriormente comprobaremos que el DNAT funciona correctamente .\nRouter R2 Lo primero que haremos sera crear una acl para permitir el trafico que queremos hacer SNAT :\nLe asignaremos a la interfaz interna de nuestra red esta regla :\nAhora crearemos un pool con las ips publicas , el comando seria este no sale completo en la terminal :\nip nat pool ip_publica 103.168.0.2 103.168.0.2 netmask 255.255.255.0 Activamos el NAT :\nIndicamos que interfaz es de “dentro” :\nIndicamos la interfaz de “fuera”:\nY comprobaremos que se esta realizando correctamente :\n*Nos cambia la ip 10.0.0.1 por la 103.168.0.2 que es la publica del router al realizar un ping , por lo que esta funcionando correctamente el SNAT.\nAhora configuraremos la regla de DNAT , la sintaxis es la siguiente :\nip nat inside source static tcp ip_privada puerto ip_publica puerto *Posteriormente comprobaremos que el DNAT funciona correctamente .\nComprobación de navegación y DNAT Ahora vamos a comprobar que desde la red de casa podemos acceder a los servidores web .\nAccederé usando curl desde un host de la red de casa . Primero me conectare al servidor 1 :\nVemos que este nos responde correctamente y se aplica el DNAT , ya que ha cambiado la ip publica del router por la privada del servidor web :\nAhora comprobaremos el servidor 2 :\nVemos que este nos responde correctamente y se aplica el DNAT , ya que ha cambiado la ip publica del router por la privada del servidor web :\nAhora comprobaremos que puedo acceder desde un Tiny Core con Firefox a ambos servidores :\nAl servidor 1 :\nAl servidor 2 :\nVemos que también podemos conectarnos ya que las reglas de NAT están funcionando correctamente .\nVamos a comprobar que ocurre si solicitamos la web a través de sus direcciónes ip privadas :\nPues que obviamente no recibimos respuesta ya que en nuestro escenario estamos simulando internet y en este no se pueden enrutar direcciónes ips privadas ya que están pueden estar repetidas en infinidad de redes .\nDepuración de las reglas NAT Además para asegurarnos de que las reglas de NAT están funcionando .\nEl primer comando nos permite ver la tabla de traducciones de direcciónes DNAT :\nCon este comando podremos ver cuantos hits tienen nuestras reglas , si no tiene ninguno es que esta no esta funcionando salvo que nosotros hayamos inicializado este :\nSi queremos poner los contadores a cero usaremos el comando clear ip nat statistics .\nSi queremos ver en tiempo real los paquetes que muestra información sobre cada paquete que traduce el router :\nCuando decodifique el resultado de este comando, observe los significados de los siguientes símbolos y valores:\n* : el asterisco junto a NAT indica que la traducción se realiza en la ruta de switching rápido. Al primer paquete en una conversación siempre se aplica el switching de procesos, que es más lento. Si existe una entrada de caché, el resto de los paquetes atraviesan la ruta de switching rápido. S: Este símbolo hace referencia a la dirección IPv4 de origen. a.b.c.d→ w.x.y.z: este valor indica que la dirección de origen a.b.c.d se traduce a w.x.y.z. d: = Este símbolo hace referencia a la dirección IPv4 de destino. [xxxx] = El valor entre corchetes es el número de identificación IPv4. Esta información puede ser útil para la depuración, ya que habilita la correlación con otros seguimientos de paquetes realizados por los analizadores de protocolos. Bibliografía Depuración NAT ","date":"September 8, 2023","hero":"/javierasping.github.io/images/redes/configuracion_nat/portada.jpg","permalink":"https:/javierasping.github.io/posts/redes/configuracion_de_nat/configuracion_de_nat/","summary":"Configuración de NAT con Cisco y Linux En este artículo, exploraremos la configuración de SNAT (Source Network Address Translation) y DNAT (Destination Network Address Translation) en escenarios con direcciones públicas, haciendo uso de routers en entornos Linux y dispositivos Cisco.\nEscenario con maquinas debian Preparación del entorno Instalación de paquetes Una vez colocadas las maquinas deberemos de descargarnos apache para los servidores web , para realizar esto conectaremos ambos servidores a un switch y este a la nube NAT para disponer de acceso a internet .","tags":["Redes","enrutamiento","NAT","SNAT","DNAT","Cisco","Linux"],"title":"Configuración de NAT"},{"categories":null,"contents":"Configuración de switches en GNS3 Aprenderás a configurar switches en GNS3, tanto dispositivos genéricos como switches Cisco, utilizando el concepto de VLANs para segmentar la red y explorar las complejidades de la gestión de redes.\nPreparación escenario Lo primero que haré sera montar el escenario :\nConfiguración de red de los clientes A continuación configurare las tarjetas de red de los clientes , aprovechando que la nube NAT incluye un servidor DHCP.\nPara hacer esto escribimos en los VPCS el siguiente comando :\nEjercicio A 1 PC1 y PC3 pertenecen a la VLAN 10, PC2 y PC4 pertenecen a la VLAN 20. Demuestra el funcionamiento correcto de ambas VLAN y que no hay conectividad entre PC2 y PC3. ¿Puedes hacerlo con los switches Ethernet que trae GNS3? ¿Encuentras alguna limitación? ¿Cuáles son las distintos tipos (types) que puede tener un puerto y en qué se diferencian?\nPara configurar las VLANS en los switches , le damos clic derecho y a continuación realizamos la siguiente configuración :\nPara el switch 3 (PC1 y PC2)\nPara el switch 2 (PC3 y PC4)\nPara el switch (PC5 Y NAT1)\nPC1 , solo tendrá conectividad con los PCs que pertenecen a su VLAN :\nPC2 , solo tendrá conectividad con los PCs que pertenecen a su VLAN:\nCon sus respectivas parejas del otro switch obtendremos el mismo resultado. PC3 , solo tendrá conectividad con los PCs que pertenecen a su VLAN:\nPC4 , solo tendrá conectividad con los PCs que pertenecen a su VLAN:\nTenemos que tener en cuenta que los dispositivos que no pertenecen a la VLAN 10 deberemos de configurados manualmente ya que estos no tienen conectividad con el servidor DHCP.\nEl ejercicio A podemos hacerlo perfectamente con los switches que trae GNS3 , encontraremos una limitación importante , ya que los switches solo permiten que las bocas pertenezcan a una VLAN .\nAl realizar el ejercicio debemos de tener en cuenta los types que puede tener un puerto , los que hemos utilizado son los dos primeros :\nAccess: Este es el destinado para un equipo final , es decir un cliente ya que se encarga de eliminar el etiquetado que va en el encabezado. Dot1q:Este es el encargado de interconectar dispositivos de red entre si , se encarga de añadir el etiquetado en el encabezado para mandar el paquete a otro dispositivo y que este sepa a que VLAN pertenece . QinQ : Es similar a dot1q pero este además se encarga de añadir en el etiquetado , el tipo de paquete para identificarlos . Teniendo esto en cuenta podemos hacer una analogía con la practica de switches físicos : Los puertos untagged –\u0026gt; Access\nLos puertos tagged –\u0026gt; Dot1q\nAl utilizar estos switches el protocolo 802.1Q pero “con menos funciones” no podemos indicar que VLANS queremos que utilice los puertos configurados como Dot1q , sino que este a través de la VLAN por defecto pasara los paquetes etiquetados de todas las VLANS .\nEjercicio B 2 Todos los ordenadores deben poder acceder al servidor de datos, pero solo PC1 y PC3 deben acceder a Internet. Lo harán a través de vuestra máquina física usando el elemento llamado NAT, que deberéis comprender y configurar. ¿Puedes hacerlo con los switches Ethernet que trae GNS3? ¿Qué limitación te encuentras? Para superar dicha limitación, descarga el CISCO 3725 como appliance y úsalo en lugar de los switches Ethernet configurándolos adecuadamente.\nSwitches Ethernet Aquí encontramos la primera limitación de estos switches , ya que solo podemos tener 1 VLAN por puerto esto quiere decir que solo una VLAN tendrá acceso a estos recursos .\nComo queremos que solo la VLAN 10 navegue por internet configuraremos la boca de nuestra nube a una boca con tipo Access y que pertenezca a esta VLAN :\nPor lo que para este punto no hay problema , nuestros PC1 y PC3 , ambos serán capaces de navegar por internet :\nComo estos 2 PCS pertenecen a la misma VLAN que la nube NAT pueden comunicarse sin problema y utilizar el servidor DHCP que incluye la misma para configurarse . Mientras que los PC2 y PC4 no podrán ni navegar ni configurarse por DHCP al no pertenecer a la misma VLAN que la nube NAT :\nCon el servidor de datos nos toparemos con la limitación ya que únicamente un puerto puede pertenecer a una VLAN , solo una pareja de nuestros PCs podrán comunicarse . Esto podríamos evitarlo configurando el servidor como una “maquina real” con 2 interfaces virtuales y diciéndole al switch que cada una pertenece a una VLAN distinta .\nCISCO 3725 Para comenzar a utilizar este dispositivo , tendremos que añadirle espacio al disco para que podamos iniciarlo , además podemos añadir el modulo de 16 bocas Ethernet de forma predeterminada así no tendremos que hacerlo a mano mas adelante .\nPara realizar esta configuración deberemos de tener importado el router y acceder a Edit \u0026gt; preferences \u0026gt; IOS routers .\nUna vez modificada la plantilla colocaremos los 3725 en el escenario y montaremos el mismo escenario :\nDebemos de tener en cuenta que las interfaces FastEthernet0/0 y FastEthernet0/1 funcionan como routers , es decir no podemos utilizarlos como switch . Los puertos que se comportan como switch son todos los de FastEthernet1 así que sera los que utilicemos .\nA continuación le diremos a estos puertos que tienen que funcionar como si fuesen un switch para ello introduciremos los siguientes comandos en cada uno de los 3725.\nAhora crearemos las vlans usando los siguientes comandos , para cada uno de los switches :\nPodemos listarlas con el siguiente comando :\nAhora le asignaremos a los puertos su VLAN correspondiente :\nA continuación configuraremos el puerto que une a los dos 3725 , para esto lo ponemos en modo trunk y permitimos el trafico encapsulado de todas las VLANS por este puerto .\nPor ultimo guardaremos los cambios para que si se apaga el equipo mantenga las modificaciones que hemos realizado :\nCon esto habremos configurado el primer 3725 , su homologo a este , es decir el que conecta a PC3 y PC4 , tendríamos que hacer lo mismo adaptado a los puertos en los que estén conectado los dispositivos .\nContinuaremos configurando el 3725 que une ambos “switches” y da salida al servidor de datos y a internet . Para ello crearemos las VLANS 10 y 20 :\nY le asignaremos al servidor de datos ambas VLANS mientras que a la salida a internet solo la VLAN 10:\nAhora configuraremos las interfaces que interconectan los switches :\nA continuación crearemos las dos subintrantes para permitir el trafico entre ellas y le asignaremos direcciones ip .\nAhora el servidor de datos lo conectaremos al puerto Fe0/0 y en el crearemos dos subintrantes , yo utilizare una maquina debian . Esto lo haremos editando en network interfaces :\nComprobamos que las interfaces estén subidas :\nAhora crearemos las rutas de enroutamiento:\nUna vez hecho esto podremos hacerle ping al servidor de datos desde las dos interfaces :\nPodemos hacerle ping al servidor de datos y tendremos conectividad con el :\nVemos que el trafico es capaz de llegar al servidor de datos sin embargo este no es capaz de “hacer el camino de vuelta ”.\nTambién he configurado enroutamiento inter vlan , siguiendo los enlaces de la bibliografía sin embargo no me ha funcionado tampoco.\nEjercicio C Responde a las siguientes preguntas sobre los apartados anteriores:\nC.1 ¿Qué pasa con el direccionamiento cuando añades la nube de NAT? ¿Cuál es el motivo de este cambio?\nCuando ponemos la nube NAT , esta incluye un servidor DHCP el cual tiene la direccion ip 192.168.122.1 y asignas direcciones de la red 192.168.122.1/24 . A través de la configuración que nos proporciona este nos permitirá navegar por internet .\nC.2¿Por qué es necesario asignar un disco duro a cada uno de los dispositivos y qué tamaño mínimo debe tener para que el escenario funcione?\nPara los routers cisco 3725 , para que este inicie y supere el chequeo inicial este debe tener como mínimo un espacio de 1MB , además si queremos guardar las configuraciones esto sera necesario .Por ejemplo para guardar la información de las vlans sera necesario.\nC.3¿Qué diferencia hay entre configurar un puerto del switch en modo access y en modo trunk y cuándo hay que usar cada uno de ellos?\nEl modo access esta pensado para conectar un cliente final es decir , un pc . Es el equivalente a el “ puerto untagged “ , sin embargo este tiene una limitación el cual es que solo puede pertenecer a una vlan , este puerto se encarga además de eliminar el encabezado que añaden los puertos trunk para que los dispositivos finales puedan entender los paquetes .\nPor otro lado el modo trunk permite interconectar un dispositivo de red con otro , por ejemplo un switch con otro switch , seria el equivalente a un “puerto tagged” , este además permite el trafico de varios vlans , etiquetando las tramas para que los demás dispositivos puedan interpretar la VLAN a la que pertenece el paquete .\nEjercicio D Sustituye ahora PC1 y PC3 por dos máquinas Linux con Firefox instalado (puedes encontrar las imágenes en el MarketPlace de GNS3) y comprueba que navegan correctamente.\nLo añadimos al escenario y los conectamos a las mismas bocas que teníamos nuestros VPCS para que mantengan la configuración anterior de las VLANS y tengamos acceso a la nube NAT .\nUna vez hecho esto accederemos a la interfaz de la maquina y configuraremos su tarjeta de red por DHCP , para ello accederemos al panel de control :\nEn el panel de control accedemos a network para configurar la red :\nEn el panel de network diremos que use DHCP y guardamos la configuración :\nEn la terminal podemos cerciorarnos de que la configuración de red se ha realizado correctamente .\nY podemos ver que haciendo este procedimiento ya podremos navegar con el tinycore con Firefox :\nAquí la prueba con el segundo tiny core :\nEjercicio E Monta un Port Bonding entre el switch de cabecera y los otros dos. Demuestra su correcto funcionamiento y explica detalladamente como lo has configurado. Explica los flags que puede tener un portchannel.\nA continuación deberemos de configurar los puertos extra que hemos añadido al escenario para que estén en modo trunk y se respete nuestro escenario con las VLANS , es repetir lo que hemos hecho anteriormente.\nLo primero que deberemos de hacer sera crear las interfaces lógicas ,sin embargo este paso lo podemos omitir ya que posteriormente si no existe la interfaz la creara automáticamente .\nIndicaremos que interfaces queremos que pertenezcan al port-channel 1 para el enlace lógico entre R1-R2 y que pertenezcan al port-channel 2 para el enlace lógico entre R2-R3.\nPara R1-R2 :\nPara R2-R1 :\nPara R2-R3 :\nPara R3-R2 :\nTambién podemos configurar el EtherChannel como un enlace trunk, y así conseguimos multiplexación estadística del tráfico de las VLANs y que ante la caída de un enlace sigue funcionando el otro con ambas VLANs. Esto lo haremos con todos los enlaces lógicos :\nUna vez hecho esto podemos comprobar si están funcionando los etherchannels:\nLa configuración de un EtherChannel se puede hacer utilizando uno de estos protocolos :Port Aggregation Protocol (PAgP) o Link Aggregation Control Protocol (LACP).Ambos extremos se deben de configurar en el mismo modo.\nEstos tienen unas serie de “modos ” en los cuales cambiara el comportamiento del puerto a la hora de crear enlaces :\non: En este modo, los enlaces miembros del grupo se agregarán manualmente y no se monitorizarán automáticamente. Este modo se utiliza cuando se desea tener un mayor control sobre los enlaces miembros del grupo. desirable: En este modo, el switch intentará negociar con el dispositivo conectado en el otro extremo del enlace. Si el dispositivo del otro extremo también está configurado en modo \u0026ldquo;desirable\u0026rdquo;, se agregará automáticamente el enlace. auto: En este modo, el switch no intentará negociar sino que agregará automáticamente el enlace si el dispositivo conectado en el otro extremo del enlace está configurado en modo \u0026ldquo;desirable\u0026rdquo;. active: En este modo, el switch enviará constantemente LACP PDUs para determinar si el dispositivo conectado en el otro extremo del enlace está disponible y también está configurado para usar LACP. Si el dispositivo del otro extremo está disponible y también está configurado para usar LACP, se agregará automáticamente el enlace. Ejercicio F Port Mirroring: Conecta un PC5 al Switch1 y monitoriza el tráfico que sale de PC1. Realiza una captura con Wireshark en la boca correspondiente al PC5 y explica el tráfico capturado.\nLo primero que haremos sera configurar el port mirroring , en mi caso enviara el trafico de la boca 1/5 a la 1/4.\nHare en el pc5 un ping a google y monitorizare el cable que va desde el router a pc4 , para comprobar que este funcionando el port mirroring :\nVemos que hemos podido “interceptar ” un ping , proveniente de la dirección ip del PC6 .\nEsto hará que el trafico entrante y saliente del puerto que hemos puesto como sniffer nos lo reenvié al puerto que escucha .\nPodemos comprobar el estado de la sesión del port mirroring con este comando :\nBibliografía Switching and GNS3 The NAT node Simulando switch cisco en GNS3 GNS3, añadiendo hosts a nuestras topologías Trabajando con switch en GNS3: VLAN y Trunk LACP y PAGP Routing interVLAN Enroutamiento VLAN Configurar PortBonding LinkAggregationControlProtocol(LACP)andPortAggregationProtocol(PAgP) Wikipedia Ether-channel Comunicación Inter VLAN ","date":"September 8, 2023","hero":"/javierasping.github.io/images/redes/switches_gns3/portada.jpg","permalink":"https:/javierasping.github.io/posts/redes/switches_gns3/configuracion_de_switches_en_gns3/","summary":"Configuración de switches en GNS3 Aprenderás a configurar switches en GNS3, tanto dispositivos genéricos como switches Cisco, utilizando el concepto de VLANs para segmentar la red y explorar las complejidades de la gestión de redes.\nPreparación escenario Lo primero que haré sera montar el escenario :\nConfiguración de red de los clientes A continuación configurare las tarjetas de red de los clientes , aprovechando que la nube NAT incluye un servidor DHCP.","tags":["Redes","Wireshark","GNS3","Cisco","Switches"],"title":"Configuración de switches en GNS3"},{"categories":null,"contents":"1.Instalación de la característica Lo primero que comprobaremos es comprobar si el servidor ssh esta instalado en la maquina a la cual queremos conectarnos .\nGet-WindowsCapability -Online | Where-Object Name -like \u0026#39;OpenSSH\\*\u0026#39; En el caso de que tengamos la característica la instalaremos :\nAdd-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0 Por defecto el servicio estará parado así que lo arrancamos :\nPodemos configurarlo para que arranque automáticamente al reiniciar el equipo :\n2.Conectarnos usando par de claves Lo primero que haremos sera generar un par de claves en el cliente , con ssh-keygen :\nUsando SCP podemos llevarnos nuestra clave publica o añadirla manualmente al fichero de authorized_keys :\nY probamos a conectarnos usando la clave :\nSi queremos que solo el servicio funcione con claves publicas y privadas , editamos el fichero C:\\ProgramData\\ssh\\sshd_config.\nSi queremos conectarnos con un cliente Linux , deberemos hacer el mismo proceso . Si el servidor fuese Linux podríamos usar la utilidad ssh-copy-id sin embargo no es compatible con servidores Windows así que usaremos scp :\nUna vez añadida podremos conectarnos :\n","date":"September 8, 2023","hero":"/javierasping.github.io/images/sistemas/ssh_win/windows-ssh.jpg","permalink":"https:/javierasping.github.io/posts/sistemas/ssh_windows/ssh_windows/","summary":"1.Instalación de la característica Lo primero que comprobaremos es comprobar si el servidor ssh esta instalado en la maquina a la cual queremos conectarnos .\nGet-WindowsCapability -Online | Where-Object Name -like \u0026#39;OpenSSH\\*\u0026#39; En el caso de que tengamos la característica la instalaremos :\nAdd-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0 Por defecto el servicio estará parado así que lo arrancamos :\nPodemos configurarlo para que arranque automáticamente al reiniciar el equipo :\n2.Conectarnos usando par de claves Lo primero que haremos sera generar un par de claves en el cliente , con ssh-keygen :","tags":["Windows","sistemas","ISO","ASO"],"title":"Configuración servicio ssh en Windows"},{"categories":null,"contents":"Configuración servidor DHCP bajo debian En este artículo aprenderás cómo configurar el servidor DHCP isc-dhcp-server. Además, configurarás una reserva y lo configuraras para que funcione en dos ámbitos.\nInstalación del servidor isc-dhcp-server Para instalar nuestro servidor dhcp ejecutamos:\nNos dará el siguiente error ya que no esta configurado :\nConfiguración del servidor isc-dhcp-server Lo primero que tenemos que hacer es configurar el interfaz de red por el que va a trabajar el servidor dhcp, para ello editamos el siguiente fichero:\nY añadimos nuestra interfaz que repartirá direcciones :\nConfigura el servidor dhcp con las siguientes características:\nRango de direcciones a repartir: 192.168.0.100 - 192.168.0.110 Máscara de red: 255.255.255.0 Duración de la concesión: 1 hora Puerta de enlace: 192.168.0.1 Servidores DNS: 8.8.8.8 Para ello editamos el siguiente archivo :\nAhora añadimos lo siguiente :\nAquí estamos configurando nuestro ámbito conforme al enunciado .\nAhora deberemos de reiniciar el servicio con el siguiente comando :\nConfiguraciòn de los clientes para obtener un direccionamiento dinámico Editaremos la configuración de red para que use el dhcp :\nEn el debian editamos el network/interfaces:\nAhora reiniciamos la tarjeta de red :\nAhora comprobaremos si nos a asignado ip con ipconfig:\nVemos que se ha asignado correctamente . Repetiremos lo mismo con nuestro cliente windows .\nConfiguramos la tarjeta de red para que utilice el protocolo dhcp, reiniciamos la tarjeta y comprobamos la ip que nos ha asignado :\nAhora vamos a comprobar las concesiones de direcciones para ello deberemos ver el siguiente archivo . Lo abriremos con cat ya que es importante no editarlo , puede causar problemas .\nReserva de una direccion IP Para ello deberemos editar el archivo de configuración de nuestro servidor dhcp :\nUna vez aquí vamos a añadir las siguientes lineas :\nNombre de la reserva hardware Ethernet: Es la dirección MAC de la tarjeta de red del host. fixed-address: La dirección IP que le vamos a asignar. Quedaría nuestra reserva así(la pondremos fuera de la configuración de nuestro ámbito):\nAhora reiniciaremos el servicio\nVamos a comprobar que se ha realizado la concesión , para ello nos vamos a windows . Es posible que tengamos que renovar la concesión o reiniciar la tarjeta de red .\nVamos a comprobar qué ocurre con la configuración de los clientes en determinadas circunstancias, para ello vamos a poner un tiempo de concesión muy bajo . Le pondré 1 min .\n1.Los clientes toman una configuración, y a continuación apagamos el servidor dhcp. ¿Qué ocurre con el cliente windows? ¿Y con el cliente Linux?\nEn windows nos asignara una dirección de APIPA\nMientras que en Linux no me asigna ninguna dirección ip , aunque después me asigno una dirección de APIPA\n¿Que ocurre cuando modificamos la configuraciòn? Los clientes toman una configuración, y a continuación cambiamos la configuración del servidor dhcp (por ejemplo, el rango). ¿Qué ocurre con el cliente windows? ¿Y con el cliente Linux?\nModificamos el rango :\nY reiniciamos el servicio\nCon windows mantengo la dirección de la reserva :\nY con Linux nos asigna la dirección del nuevo rango :\nConfigurar dos ambitos Realizar las modificaciones necesarias en la configuración actual de nuestro servidor dhcp para que reparta direcciones ip a dos redes diferentes, la 192.168.0.0 y la 192.168.2.0.\nLo primero que haremos sera añadir una cuarta tarjeta de red y la configuraremos manualmente . Si no sabemos el nombre de la interfaz podemos verlo con ip a :\nAhora la configuraremos estática , siguiendo el enunciado y la añadimos al /etc/default/isc-dhcp-server.\nY configuramos nuestro segundo rango :\nAhora reiniciamos el servicio :\nAhora le añadiré varias tarjetas de red a mi cliente para comprobar las concesiones y configuramos las tarjetas :\nY nos habría concedido dirección ip en ambos rangos :\n","date":"September 8, 2023","hero":"/javierasping.github.io/images/servicios/dhcp_v4/isc-dhcp.webp","permalink":"https:/javierasping.github.io/posts/servicios/dhcp/dhcp_ipv4/","summary":"Configuración servidor DHCP bajo debian En este artículo aprenderás cómo configurar el servidor DHCP isc-dhcp-server. Además, configurarás una reserva y lo configuraras para que funcione en dos ámbitos.\nInstalación del servidor isc-dhcp-server Para instalar nuestro servidor dhcp ejecutamos:\nNos dará el siguiente error ya que no esta configurado :\nConfiguración del servidor isc-dhcp-server Lo primero que tenemos que hacer es configurar el interfaz de red por el que va a trabajar el servidor dhcp, para ello editamos el siguiente fichero:","tags":["Servicios","NAT","SMR","DHCP","SNAT"],"title":"Configuración servidor DHCP bajo debian"},{"categories":null,"contents":"Configuración servidor DNS en Debian Dnsmasq El paquete dnsmasq permite poner en marcha un servidor DNS de una forma muy sencilla. Simplemente instalando y arrancando el servicio dnsmasq, sin realizar ningún tipo de configuración adicional, nuestro PC se convertirá en un servidor caché DNS y además, resolverá los nombres que tengamos configurados en el archivo /etc/hosts de nuestro servidor. La resolución funcionará tanto en sentido directo como en sentido inverso, es decir, resolverá la IP dado un nombre de PC y el nombre del PC dada la IP.\nInstalación Para instalarlo solo sera necesario introducir el siguiente comando :\nConfiguración A continuación, editamos el fichero /etc/dnsmasq.conf y modificamos las siguientes líneas:\n1.Descomentamos strict-order para que se realicen las peticiones DNS a los servidores que aparecen en el fichero /etc/resolv.conf en el orden en él aparecen.\n2.Incluimos las interfaces de red que deben aceptar peticiones DNS, descomentar la línea interface por ejemplo: interface=eth0\nAhora crearemos nuestro archivo de configuración :\n3.Creamos el fichero de configuración de nuestra zona :\n4.El dominio que hemos elegido es iesgn.org\n5.Suponemos que el nombre del servidor es miservidor.\n6.Vamos a suponer que tenemos un servidor ftp que se llame ftp.iesgn.org y que está en 192.168.1.201 (esto es ficticio) y que tenemos dos sitios webs: www.iesgn.org y departamentos.iesgn.org.\n7.Además queremos nombrar al cliente que tenía asignada una reserva: lisa.\n8.Reiniciamos el servicio\nModificacion en el servidor DHCP Configura los clientes e indica que su DNS es nuestro servidor. Si tienes un servidor DHCP modificarlo para que envíe el nuevo DNS a los clientes.\nEditamos el fichero :\nY reiniciamos el servicio :\nAhora comprobaremos si el cliente nos ha cambiado el dns mirando el siguiente archivo :\nSe nos ha cambiado satisfactoriamente .\nComandos para comprobar funcionamiento dns Comprueba el funcionamiento usando el comando dig/nslookup desde los clientes preguntando por los distintos nombres. Comprueba que el servidor DNS hace de forwarder preguntando con dig/nslookup la dirección ip de www.josedomingo.org.\nPara la pagina de Jose domingo la respuesta es no autorizada porque nuestro servidor no tiene la resolución en su fichero y tiene que utilizar un forwarder\nComo ves arriba yo he creado mi propia zona y a pesar de haber seguido los pasos de esta pagina de Jose domingo , no he conseguido que las respuestas estén autorizadas .\nHe creado el archivo dns.conf .\nY he creado mi zona :\nTambién he probado mas cosas sin embargo la única forma que he conseguido que me de respuesta autorizada es teniendo solo las resoluciones en el fichero host del servidor , sin crear mi zona .\nDNS BIND 9 Instalación Lo primero que haremos sera desinstalar dnsmasq ya que ambos no son compatibles :\nAdemas podemos ver que nos dice que el directorio /etc/dnsmasq.d/ al no estar vació no se ha borrado seria bueno que lo borrásemos manualmente para eliminar todo rastro de anteriores configuraciones :\nAhora vamos a instalarlos bind:\nConfiguración Ahora vamos a editar el fichero /etc/bind/named.conf.local donde crearemos las zonas (directas e inversas). En el caso de la práctica nos piden una directa (isgn.com) y otra inversa (red 192.168.1).\nAñadiremos las siguientes líneas a dicho fichero :\nEn el directorio / etc/bind están los ficheros db.empty y db.127 (ficheros de configuración de la zona directa e inversa respectivamente). Los copiamos al directorio / var/cache/bind para empezar a añadir los registros\nModificamos el fichero / var/cache/bind/db.isgn e incluimos las siguientes líneas para la resolución directa :\n*javiercruces es el nombre de mi maquina lo he cambiado para facilitar las cosas\nAhora haremos lo mismo para la resolución inversa :\nAhora reiniciaremos el servicio para que se apliquen los cambios :\nAdemas para asegurarnos de que hemos realizado bien la configuración vamos a mirar el estado del servicio para ver si nuestras zonas están funcionando :\nEste paso es opcional , pero gracias a revisar esto he descubierto porque no me hacia la resolución inversa y gracias a ver las zonas que estaban cargadas me di cuenta de que el error estaba en el fichero de configuración /etc/bind/named.conf.local y pude solucionarlo .\nReenviador Hasta ahora, sólo nos resolvería los nombres e ip de nuestra red local. Si queremos configurar un reenviador al que preguntar en caso de que el DNS local no pueda darnos la respuesta, debemos editar el fichero nano / etc/bind/named.conf.options y añadir lo siguiente:\nAntes de hacer este apartado aclarar que como en el apartado de dnsmasq ya comentamos el fichero host y modificamos la configuración del dhcp para que asigne el dns automáticamente , lo omitiré de esta parte.\nComandos para comprobar el funcionamiento del servicio Comprueba el funcionamiento usando el comando dig/nslookup desde los clientes preguntando por los distintos nombres. Comprueba que el servidor DNS hace de forwarder preguntando con dig/nslookup la dirección ip de www.josedomingo.org .\nVemos aquí que las respuestas son correctas , las que están en nuestro servidor estas autorizadas mientras que la pagina de Jose domingo nos la ha echo un forwarder .\nAhora haré las mismas peticiones pero inversas :\nCon esto hemos comprobado que el servidor dns funciona correctamente .\n","date":"September 8, 2023","hero":"/javierasping.github.io/images/servicios/dns/portada-dns.jpg","permalink":"https:/javierasping.github.io/posts/servicios/dns/dns/","summary":"Configuración servidor DNS en Debian Dnsmasq El paquete dnsmasq permite poner en marcha un servidor DNS de una forma muy sencilla. Simplemente instalando y arrancando el servicio dnsmasq, sin realizar ningún tipo de configuración adicional, nuestro PC se convertirá en un servidor caché DNS y además, resolverá los nombres que tengamos configurados en el archivo /etc/hosts de nuestro servidor. La resolución funcionará tanto en sentido directo como en sentido inverso, es decir, resolverá la IP dado un nombre de PC y el nombre del PC dada la IP.","tags":["Servicios","NAT","SMR","DHCP","SNAT","DNS","BIND9","DNSMASQ"],"title":"Configuración servidor DNS en Debian"},{"categories":null,"contents":"Empaquetadores y compresores en Linux Los empaquetadores y compresores son elementos fundamentales en la gestión de archivos y datos en el ámbito informático. Los empaquetadores permiten agrupar varios archivos en un solo contenedor, facilitando su manipulación y transporte. Por otro lado, los compresores aplican técnicas para reducir el tamaño de los archivos, contribuyendo al ahorro de espacio de almacenamiento y agilizando la transferencia de datos. Estas herramientas desempeñan un papel crucial en la optimización de recursos y la eficiencia operativa al organizar, distribuir y respaldar información de manera más eficaz.\nTAR Es un empaquetador de archivos que como su propio nombre indica utiliza el formato .tar, básicamente se utiliza para almacenar ficheros y directorios en un mismo archivo.\nEl nombre del paquete es tar .\nCrear un archivo .tar Puedes crear compresiones .tar tanto para un archivo como para directorios. Un ejemplo de este tipo de archivo es:\ntar -cvf sampleArchive.tar /home/sampleArchive Aquí /home/sampleArchive es el directorio que necesita ser comprimido creandosampleArchive.tar. Este comando usa las opciones –cvf que significan:\nc – crear un nuevo archivo .tar v – muestra una descripción detallada del progreso de la compresión f – nombre del archivo Crear un archivo .tar.gz Si deseas una mejor compresión, también puedes usar .tar.gz. Un ejemplo de esto es:\ntar -cvzf sampleArchive.tar.gz /home/sampleArchive La opción adicional z representa la compresión gzip. Alternativamente, puedes crear un archivo .tgz que sea similar a tar.gz. Te mostramos un ejemplo de esto último a continuación:\ntar -cvzf sampleArchive.tgz /home/sampleArchive Crear un archivo .tar.bz2 El archivo .bz2 proporciona más compresión en comparación con gzip. Sin embargo, esta alternativa tomará mas tiempo para comprimir y descomprimir. Para usarla, debes usar la opción -j. Un ejemplo de cómo se vería la operación es el siguiente:\ntar -cvjf sampleArchive.tar.bz2 /home/sampleArchive Dicha operación es similar a .tar.tbz o .tar.tb2. Te muestro un ejemplo a continuación:\ntar -cvjf sampleArchive.tar.tbz /home/sampleArchive tar -cvjf sampleArchive.tar.tb2 /home/sampleArchive Cómo descomprimir archivos .tar El comando Tar de Linux también se puede utilizar para extraer un archivo. El siguiente comando extraerá los archivos en el directorio actual:\ntar -xvf sampleArchive.tar Si deseas extraer tus archivos a un directorio diferente, puedes usar la opción -C. Te mostramos un ejemplo de esto a continuación:\ntar -xvf sampleArchive.tar -C /home/ExtractedFiles/ Puedes usar un comando similar para descomprimir archivos .tar.gz, tal como se muestra a continuación:\ntar -xvf sampleArchive.tar.gz tar -xvf sampleArchive.tar.gz -C /home/ExtractedFiles/ Los archivos .tar.bz2 o .tar.tbz o .tar.tb2 pueden descomprimirse de manera similar. Para esto deberás teclear el siguiente comando en la línea de comando:\ntar -xvf sampleArchive.tar.bz2 Cómo listar el contenido de un archivo .tar Una vez que hayas creado el archivo, puedes listar el contenido mediante un comando similar al siguiente:\ntar -tvf sampleArchive.tar Esto mostrará la lista completa de archivos junto con las marcas de tiempo y los permisos. Del mismo modo, para .tar.gz, puedes usar un comando como:\ntar -tvf sampleArchive.tar.gz Esto también funcionaría para archivos .tar.bz2 como se muestra a continuación: tar -tvf sampleArchive.tar.bz2\nCómo descomprimir un único archivo .tar Una vez que creas un archivo comprimido, puedes extraer un único archivo de ese comprimido. Esto lo puedes lograr con el comando que te mostramos a continuación:\ntar -xvf sampleArchive.tar example.sh Aquí example.sh es un archivo único que se extraerá del comprimido sampleArchive.tar. Alternativamente, también puedes usar el siguiente comando:\ntar --extract --file= sampleArchive.tar example.sh Para extraer un solo archivo de un comprimido .tar.gz puedes usar un comando similar al mostrado a continuación:\ntar -zxvf sampleArchive.tar.gz example.sh O alternativamente:\ntar --extract --file= sampleArchive.tar.gz example.sh Para extraer un solo archivo de un comprimido .tar.bz2 puedes usar un comando como este:\ntar -jxvf sampleArchive.tar.bz2 example.sh O, alternativamente, uno como este:\ntar --extract --file= sampleArchive.tar.bz2 example.sh Cómo extraer múltiples archivos de los archivos .tar En caso de que desees extraer varios archivos, usa el siguiente formato del comando:\ntar -xvf sampleArchive.tar \u0026#34;file1\u0026#34; \u0026#34;file2\u0026#34; Para .tar.gz puedes usar:\ntar -zxvf sampleArchive.tar.gz \u0026#34;file1\u0026#34; \u0026#34;file2\u0026#34; Para .tar.bz2 puedes usar:\ntar -jxvf sampleArchive.tar.bz2 \u0026#34;file1\u0026#34; \u0026#34;file2\u0026#34; Extraer múltiples archivos con un patrón Si deseas extraer del comprimido patrones específicos de archivos como solo los .jpg, usa el comando wildcards. Una muestra de dicho comando se muestra a continuación:\ntar -xvf sampleArchive.tar --wildcards \u0026#39;\\*.jpg\u0026#39; Para .tar.gz puedes usar:\ntar -zxvf sampleArchive.tar.gz --wildcards \u0026#39;\\*.jpg\u0026#39; Para .tar.bz2 puedes usar:\ntar -jxvf sampleArchive.tar.bz2 --wildcards \u0026#39;\\*.jpg\u0026#39; Cómo agregar archivos a un archivo .tar Si bien puedes extraer archivos específicos, también puedes agregar archivos nuevos a un archivo comprimido existente. Para hacerlo, debes usar la opción -r que significa agregar. El comando Tar puede agregar tanto archivos como directorios.\nA continuación se muestra un ejemplo en el que estamos agregando example.jpg al sampleArchive.tar existente.\ntar -rvf sampleArchive.tar example.jpg También podemos agregar un directorio. En el ejemplo que te mostramos a continuación, el directorio image_dir se agrega al archivo sampleArchive.tar\ntar -rvf sampleArchive.tar image\\_dir No puedes agregar archivos o carpetas a comprimidos .tar.gz o .tar.bz2.\nCómo verificar un archivo .tar Usando Tar puedes verificar un archivo. Esta es una de las formas en que puedes hacerlo:\ntar -tvf sampleArchive.tar Esto no se puede aplicar en archivos .tar.gz o .tar.bz2.\nCómo verificar el tamaño del archivo .tar Una vez que crees un archivo, puedes verificar su tamaño. Este se mostrará en KB (Kilobytes).\nA continuación te mostramos varios ejemplos del comando a usar para verificar el tamaño de diferentes tipos de archivos comprimidos:\ntar -czf - sampleArchive.tar | wc -c tar -czf - sampleArchive.tar.gz | wc -c tar -czf - sampleArchive.tar.bz2 | wc -c GZIP Puede comprimir un archivo usando gzip con el comando llamado gzip . El nombre de este paquete es gzip .\nEste es el uso más simple: gzip filename\nEsto comprimirá el archivo y agregará un .gz extensión a ella. Se elimina el archivo original. Para evitar esto, puede utilizar el- c y use la redirección de salida para escribir la salida en elfilename.gzexpediente:\ngzip -c filename \u0026gt; filename.gz los -c La opción especifica que la salida irá al flujo de salida estándar, dejando el archivo original intacto o puede usar el -k opción:\ngzip -k filename Hay varios niveles de compresión. Cuanto mayor sea la compresión, más tiempo llevará comprimir (y descomprimir). Los niveles van de 1 (más rápido, peor compresión) a 9 (más lento, mejor compresión), y el valor predeterminado es 6.\nPuede elegir un nivel específico con el - opción:\ngzip -1 filename Puede comprimir varios archivos enumerándolos:\ngzip filename1 filename2 Puede comprimir todos los archivos de un directorio, de forma recursiva, utilizando el -r :\ngzip -r folder gziptambién se puede utilizar para descomprimir un archivo, utilizando el -d opción:\ngzip -d filename.gz BZIP2 El bzip2 es muy similar al programa gzip. La principal diferencia es que utiliza un algoritmo de compresión diferente llamado algoritmo de compresión de texto de clasificación de bloques Burrows-Wheeler y codificación Huffman. Los archivos comprimidos con bzip2 finalizarán con la extensión .bz2.\nComo dije, el uso de bzip2 es casi lo mismo que gzip. Simplemente tendremos que reemplazar gzip en los ejemplos anteriores por bzip2, gunzip por bunzip2, zcat con bzcat y así sucesivamente.\nPara comprimir un archivo usando bzip2, reemplazándolo por una versión comprimida, ejecutaremos:\nbzip2 prueba.txt # Nos creara un archivo prueba.txt.bz2 Comprimir los archivos sin eliminar el archivo original\nSi no queremos reemplazar el archivo original, utilizaremos la opción -c y escribiremos el resultado en un nuevo archivo.\nBzip2 -c prueba.txt # prueba.txt.bz2 Descomprimir archivos\nPara descomprimir un archivo comprimido utilizaremos alguna de las dos siguientes posibilidades:\nbzip2 -d prueba.txt.bz2 bunzip2 prueba.txt.bz2 Ver el contenido de los archivos comprimidos sin descomprimirlos\nPara ver el contenido de un archivo comprimido sin descomprimirlo, no tendremos más que utilizar cualquiera de las opciones:\nbunzip2 -c ubunlog.txt.bz2 bzcat ubunlog.txt.bz2 XZ El paquetes es xz-utils\nComprimir\nEl ejemplo más simple de compresión de un archivo con xz es el siguiente. Compresión de archivos con XZ\nxz deb.iso También se puede utilizar la opción -z para realizar la compresión:\nxz -z deb.iso Estas órdenes comprimirán el fichero, pero eliminará el archivo origen. Si no buscamos borrar los archivos de origen, usaremos la opción -k de la siguiente manera:\nxz -k deb.iso Descomprimir\nPara descomprimir un archivo, vamos a poder utilizar la opción -d:\nxz -d deb.iso unxz deb.iso Forzar compresión\nSi una operación falla, por ejemplo, si existe un archivo comprimido con el mismo nombre, usaremos la opción -f para forzar el proceso:\nxz -kf deb.iso Establecer niveles de compresión\nEsta herramienta admite diferentes niveles preestablecidos de compresión (de 0 a 9. Con un valor predeterminado de 6). También vamos a poder utilizar alias como –fast (será rápido, pero con menos compresión) para establecer como valor 0 y –best para establecer como valor 9 (compresión lenta pero más alta). Algunos ejemplos de cómo establecer estos niveles, son los siguientes:\nxz -k -8 deb.iso xz -k --best deb.iso Limitar la memoria\nEn caso de tener una cantidad pequeña de memoria del sistema y querer comprimir un archivo enorme, vamos a tener la posibilidad de utilizar la opción -memory = límite (el valor límite puede estar en MB o como porcentaje de RAM) para establecer un límite de uso de memoria para la compresión:\nxz -k --best --memlimit-compress=10% deb.iso Habilitar modo silencioso\nSi nos interesa ejecutar la compresión en modo silencioso solo habrá que añadir la opción -q. También podremos habilitar el modo detallado con -v, como se muestra a continuación:\nxz -k -q deb.iso xz -k -qv deb.iso Crear un archivo tar.xz\nEl siguiente es un ejemplo del uso para conseguir un archivo con la extensión tar.xz.\ntar -cf *.txt | xz -7 \u0026gt; deb.tar.xz Crear un archivo tar.xz opción 2\ntar -cJf deb.tar.xz *.txt Comprobar la integridad de los archivos comprimidos\nPodremos probar la integridad de los archivos comprimidos utilizando la opción -t. Utilizando -l podremos ver la información sobre un archivo comprimido.\nxz -t deb.tar.xz xz -l deb.tar.xz 7Z Este compresor cuenta con dos paquetes :\np7zip ofrece soporte para 7zr (una versión ligera de 7z y 7za). Permite comprimir y descomprimir paquetes en estos formatos mediante la herramienta gráfica de tu sistema (file-roller en Ubuntu y Debian) pero no dispone de la funcionalidad de cifrado. p7zip-full es, por decirlo de algún modo, la versión más completa. Soporta los formatos 7z y 7za e incorpora la funcionalidad de cifrado, además de las herramientas para la compresión ZIP Comprimir Uno o Varios Archivos\nEl formato es siempre es la misma, consiste en colocar 7z, seguido de la opción a (para comprimir o empaquetar), seguido del nombre que quieres dar al paquete final (no hace falta colocar la extensión .7z) y acabando con el nombre del archivo a comprimir. Podrás observar que 7-Zip es capaz de aprovechar todos los núcleos de tu procesador durante la operación.\n7z a paquete-comprimido archivo-a-comprimir 7z a paquete-comprimido archivo-1 archivo-2 Si queremos ponerle contraseña utilizamos el parámetro -p :\n7z a -p paquete-comprimido archivo-a-comprimir 7-Zip soporta varios formatos de compresión o empaquetado, aparte del suyo propio, con esta sentencia podrás optar por indicar explícitamente que formato quieres utilizar (puedes escoger entre 7z, zip, gzip, bzip2 o tar).\n7z a -tgzip paquete-comprimido archivo-a-comprimir Listar Contenido de la Carpeta Comprimido\nOtra opción interesante puede ser listar el contenido dentro de un archivador y ver los detalles. Para ello tienes que situarte igualmente en el directorio en el que se encuentra el archivador o carpeta comprimida y teclear la siguiente sentencia.\n7z l paquete-comprimido.7z Descomprimir Paquete y Extraer Ficheros\nUna vez conocido el contenido dentro del archivador, para extraer de golpe todo el contenido dentro del directorio de trabajo actual, puedes valerte del siguiente comando:\n7z e paquete-comprimido.7z Comprobar Integridad de los Datos\nComo opción adicional, también puedes comprobar la integridad de los diferentes archivos que se encuentran dentro del fichero comprimido. Para ello utiliza esto:\n7z t paquete-comprimida.7z RAR El paquete para instalarlo es rar .\nCómo comprimir RAR en Linux\nPara comprimir un fichero o todos los de una carpeta:\nrar a nombre_fichero_comprimido.rar nombre_fichero_a_comprimir rar a nombre_fichero_comprimido.rar Cómo descomprimir RAR en Linux\nY para descomprimir en el mismo directorio o en otro diferente:\nunrar x nombre\\_del\\_rar.rar unrar x nombre\\_del\\_rar.rar /ruta/destino/descomprimido ZIP El nombre del paquete es zip.\nPara comprimir archivos :\nzip archivo.zip archivos Para descomprimir archivos :\nunzip archivo.zip Ver contenido :\nunzip -v archivo.zip Bibliografía Guía comando tar Guía comando gzip Guía comando bzip2 Guía xz Guía comando 7z Guía comando rar ","date":"September 8, 2023","hero":"/javierasping.github.io/images/sistemas/empaquetadores/portada.jpg","permalink":"https:/javierasping.github.io/posts/sistemas/empaquetadores_compresores/empaquetadores-compresores-descompresores/","summary":"Empaquetadores y compresores en Linux Los empaquetadores y compresores son elementos fundamentales en la gestión de archivos y datos en el ámbito informático. Los empaquetadores permiten agrupar varios archivos en un solo contenedor, facilitando su manipulación y transporte. Por otro lado, los compresores aplican técnicas para reducir el tamaño de los archivos, contribuyendo al ahorro de espacio de almacenamiento y agilizando la transferencia de datos. Estas herramientas desempeñan un papel crucial en la optimización de recursos y la eficiencia operativa al organizar, distribuir y respaldar información de manera más eficaz.","tags":["Linux","sistemas","ISO","ASO"],"title":"Empaquetadores y compresores en Linux"},{"categories":null,"contents":"Enrutamiento en OpenStack En esta práctica, exploraremos la creación de un escenario mediante la orquestación de OpenStack y, posteriormente, llevaremos a cabo el enrutamiento para asegurar la conectividad entre las distintas máquinas virtuales. Este ejercicio nos permitirá comprender y aplicar el uso de OpenStack para gestionar entornos virtuales, además de configurar la red de manera eficiente para facilitar la comunicación entre los diferentes dispositivos en el escenario.\nEscenario a montar en OpenStack Para poder montar nuestro escenario en OpenStack debido a la situación actual de las imágenes que hay disponibles , necesitaremos preparar una instancia la cual tenga habilitado el acceso por contraseña . Además si posteriormente a partir de una queremos configurar otra habilitar el acceso ssh por contraseña para este usuario .\nEsta tendremos que crearla con el mismo flavour con las que generaremos el escenario para evitar errores .\nCuanto tengamos a punto nuestra instancia comprobaremos que puedes iniciar sesión desde horizon :\nAhora crearemos una instantánea :\nCopiaremos el ID de las instantánea :\nY lo añadiremos al fichero :\nY lo desplegaremos :\nVemos que se ha creado correctamente :\nEsquema gráfico de la configuración El esquema quedaría de la siguiente manera :\nTeniendo la siguiente relación de IPS :\nMAQUINA IP INTERFAZ PC1 10.0.100.144 ens3 R1-PC1 10.0.100.68 ens3 R1-R2 10.0.110.78 ens4 R2-R1 10.0.110.30 ens3 R2-PC2 10.0.120.191 ens4 PC2 10.0.120.203 ens3 R2-R3 10.0.130.146 ens5 R3-R2 10.0.130.36 ens3 R3-PC3 10.0.140.127 ens4 PC3 10.0.140.158 ens3 Tablas de enroutamiento\nR1 10.0.100.0/24 0.0.0.0 ens3 10.0.110.0/24 0.0.0.0 ens4 10.0.120.0/24 10.0.110.30 ens4 10.0.130.0/24 10.0.110.30 ens4 10.0.140.0/24 10.0.110.30 ens4 0.0.0.0/0 10.0.110.30 ens4 *Las redes en las que estamos directamente conectados se crearan automáticamente las rutas.\nR2 10.0.100.0/24 10.0.110.178 ens3 10.0.110.0/24 0.0.0.0 ens3 10.0.120.0/24 0.0.0.0 ens4 10.0.130.0/24 0.0.0.0 ens5 10.0.140.0/24 10.0.130.36 ens5 0.0.0.0/0 10.0.130.36 ens5 *Las redes en las que estamos directamente conectados se crearan automáticamente las rutas.\nR3 10.0.100.0/24 10.0.130.146 ens3 10.0.110.0/24 10.0.130.146 ens3 10.0.120.0/24 10.0.130.146 ens3 10.0.130.0/24 0.0.0.0 ens3 10.0.140.0/24 0.0.0.0 ens4 0.0.0.0/0 10.0.130.146 ens4 Comandos de configuración de cada nodo Router 1 Como es un router deberemos de activar el bit de forwarding para ello introduciremos el siguiente comando :\necho 1 \u0026gt; /proc/sys/net/ipv4/ip\\_forward Crearemos la tabla de enrutamiento :\nLas rutas estáticas :\nip route add 10.0.100.0/24 via 0.0.0.0 dev ens3 La ruta por defecto:\nip route add default via 10.0.110.30 dev ens4 Nos quedaría así la tabla de enroutamiento :\nPC1 Borraremos la ruta por defecto que exista en el dispositivo\nY añadiremos la nueva ruta\nRouter 2 Como es un router deberemos de activar el bit de forwarding para ello introduciremos el siguiente comando :\necho 1 \u0026gt; /proc/sys/net/ipv4/ip\\_forward Crearemos la tabla de enroutamiento :\nQuedaría así :\nPC2** Al igual que hicimos anteriormente eliminaremos la ruta por defecto que trae y la añadiremos la nueva :\nActivaremos el bit de forwarding con el siguiente comando :\necho 1 \u0026gt; /proc/sys/net/ipv4/ip\\_forward Crearemos la tabla de enroutamiento para nuestro escenario :\nLa tabla de enroutamiento quedaría así :\nPC3 Al igual que con los demás deberemos de cambiar la ruta por defecto por la ip del router a la que estamos conectado :\nResumen de configuración y aclaraciones Para los routers Activar el bit de forwarding Crear las tablas de enroutamiento Modificar la ruta por defecto Para los PCs Modificar la ruta por defecto Lo de modificar la ruta por defecto , es debido a que no puedo modificar la configuración de las tarjetas de red por lo que no puedo modificar la puerta de enlace .\nPor defecto al utilizar el script esta viene con la puerta de enlace X.X.X.1 sin embargo esta no coincide con la puerta de enlace de los clientes .\nPara los routers debemos de modificarla también para indicar por donde mandaremos el trafico “por defecto”.\nSi queremos hacer que el bit del forwarding se guarde permanentemente para que cuando reiniciemos el equipo este no vuelva a 0 :\n–\u0026gt; Escribimos directamente en el archivo /etc/sysctl.conf:\nSi queremos volcar en un archivo la configuración de las tablas de enroutamiento para tener una copia de seguridad de las mismas usamos :\nSi queremos restaurar la copia :\nVerificación de conectividad (ping) entre nodos PC1 PC1 – PC2\nPC1-PC3\nPC2 PC2-PC1\nPC2-PC3\nPC3 PC3-PC1\nPC3-PC2\nCaptura de tráfico en el router r2 o r3 mostrando tráfico entre h1 y h3. Para hacer una captura de una determinada interfaz y guardarla en un archivo utilizaremos tcpdump:\ntcpdump -i NOMBRE\\_INTERFAZ -w NOMBRE\\_ARCHIVO Si queremos tener una salida al comando en lugar de guardar el archivo usaremos el parámetro -n: Aquí vemos como llegan los ICMP REQUEST de PC3 a PC1 y los ICMP REPLY DE PC1 a PC3\nAdemás he capturado una petición y respuesta arp de PC3:\nBibliografía Como hacer tablas de enroutamiento ","date":"September 8, 2023","hero":"/javierasping.github.io/images/redes/enrutamiento_os/portada.png","permalink":"https:/javierasping.github.io/posts/redes/enroutamiento_openstack/enroutamiento_openstack/","summary":"Enrutamiento en OpenStack En esta práctica, exploraremos la creación de un escenario mediante la orquestación de OpenStack y, posteriormente, llevaremos a cabo el enrutamiento para asegurar la conectividad entre las distintas máquinas virtuales. Este ejercicio nos permitirá comprender y aplicar el uso de OpenStack para gestionar entornos virtuales, además de configurar la red de manera eficiente para facilitar la comunicación entre los diferentes dispositivos en el escenario.\nEscenario a montar en OpenStack Para poder montar nuestro escenario en OpenStack debido a la situación actual de las imágenes que hay disponibles , necesitaremos preparar una instancia la cual tenga habilitado el acceso por contraseña .","tags":["Redes","Enroutamiento"],"title":"Enrutamiento en OpenStack"},{"categories":null,"contents":"Servidor FTP bajo debian Instalación y configuración del servidor proFTPd autentificado 1.Primero nos crearemos un grupo que se llame ftpgroup : 2.Crea dos usuarios locales que pertenezcan al grupo ftp que hemos creado: Jose y Maria\n3.Nos instalamos el servicio ftp :\n4.Configuración básica del fichero proftpd.conf:\nTodos los usuarios accedan solo a su directorio :\nAhora podemos acceder desde el navegador con los usuarios Jose y Maria :\nCada uno de estos he creado una carpeta con su nombre dentro de sus directorios personales para poder identificarlos .\nPara que cada usuario pueda conectarse realmente al servidor FTP en Debian y le sea posible subir y descargar los datos en su propio directorio, debes introducir su directorio de entrada en proftpd.conf :\nPodemos transferir archivos correctamente :\nConfiguración de proFTPd para crear ftp anónimo Lo primero que tenemos que hacer es crear el directorio y darle el propietario adecuado:\nAhora cambiaremos esta regla y permitiremos que todos puedan unirse :\nAdemas añadimos las siguientes lineas e indicaremos la ruta a la que accederán los anónimos :\nPor lo que cuando reiniciemos podrán conectarse los usuarios anónimos :\nPero no con los usuarios que hemos creado anteriormente :\nPara permitir que nuestros usuarios se puedan conectar ademas de los anónimos:\nAhora aplicamos estos cambios y probamos a conectarnos . Vemos que con anónimos no podemos copiar nada al servidor pero si podemos descargar.\nAhora con un usuario del grupo , podremos copiar archivos :\n","date":"September 8, 2023","hero":"/javierasping.github.io/images/servicios/ftp/portada-ftp.png","permalink":"https:/javierasping.github.io/posts/servicios/ftp/ftp/","summary":"Servidor FTP bajo debian Instalación y configuración del servidor proFTPd autentificado 1.Primero nos crearemos un grupo que se llame ftpgroup : 2.Crea dos usuarios locales que pertenezcan al grupo ftp que hemos creado: Jose y Maria\n3.Nos instalamos el servicio ftp :\n4.Configuración básica del fichero proftpd.conf:\nTodos los usuarios accedan solo a su directorio :\nAhora podemos acceder desde el navegador con los usuarios Jose y Maria :\nCada uno de estos he creado una carpeta con su nombre dentro de sus directorios personales para poder identificarlos .","tags":["Servicios","NAT","SMR","IPTABLES","SNAT","SSH","FORWARDING","APACHE","FTP"],"title":"FTP bajo debian "},{"categories":null,"contents":"Gestión de Procesos en Linux En el ecosistema de Linux, un proceso es la ejecución de un programa específico que realiza una tarea particular. Cada proceso tiene su propio identificador único (PID) y está compuesto por un conjunto de recursos, como memoria y CPU, que le permiten funcionar de manera independiente.\nEn el universo de Linux, la gestión efectiva de procesos es una habilidad crucial para optimizar el rendimiento y asegurar la estabilidad del sistema. Este post te sumergirá en los fundamentos esenciales de la gestión de procesos\nPS Si no añadimos ningún parámetro, ps mostrará los procesos del usuario con el que estamos logueados. Por otra parte, los parámetros más básicos a conocer son los siguientes:\naux : Lista los procesos de todos los usuarios con información añadida (destacamos más abajo).\n-a Lista los procesos de todos los usuarios.\n-u Lista información del proceso como por ejemplo el usuario que lo está corriendo, la utilización de CPU y memoria, etc.\n-x Lista procesos de todas las terminales y usuarios\n-l Muestra información que incluye el UID y el valor «nice«.\n–-forest Muestra el listado procesos en un formato tipo árbol que permite ver como los procesos interactúan entre si, podría ser algo similar al comando pstree.\nPSTREE El programa pstree facilita información sobre la finalización de una serie de procesos relacionados entre sí, esto es, todos los descendientes de un proceso particular. El programa deja claro desde un principio que proceso es el primario y cuales son los secundarios. Esto evita buscar las relaciones entre los diversos procesos de manera manual.\nParámetros comúnmente utilizados :\n-H: Si nos interesa podemos ver el árbol de un proceso específico:\n-g: Nos agrupara los procesos por grupos :\n-n: Nos permite ordenar la salida por el numero de PID:\n-p: Muestra el numero de PID\n-s:Muestra los procesos padres\nSYSTEMCTL STATUS Este comando se utiliza para ver el estado en el que se encuentra un servicio , Específicamente, muestra información sobre si el servicio o unidad está activo o inactivo, y si está en ejecución o detenido. También muestra cualquier mensaje de error o advertencia relacionado con el servicio o unidad. Este comando es útil para verificar el estado de un servicio o unidad en el sistema y para resolver problemas relacionados con ellos.\nTOP Es un programa todo en uno: simultáneamente cumple las funciones de ps y kill. Es un comando de modo consola, por lo que debe iniciarlo desde una terminal .\nDentro de este podemos controlarlo usando las siguientes teclas:\n-k: este comando se usa para enviar una señal a un proceso. Luego, top le preguntará por el PID del proceso, seguido del número de la señal a enviar (predeterminadamente TERM — o 15);\n-M: este comando se usa para ordenar el listado de los procesos de acuerdo a la memoria que usan (campo %MEM);\n-P: este comando se usa para\nordenar el listado de procesos de acuerdo al tiempo de CPU que consumen(campo %CPU; este es el método de ordenamiento predeterminado);\n-u: este comando se usa para mostrar los procesos de un usuario en particular, top le preguntará de cual. Debe ingresar el nombre del usuario.\n-i: este comando actúa como un interruptor; predeterminadamente se muestran todos los procesos, incluso los que están dormidos; este comando asegura que se muestran sólo los procesos que están en curso de ejecución :\nHTOP Htop es la version mejorada y actual de top la cual tiene una interfaz mas amigable y mas funcionalidades las cuales nos ayudaran a la supervisión de procesos . Este se divide en varias partes :\nEl encabezado divide la parte superior de la interfaz en secciones izquierda y derecha. Estos muestran el uso de la CPU/memoria, el espacio de intercambio, el tiempo de actividad de la máquina, las tareas y la carga promedio.\nLa sección superior izquierda muestra una línea para cada núcleo de CPU. Por ejemplo, la captura de pantalla anterior muestra dos núcleos de CPU, con el porcentaje que representa la carga en cada uno.\nTambién puede ver el código de colores proporcionado por htop para identificar qué tipo de procesos utilizan la CPU:\nRojo: porcentaje ocupado por procesos del sistema Azul: porcentaje ocupado por proceso de baja prioridad Verde: porcentaje ocupado por procesos de usuario Las líneas de memoria también usan códigos de colores, esta vez para representar:\nAmarillo: porcentaje ocupado por caché contenido Verde: porcentaje ocupado por la memoria utilizada Azul: porcentaje ocupado por contenido buffer El panel central muestra todos los procesos en ejecución con sus estadísticas asociadas según la utilización de la CPU. Muestra la siguiente información para cada proceso:\nID de proceso (PID) El propietario (Usuario) Consumo de memoria virtual porcentaje de procesador memoria física Para finalizar este programa también es interactivo , abajo tenemos un índice donde podemos comprobar las funciones que nos permite usar :\nAdemás disponemos de varios atajos de teclados :\nu Ordenar procesos por nombre de usuario p Alternar con la ruta del programa F2 o S Entrar en Configuración F3 o / Proceso de búsqueda F5 o t Vista ordenada o de árbol F6 +/- Seleccione el proceso principal para expandir/contraer el árbol F7 o [ Aumentar la prioridad solo para root F8 o ] Prioridad baja (bueno +) F9 o k Matar proceso H Alterna con subprocesos de proceso de usuario K Alterna con subprocesos de proceso del kernel \u0026amp; El símbolo \u0026amp; es un operador de shell en Unix y Linux que permite ejecutar un proceso en segundo plano. Al colocar \u0026amp; al final de un comando, se ejecutará el proceso en segundo plano y se le asignará una tarea en segundo plano. Esto significa que el proceso se ejecutará en paralelo con otras tareas y no bloqueará la terminal o la línea de comandos hasta que finalice.\nJOBS Este comando listara los procesos que se encuentran en segundo pano así como su estado , nos permite saber su PID:\nFG Complementando al comando anterior , este nos permite reanudar en primer plano el último trabajo que fue suspendido.:\nListando con jobs podemos mandar un proceso en especifico a primer plano :\nBG Cuando un comando se está ejecutando puedes suspenderlo usando ctrl-Z. El comando se detendrá inmediatamente, y volverás al shell de la terminal.\nPuedes reanudar la ejecución del comando en segundo plano, así que seguirá ejecutándose pero no te impedirá hacer otro trabajo en la terminal.\nKILL Los procesos de Linux pueden recibir señales y reaccionar a ellas. Esa es una forma en la que podemos interactuar con los programas en ejecución. El programa kill puede enviar una variedad de señales a un programa. No sólo se usa para terminar un programa, como el nombre lo sugiere, sino que es su principal trabajo Por defecto, este manda una señal TERM al identificador de proceso indicado.\nPodemos listar las señales con kill -l :\nMandamos una señal con el parámetro -s seguida del numero de esta y el PID del proceso :\nXKILL Este es el método más sencillo y el más práctico. El cursor del mouse se transformará en una pequeña calavera. Todo lo que resta es hacer clic en la ventana que querés cerrar y voilá. Chau proceso.\nKILLALL Similar al comando kill, killall enviará la señal a múltiples procesos a la vez en lugar de enviar una señal a un identificador de proceso específico . Por ejemplo, puedes tener múltiples instancias del programa top en ejecución, y killall top terminará con todos ellos.\nPuedes especificar la señal, como con kill :\nPor ejemplo podemos matar todos los tops :\nPIDOF Te permite encontrar el ID del proceso de un programa en ejecución:\n-s: Petición única - ordena al programa devolver un único identificador de proceso\nPID BASH echo t$$ → id bash\nEs una forma rápida de encontrar el identificador actual de la bash :\nNICE Ejecuta un comando con una prioridad determinada, o modifica la prioridad a de un proceso (programa en ejecución). Utiliza una prioridad variable que parte de la prioridad del shell y suma o resta valores. Mientras menor es el valor de la prioridad mayor prioridad tiene el proceso.\nEl valor de la prioridad del proceso find aumenta en 5, disminuye su prioridad.\nRENICE Sirve para cambiar la prioridad de un proceso :\nPKILL Este comando nos permite matar un proceso del que conocemos su nombre completo o parte de él. Veamos un ejemplo:\nBibliografía Guía de uso pstree Guía de uso envío de señales Guía de uso htop Guía de uso nice , renice , kill \u0026hellip; ","date":"September 8, 2023","hero":"/javierasping.github.io/images/sistemas/comandos_procesos/portata_procesos.jpg","permalink":"https:/javierasping.github.io/posts/sistemas/comandos_procesos/comandos_procesos/","summary":"Gestión de Procesos en Linux En el ecosistema de Linux, un proceso es la ejecución de un programa específico que realiza una tarea particular. Cada proceso tiene su propio identificador único (PID) y está compuesto por un conjunto de recursos, como memoria y CPU, que le permiten funcionar de manera independiente.\nEn el universo de Linux, la gestión efectiva de procesos es una habilidad crucial para optimizar el rendimiento y asegurar la estabilidad del sistema.","tags":["Debian 12","sistemas","ISO","ASO"],"title":"Gestión de Procesos en Linux"},{"categories":null,"contents":"Instalación drivers NVIDIA en Debian 12 La instalación de los controladores de NVIDIA en el universo de Linux ha sido tradicionalmente un desafío, especialmente en distribuciones como Debian, donde las políticas del software libre a menudo complican el proceso.\nEn este post voy a explicarte una forma sencilla de instalar los drivers de NVIDIA usando los repositorios oficiales de Debian . Además, al final del artículo, aprenderás a instalar una herramienta clave llamada Nvidia Optimus, que te brindará la capacidad de seleccionar qué tarjeta gráfica utilizará tu equipo.\nEsta herramienta es especialmente útil en portátiles, ya que es común que estos dispositivos presenten problemas al emitir video a través de los puertos, una situación que puede ser fácilmente con esta herramienta.\nIdentificación de Nuestra GPU Antes de embarcarnos en la instalación y configuración, es fundamental conocer el hardware de nuestro equipo. Para averiguar qué tarjetas gráficas están disponibles en nuestro sistema, utilizaremos el siguiente comando:\njaviercruces@HPOMEN15:~$ lspci -nn | egrep -i \u0026#34;3d|display|vga\u0026#34; 01:00.0 VGA compatible controller [0300]: NVIDIA Corporation GA106M [GeForce RTX 3060 Mobile / Max-Q] [10de:2520] (rev a1) 06:00.0 VGA compatible controller [0300]: Advanced Micro Devices, Inc. [AMD/ATI] Cezanne [Radeon Vega Series / Radeon Vega Mobile Series] [1002:1638] (rev c5) Como se puede apreciar en la salida del comando anterior, mi equipo portátil cuenta con dos tarjetas gráficas. Identificar el modelo es crucial, ya que si optamos por una instalación manual del controlador, necesitaremos el específico para nuestra GPU.\nNo obstante, en Debian contamos con una utilidad que simplifica este proceso, indicándonos qué controlador debemos instalar. Sin embargo, para acceder a esta utilidad, es necesario modificar nuestros repositorios de Debian.\nPara llevar a cabo esta modificación, añadiremos la sección \u0026ldquo;non-free\u0026rdquo; a nuestros repositorios utilizando un editor de texto de nuestra preferencia:\njaviercruces@HPOMEN15:~$ sudo nano /etc/apt/sources.list deb http://deb.debian.org/debian/ bookworm main contrib non-free non-free-firmware Recuerda que cada vez que modifiques este fichero tienes que hacer un update para que se actualice.\njaviercruces@HPOMEN15:~$ sudo apt update -y Con nuestros repositorios debidamente actualizados, procederemos a instalar el script de detección de NVIDIA con el siguiente comando:\njaviercruces@HPOMEN15:~$ sudo apt install nvidia-detect Ahora ejecutaremos el script de NVIDIA; como podrás observar, nos proporcionará información detallada sobre nuestra tarjeta gráfica NVIDIA, así como los diversos controladores compatibles y el paquete de Debian recomendado para la instalación:\njaviercruces@HPOMEN15:~$ nvidia-detect Detected NVIDIA GPUs: 01:00.0 VGA compatible controller [0300]: NVIDIA Corporation GA106M [GeForce RTX 3060 Mobile / Max-Q] [10de:2520] (rev a1) Checking card: NVIDIA Corporation GA106M [GeForce RTX 3060 Mobile / Max-Q] (rev a1) Your card is supported by all driver versions. Your card is also supported by the Tesla drivers series. Your card is also supported by the Tesla 470 drivers series. It is recommended to install the nvidia-driver package. Instalación del driver recomendado Antes de instalar los controladores, debes obtener los encabezados del kernel adecuados para que el controlador de NVIDIA pueda compilar correctamente.\nEn un sistema típico de 64 bits que utiliza el kernel predeterminado, simplemente ejecutas:\njaviercruces@HPOMEN15:~$ sudo apt install linux-headers-amd64 Para sistemas de 32 bits con el kernel no-PAE, en su lugar, realizarías la siguiente instalación:\njaviercruces@HPOMEN15:~$ sudo apt install linux-headers-686 Una vez instalada las dependencias del driver , instalaremos el mismo :\njaviercruces@HPOMEN15:~$ sudo apt install nvidia-driver -y Durante la instalación, es probable que encuentres una pantalla típicamente azul que te informa sobre un conflicto con el controlador \u0026ldquo;nouveau\u0026rdquo;, el cual es el driver instalado automáticamente por Debian debido a sus características de software libre. Simplemente haz clic en \u0026ldquo;OK\u0026rdquo; en esta pantalla y continúa con el proceso de instalación.\nAl concluir la instalación, será necesario reiniciar tu equipo para cargar el módulo de NVIDIA. Después de reiniciar, puedes verificar si se ha cargado correctamente utilizando el siguiente comando. Utilizando la barra inclinada (/), puedes filtrar la salida escribiendo la palabra \u0026ldquo;nvidia\u0026rdquo;, lo que te llevará directamente a la información relevante de tu tarjeta gráfica, permitiéndote confirmar que el módulo de NVIDIA está cargado.\nTienes que comprobar que en la linea \u0026ldquo;Kernel driver in use\u0026rdquo; , tenga el modulo nvidia .\njaviercruces@HPOMEN15:~$ lspci -knn | less 01:00.0 VGA compatible controller [0300]: NVIDIA Corporation GA106M [GeForce RTX 3060 Mobile / Max-Q] [10de:2520] (rev a1) DeviceName: NVIDIA Graphics Device Subsystem: Hewlett-Packard Company GA106M [GeForce RTX 3060 Mobile / Max-Q] [103c:88d1] Kernel driver in use: nvidia Kernel modules: nouveau, nvidia_current_drm, nvidia_current Puede que no te hayas dado cuenta pero ahora en tu escritorio tendrás una app llamada nvidia-settings con la cual podrás configurar tu gráfica .\nAdemas si quieres ver desde la linea de comandos información de tu GPU NVIDIA tienes a tu disposición el siguiente comando :\njaviercruces@HPOMEN15:~$ nvidia-smi Fri Dec 29 02:04:58 2023 +-----------------------------------------------------------------------------+ | NVIDIA-SMI 525.125.06 Driver Version: 525.125.06 CUDA Version: 12.0 | |-------------------------------+----------------------+----------------------+ | GPU Name Persistence-M| Bus-Id Disp.A | Volatile Uncorr. ECC | | Fan Temp Perf Pwr:Usage/Cap| Memory-Usage | GPU-Util Compute M. | | | | MIG M. | |===============================+======================+======================| | 0 NVIDIA GeForce ... On | 00000000:01:00.0 Off | N/A | | N/A 42C P5 10W / 80W | 296MiB / 6144MiB | 12% Default | | | | N/A | +-------------------------------+----------------------+----------------------+ +-----------------------------------------------------------------------------+ | Processes: | | GPU GI CI PID Type Process name GPU Memory | | ID ID Usage | |=============================================================================| | 0 N/A N/A 3246 G /usr/lib/xorg/Xorg 117MiB | | 0 N/A N/A 3442 G /usr/bin/gnome-shell 32MiB | | 0 N/A N/A 4807 G ...on=20231218-080113.411000 104MiB | | 0 N/A N/A 5802 G ...RendererForSitePerProcess 38MiB | +-----------------------------------------------------------------------------+ javiercruces@HPOMEN15:~$ ¡Felicidades, Maestro de los Drivers NVIDIA! Has desbloqueado un logro épico en el reino de la informática. No cualquiera es capaz de llegar hasta aquí, no quiero desilusionarte pero ¿has verificado que funcionen los puertos HDMI y DP de tu equipo?\nEn este punto, se abren dos posibles caminos:\nEn el primer escenario, tus puertos funcionan a la perfección sin requerir intervención adicional. Si este es tu caso, felicidades se ve que Dios tiene favoritos .\nSi por el contrario al igual que yo no eres uno de sus elegidos , como acabas de comprobar los puertos no emiten video , en tu monitor veras que no tienes señal a pesar de que en el debian veas que te detecta el monitor.\nAquí se habré un mundo de problemas y incompatibilidades . Puedes tener problema con el sistema de ventanas de tu equipo , te falte alguna librería \u0026hellip;\nNvidia Optimus Después de una extensa investigación, he descubierto una herramienta que facilita, a través de la línea de comandos (CLI), la elección de la tarjeta gráfica que utiliza tu equipo.\nLa herramienta en cuestión es EnvyControl, una utilidad de línea de comandos (CLI) que simplifica el cambio entre modos de GPU en sistemas Nvidia Optimus, como aquellos presentes en portátiles con configuraciones de gráficos híbridos Intel + Nvidia o AMD + Nvidia, en entornos Linux.\nEnvyControl es un software gratuito y de código abierto lanzado bajo la licencia MIT.\nTen en cuenta que este software se proporciona \u0026ldquo;tal cual\u0026rdquo; sin ninguna garantía expresa o implícita. Además, cualquier configuración personalizada de X.org puede ser eliminada o sobrescrita al cambiar entre modos.\nEl repositorio de la herramienta es el siguiente \u0026ndash;\u0026gt; https://github.com/bayasdev/envycontrol\nPara la instalación, se proporciona un mini tutorial específico para cada distribución en el repositorio. A continuación, te guiaré a través de los pasos para instalarlo en Debian.\nInstalación de EnvyControl Dado que ya no es posible instalar paquetes pip fuera de un entorno virtual tras la adopción de PEP668, en su lugar, utiliza el paquete .deb proporcionado por el repositorio .\nEncuentra la versión más reciente en el siguiente enlace: Releases - EnvyControl.\nEn esa página, selecciona y descarga el paquete .deb correspondiente. También puedes utilizar la herramienta wget para descargarlo desde la terminal.\nInstala el paquete descargado con el siguiente comando:\nsudo apt -y install ./python3-envycontrol_version.deb Una vez que hayas instalado la herramienta, tendrás la capacidad de seleccionar la tarjeta gráfica que deseas utilizar en tu equipo. Es importante recordar que cualquier configuración aplicada no surtirá efecto hasta que reinicies el sistema.\nSupongamos que decides utilizar la gráfica integrada para ahorrar energía, por ejemplo. El comando correspondiente sería :\nsudo envycontrol -s integrated Si por el contrario quieres utilizar el modo hibrido (ambas)\nsudo envycontrol -s hybrid --rtd3 Si prefieres utilizar solo tu gráfica dedicada, ten en cuenta que esta es la única configuración que me ha funcionado para activar los puertos de video. Para dar el salto a este modo te pedira primero que pongas el modo anterior , el hibrido . Una vez estes en ese modo el comando para activar solo tu grafica dedicada:\nsudo envycontrol -s nvidia --force-comp --coolbits 24 Vuelvo a insistirse pero RECUERDA REINICIAR PARA QUE SE APLIQUEN LOS CAMBIOS .\nEn este punto, te he proporcionado los comandos que he utilizado, pero el programa cuenta con su propio manual. Además, en el repositorio del autor, puedes encontrar información útil adicional.\nAdemas en esté explica que hay una extension de gnome para que puedas realizar estos cambios desde la interfaz gráfica . Aunque personalmente siempre tengo un enchufe donde trabajo con el portátil , es posible que para ahorrar batería quieras cambiar al modo híbrido o al de la gráfica integrada .\nHasta este punto, confío en que los controladores de NVIDIA estén funcionando correctamente y que puedas aprovechar los puertos de video de tu equipo.\n","date":"September 8, 2023","hero":"/javierasping.github.io/images/sistemas/nvidia/nvidia.png","permalink":"https:/javierasping.github.io/posts/sistemas/nvidia/nvidia_drivers/","summary":"Instalación drivers NVIDIA en Debian 12 La instalación de los controladores de NVIDIA en el universo de Linux ha sido tradicionalmente un desafío, especialmente en distribuciones como Debian, donde las políticas del software libre a menudo complican el proceso.\nEn este post voy a explicarte una forma sencilla de instalar los drivers de NVIDIA usando los repositorios oficiales de Debian . Además, al final del artículo, aprenderás a instalar una herramienta clave llamada Nvidia Optimus, que te brindará la capacidad de seleccionar qué tarjeta gráfica utilizará tu equipo.","tags":["Debian 12","Controladores NVIDIA","sistemas","ISO","ASO"],"title":"Instalación de Controladores NVIDIA en Debian 12"},{"categories":null,"contents":"Instalación GNS3 y Wireshark en Debian 1. Introducción Wireshark es un analizador de protocolos utilizado para realizar análisis y solucionar problemas en redes de comunicaciones, para análisis de datos y protocolos, y como una herramienta didáctica.\nAñade una interfaz gráfica y muchas opciones de organización y filtrado de información. Así, permite ver todo el tráfico que pasa a través de una red estableciendo la configuración en modo promiscuo de nuestra tarjeta de red . También incluye una versión basada en texto llamada tshark.\nPermite examinar datos o de un archivo de captura salvado en disco. Se puede analizar la información capturada, a través de los detalles y sumarios por cada paquete. Wireshark incluye un completo lenguaje para filtrar lo que queremos ver y la habilidad de mostrar el flujo reconstruido de una sesión de TCP.\nWireshark es software libre, y se ejecuta sobre la mayoría de sistemas operativos Unix y compatibles.\nLos requisitos mínimos para utilizar este software son :\nCualquier procesador moderno AMD64/x86-64 de 64 bits o x86 de 32 bits. 500 MB de RAM disponibles. Los archivos de captura más grandes requieren más RAM. 500 MB de espacio disponible en disco. Los archivos de captura requieren espacio en disco adicional. Cualquier pantalla moderna. Se recomienda una resolución de 1280 × 1024 o superior. Wireshark utilizará resoluciones HiDPI o Retina si están disponibles. Los usuarios avanzados encontrarán útiles varios monitores. Una tarjeta de red compatible para capturar 1.1 Descarga del paquete en debían Para descargar el paquete en nuestro equipo deberemos de mirar en la pagina oficial de descargas si incluye soporte para nuestro sistema operativo .\nVemos que no aparece en la lista ningún sistema operativo GNU/Linux , esto es porque Wireshark está disponible a través del sistema de empaquetado predeterminado en la mayoría de estas plataformas . Es decir esta presente en los repositorios de nuestra distribución , en el caso de que no estuviese tenemos el código fuente al ser un software libre y podríamos compilarlo .\nPodemos comprobar si esta disponible en nuestro sistema operativo visitando la pagina oficial :\nVemos que Debian aparece en la lista esto quiere decir que el paquete esta en los repositorios oficiales de debían.\nEn Debian contamos con el gestor de paquetes apt , así que podemos comprobar la versión del paquete disponible para la instalación y comprobar desde que repositorios se nos descargara con el siguiente comando :\nPara realizar la instalación de wireshark introduciremos el siguiente comando :\nA continuación para hacer capturas de red en el equipo necesitaremos permisos para nuestro usuario para ello , utilizaremos el siguiente comando :\n1.2 Comprobación de funcionamiento Ahora abriremos el programa para comprobar que todo funciona correctamente :\nAhora iniciaremos una captura de paquetes para ello si queremos hacerla sobre un interfaz en concreta pulsamos sobre ella , en mi caso usare la tarjeta de red inalámbrica wlo1 y haré una petición web a la pagina jagger.es .\nAquí te muestro la petición DNS que ha viajado desde mi portátil hasta el router .\n1.3 Componentes de wireshark generales Wireshark hace uso de unos determinados paquetes : Wireshark : el analizador de protocolos de red que todos conocemos . TShark : un analizador de protocolo de red de línea de comandos. Complementos y extensiones : extras para los motores de disección Wireshark y TShark Complementos Dissector : complementos con algunas disecciones extendidas. Complementos de estadísticas de árbol -:Estadísticas extendidas. Mate: motor de seguimiento y meta análisis : extensiones configurables por el usuario del motor de filtro de pantalla; consulte el Capítulo 12, MATE para obtener más detalles. MIB de SNMP: MIB de SNMP para una disección de SNMP más detallada. Herramientas : herramientas de línea de comandos adicionales para trabajar con archivos de captura Editcap : lee un archivo de captura y escribe algunos o todos los paquetes en otro archivo de captura. Text2Pcap : lee un volcado hexadecimal ASCII y escribe los datos en un archivo de captura pcap. Reordercap : reordena un archivo de captura por marca de tiempo. Mergecap : combina varios archivos de captura guardados en un único archivo de salida. Capinfos : proporciona información sobre los archivos de captura. Rawshark : filtro de paquetes sin procesar. Guía del usuario : instalación local de la Guía del usuario. Los botones de Ayuda en la mayoría de los cuadros de diálogo requerirán una conexión a Internet para mostrar las páginas de ayuda si la Guía del usuario no está instalada localmente. 2 Instalación de GNS3 en Debian 11 2.1 Introducción GNS3 es un simulador gráfico de red lanzado en 2008, que te permite diseñar topologías de red complejas y poner en marcha simulaciones sobre ellos,permitiendo la combinación de dispositivos tanto reales como virtuales.\nPara permitir completar simulaciones, GNS3 está estrechamente vinculada con:\nDynamips: un emulador de IOS que permite a los usuarios ejecutar imágenes de IOS . Dynagen: un front-end basado en texto para Dynamips . Qemu y VirtualBox: para permitir utilizar máquinas virtuales como un firewall PIX o estaciones de trabajo . VPCS: un emulador de PC con funciones básicas de networking . IOU: (IOS en Unix), compilaciones especiales de IOS provistas por Cisco para correr directamente en sistemas UNIX y derivados . Los requisitos mínimos para hacer uso de esta herramienta son :\nProcesador : 2 o más núcleos lógicos Virtualización: Se requieren extensiones de virtualización. Es posible que deba habilitar esto a través del BIOS de su computadora. Memoria RAM: 4 GB de RAM Almacenamiento : 1 GB de espacio disponible (la instalación de Windows es \u0026lt; 200 MB). Notas adicionales : Es posible que necesite almacenamiento adicional para su sistema operativo y las imágenes del dispositivo. 2.2 Instalación Lo primero que haremos antes de instalar sera comprobar que nuestro sistema este actualizado , para ello haremos un apt update y si tenemos paquetes desactualizados haremos un apt upgrade .\nA continuación instalaremos todas las dependencias que necesita GNS3 :\nAhora te describiré la función de los paquetes que vamos a instalar :\nPaquete Descripción python3-pip El módulo pip es el instalador de paquetes de Python. python3-pyqt5 El módulo PyQt5 expone la API de Qt5 a Python 3 . python3-pyqt5.qtsvg El módulo SVG de PyQt5 proporciona clases para mostrar el contenido de los archivos SVG. python3-pyqt5.qtwebsockets El módulo WebSockets de PyQt5 proporciona enlaces de Python 3 para la especificación WebSockets (tanto cliente como servidor). qemu Software de Virtualización , actualmente se encuentra dividido en varios paquetes . qemu-kvm Binarios de emulación de sistema completo QEMU . qemu-utils Binario de utilidades de emulación de QEMU . libvirt-clients Libvirt es un conjunto de herramientas en C para interactuar con las capacidades de virtualización de versiones recientes de Linux . libvirt-daemon-system Este paquete contiene los archivos de configuración para ejecutar el demonio libvirt como un servicio del sistema. Virtinst Este paquete contiene algunas utilidades de línea de comandos para crear y editar máquinas virtuales . wireshark Es un analizador de red que captura paquetes para su posterior análisis . xtightvncviewer Sistema de visualización remota que le permite ver un entorno de \u0026rsquo;escritorio\u0026rsquo; no solo en la máquina donde se está ejecutando, sino desde cualquier lugar en Internet . apt-transport-https Este es un paquete de transición ficticio: la compatibilidad con https . ca-certificates Contiene los certificados de las autoridades certificadoras que se incluyen en el navegador de Mozilla para permitir que las aplicaciones basadas en SSL . curl curl es una herramienta de línea de comandos para transferir datos con sintaxis URL . gnupg2 Se puede utilizar para cifrar datos y crear firmas digitales. Incluye una función avanzada de administración de claves y cumple con el estándar de Internet OpenPGP propuesto. software-properties-common Le permite administrar fácilmente su distribución y las fuentes de software de proveedores de software independientes. Una vez instalados estos paquetes , nos descargaremos GNS3 utilizando pip3 :\nAdemás nos fijaremos en la salida del comando para comprobar si hay algún error :\nLo siguiente sera instalar docker , el cual nos permitirá crear contenedores . Para ello importaremos su clave GPG para que nuestro sistema confié en el :\nLo siguiente sera añadir el repositorio a nuestro sistema para ello utilizaremos el siguiente comando:\nActualizaremos los repositorios que utiliza apt haciendo un apt update :\nY finalmente podremos instalar docker :\nAgregue las siguientes líneas a su /etc/apt/sources.list , para que podamos instalar dynamips y ubridge:\nPara poder instalar los paquetes necesarios de estos repositorios , añadiremos las claves gpg del mismo :\nActualizaremos los repositorios que utiliza apt haciendo un apt update :\nNos instalaremos los paquetes Dynamips y ubridge :\nSaldrá un recuadro como este , para indicar si los usuarios que no son superusuarios pueden capturar paquetes , le diremos que si en nuestro caso :\nPara evitar la instalación accidental de cualquier otra cosa de ese repositorio (por ahora), elimine o comente esas dos líneas en su archivo /etc/apt/sources.list y haga un apt update:\nTambién podemos eliminar la clave GPG de estos repositorios si lo deseamos :\nAñadiremos a los usuarios que vayan a utilizar la herramienta a los siguientes grupos :\nReinicie su sesión de usuario cerrando sesión y volviendo a iniciarla, o reiniciando el sistema para que se apliquen estos cambios .\n2.3 Nuestra primera topología en GNS3 Una vez reiniciado el sistema iniciaremos la aplicación , y nos saldrá un recuadro como este :\nAquí indicaremos que voy a correr las aplicaciones localmente en mi maquina .A continuación seleccionaremos la ruta del servidor , el nombre de host y el puerto asociado :\nSi todo ha sido correcto , nos dirá que se ha realizado correctamente :\nCuando abramos el programa , nos dará opción a crear un proyecto o podemos crear uno nuevo , en mi caso creare uno :\nSi nos fijamos en la parte izquierda del programa veremos los siguientes símbolos que sirven para lo siguiente :\nAñadiremos arrastrando 2 VPCS :\nLe añadiremos un Ethernet swicht :\nHaremos clic en el botón Agregar un enlace para dejar de agregar enlaces , nos quedaría así el escenario :\nPodemos hacer visible la interfaz a la cual los hemos conectado pulsando en el siguiente botón :\nEl botón verde \u0026ldquo;Reproducir\u0026rdquo; en la barra de herramientas GNS3 encenderá todos los dispositivos en la topología, mientras que el botón amarillo \u0026ldquo;Pausa\u0026rdquo; los suspenderá y el botón rojo \u0026ldquo;Detener\u0026rdquo; apagará todo en la topología:\nNos saldrá una advertencia , para que confirmemos si queremos añadir todos los dispositivos , le daremos a si :\nVeremos que tanto a la izquierda en el resumen de dispositivos como en las conexiones salientes de los dispositivos su “luz” de estado a cambiado de rojo a verde , puestos que estos ahora están encendidos :\nAhora abriremos una terminal en todos nuestros VPCS , con el siguiente botón :\nA través de estas terminales le asignaremos direcciones ips a nuestros dispositivos con el siguiente comando :\nUna vez configurada las tarjetas de red , comprobaremos si hay conectividad entre ellos haciendo un ping :\nAñadiremos un tercer VPCS a nuestro esquema :\nLo encenderemos y abriremos una terminal para configurarlo al igual que hemos hecho con los anteriores :\nY comprobare que esta nueva maquina tiene conectividad con las anteriores :\nSi queremos que se guarden las configuraciones de nuestros equipos introduciremos el comando save :\n2.4 Acceso a internet a través de NAT en GNS3 La manera mas fácil de conseguir acceso a internet es a través de la nube NAT .\nEsta cuenta con acceso a internet , así como un servicio DHCP corriendo con IPV4 .Para hacer uso de ella , la pondremos en nuestro escenario y la conectaremos en un swicht .\nA continuación si queremos salir a internet , tendremos que configurar nuestros clientes para que estos obtengan la configuración de red adecuada . Aprovecharemos que tenemos un servidor DHCP .\nPara que los clientes se configuren a través de este servicio introduciremos el comando dhcp :\nProbaremos a hacer un ping a google.es para comprobar la conectividad :\n3 Problemas comunes en la instalación 3.1 Error VPCS executable version must be \u0026gt;=0.6.1 but not 0.8 Este error viene al hacer la instalación de los VPCS , se descarga de los repositorios una versión que no admite actualmente el programa .\nPor suerte es muy fácil de solucionar , accederemos al repositorio del desarrollador en github y nos descargaremos el siguiente paquete :\nUna vez descargado lo descomprimiremos usando el siguiente comando :\nDonde hagamos este comando nos creara un directorio en el cual accederemos para compilar el programa :\nEjecutaremos el siguiente script :\nNos creara en esta ruta el directorio vpcs , este tendremos que añadirlo en gns3 :\nAccederemos a gns3 , pulsaremos CTRL + SHIFT + P para acceder al panel de preferencias . Una vez aquí nos desplazamos al apartado de las vpcs y seleccionamos la ruta del directorio que acabamos de generar :\nAplicamos los cambios y ya podríamos utilizar las vpcs .\n3.2 Xterm no instalado Este error aparece cuando queremos acceder a una consola de un dispositivo de nuestra tipología de red .Para solucionar este problema lo primero es cerrar GNS3 y a continuación dirigirnos a una terminal para descargarlo, utilizaremos el siguiente comando :\nVolveremos a abrir el programa y podremos acceder a las consolas de nuestras maquinas .\n4 Instalar imágenes IOS Si queremos añadir a nuestro sistema hardware real como puede ser un router cisco por ejemplo deberemos de acceder a la pagina oficial de GNS3 y descargar concretamente el que deseemos añadir en mi caso añadiré un cisco 3725 .\nSi pulsamos sobre el botón de descarga nos descargara un archivo con extensión , el cual es una plantilla .\nSi nos fijamos en este caso no tenemos la posibilidad de descargar la imagen desde este repositorio , nos dice que no hay link disponible . Para estos casos existe un repositorio de cisco el cual tiene todas las imágenes de sus productos –\u0026gt; tfr.org/cisco-ios\nPara saber cual nos tenemos que traer de aquí , abriremos gns3 y a través del menú superior izquierdo pulsaremos sobre el apartado file \u0026gt; import appilance , seleccionaremos la plantilla que vamos a importar . Le daremos a instalar en nuestro ordenador local :\nUna vez aquí nos , veremos el nombre del archivo y lo buscaremos en el repositorio externo , ya que podemos observar que no se encuentra el archivo\nEn este caso descargare , esta version que coincide con la plantilla que he descargado :\nCuando hayamos hecho esto tendremos el siguiente problema , las firmas de las imágenes no coincidirán para paliar ese paso marcaremos la opción allow custom files en la parte inferior y importaremos el binario que acabamos de descargar :\nNos informara que para la plantilla seleccionada , el archivo que hemos descargado del repositorio no coinciden los hashes . En nuestro caso es normal ya que la imagen no es la misma que tendría que venir con la plantilla , así que aceptaremos los riesgos .\nVeremos que cambiara el estado a listo para instalar , así que le daremos a siguiente en la parte inferior .\nNos pedirá confirmación para añadir nuestro dispositivo , confirmaremos la acción :\nNos informara de que nuestro dispositivo se ha añadido en las plantillas de los router , para este caso .\nAdemás nos informara del nombre que se le ha asignado .\nComo nos indico , lo encontraremos en la sección de routers :\nAhora haremos una pequeña prueba de funcionamiento , lo añadiremos a nuestro escenario y comprobaremos que podemos arrancarlo y conectarnos a la consola :\nVeremos la conexión a la consola es correcta :\n5 Instalación en Windows de GNS3 5.1 Paquetes necesarios para Windows Aunque tengamos instalado el software de GNS3 este hará uso de paquetes adicionales para realizar algunas funciones o incluso añadir nuevas funcionalidades como emular enrutadores de determinados fabricantes .\nArtículo Requerido Descripción WinPCAP Requerido Requerido para conectar GNS3 a su red informática. Utilizado por los nodos Cloud y NAT para permitir que sus proyectos se comuniquen con el mundo exterior. Npcap Opcional El reemplazo moderno de WinPCAP sabe solucionar problemas pero está menos probado que WinPCAP.Instale Npcap con la opción \u0026ldquo;Modo compatible con la API de WinPcap\u0026rdquo; seleccionada, si se usa sin WinPcap.Npcap puede coexistir con WinPcap, si esa opción no está seleccionada. Wireshark Recomendado Le permite capturar y ver el tráfico de red enviado entre nodos. Dynamips Requerido Requerido para ejecutar una instalación local de GNS3 con enrutadores Cisco. QEMU 3.1.0 y 0.11.0 Opcional Un software de virtualización .La versión anterior de Qemu 0.11.0 está instalada para admitir dispositivos ASA antiguos. Se recomienda utilizar la vm GNS3 en su lugar.\nVPCS Recomendado Un emulador de PC muy ligero que admite comandos básicos como ping y traceroute Cpulimit Opcional Se usa para evitar que QEMU use el 100% de su CPU (cuando se está ejecutando) en algunos casos, como con los dispositivos ASA antiguos GNS3 Requerido El software principal de GNS3.Esto siempre es obligatorio. Visor TightVNC Recomendado Un cliente VNC utilizado para conectarse a las interfaces gráficas de usuario del dispositivo. Solar-Putty Recomendado La nueva aplicación de consola predeterminada. Virt-viewer Recomendado Visualizador alternativo de máquinas virtuales de escritorio Qemu que tienen qemu-spice preinstalado. Intel Hardware Acceleration Manager (HAXM) Opcional Solo disponible en sistemas con CPU Intel (y VT-X habilitado), que no usan Hyper-V. Se utiliza para la aceleración de hardware de la emulación de Android, así como para QEMU. 5.2. Requisitos mínimos Para entornos pequeños en Windows los desarrolladores exigen tener como mínimo las siguientes características :\nCaracterísticas Requisitos Sistema operativo Windows 7 (64 bits) o posterior Procesador 2 o más núcleos lógicos Virtualización Se requieren extensiones de virtualización. Es posible que deba habilitar esto a través del BIOS de su ordenador . Memoria 4 GB de RAM Almacenamiento 1 GB de espacio disponible (la instalación de Windows es \u0026lt; 200 MB). 5.3 Instalación GNS3 Lo primero que tendremos que sera descargarnos el ejecutable oficial de su pagina web , para ello tendremos que estar registrados previamente .\nLanzaremos el ejecutable y nos pedirá permisos de administrados , se los concedemos :\nSaldrá una pantalla informándonos sobre el producto , le damos a next .\nA continuación deberemos de aceptar los términos y licencias de uso :\nNos preguntara donde queremos crear los atajos del programa , lo dejare por defecto ya que asi los añadirá al escritorio :\nA continuación debemos de prestar atención ya que debemos de seleccionar instalación local y todos los paquetes que vayamos a hacer uso , si hubiésemos instalado antes alguno de ellos los desmarcamos (Los mencionados en el punto 5.1) :\nSeleccionaremos la ruta donde se instalara el programa , yo dejare la predeterminada . También nos informa el espacio que necesitara la instalación :\nEsperaremos a que se realice la instalación :\nInstalación WinCap\nRequerido para conectar GNS3 a su red informática. Utilizado por los nodos Cloud y NAT para permitir que sus proyectos se comuniquen con el mundo exterior.\nMientras se realiza la instalación de GNS3 comenzara la instalación de todos los programas que hemos marcado anteriormente .\nNos mostrara información sobre el programa esta primera ventana así que le damos a siguiente :\nAceptamos la licencia de términos y uso :\nMarcamos la opción para que arranque automáticamente el driver y le damos a instalar\nNos informa de que la instalación a sido correcta y cerramos la ventana :\nInstalación Ncap\nEl reemplazo moderno de WinPCAP sabe solucionar problemas pero está menos probado que WinPCAP.Instale Npcap con la opción \u0026ldquo;Modo compatible con la API de WinPcap\u0026rdquo; seleccionada, si se usa sin WinPcap.Npcap puede coexistir con WinPcap, si esa opción no está seleccionada.\nOtra vez el mismo proceso , aceptamos los términos y licencias de uso .\nDejamos la opción marcada por defecto y le damos a install\nCuando finalice la instalación le damos a siguiente :\nY cerramos el instalador :\nVolvemos a GNS3 ya que el proceso de instalación ha quedado detenido mientras hemos instalado los componentes que va a hacer uso , esta se reanuda automáticamente :\nUna vez finalice la instalación , le damos a siguiente\nGNS3 nos ofrece una licencia gratuita de Solarwinds , le daremos a si :\nHabremos finalizado correctamente la instalación de GNS3\nAbriremos el programa y seleccionaremos correr los dispositivos en nuestra maquina local :\nAquí configuraremos nuestro servidor local de GNS3\nAnteriormente lo deje por defecto , si nuestra configuración es correcta nos dirá que la conexión se ha realizado satisfactoriamente :\nNos mostrara un resumen de la configuración dada anteriormente :\n5.4 Prueba de funcionamiento Montaremos el mismo escenario que en debian para comprobar su funcionamiento , el proceso es el mismo .\nConfiguraremos las direcciones ips de las maquinas y comprobamos que tengan conectividad a través de solarputty .\nPC1 :\nPC2:\nPodemos observar que ambos equipos tienen conectividad a través del escenario .\n6 Instalación Wireshark en Windows 6.1 Instalación La instalación de este producto es muy sencilla , si hemos instalado GNS3 anteriormente y hemos marcado la casilla de este , se nos habrá instalado automáticamente .\nPor el contrario si partimos desde cero podemos hacer su instalación , bajandonoslo de su sitio web oficial :\nCuando abramos el instalador nos pedirá permisos de administrador , se lo concedemos :\nSi al igual que yo lo has instalado con GNS3 nos detectara que ya existe una instalaron , así que yo la cancelare .\nSi no lo tuviésemos la instalación es idéntica a cualquier programa que hemos instalado en la practica . Aquí te lo muestro , lo primero que veras sera una pantalla informativa del ejecutable :\nAl igual que todos los programas te pedirá que aceptes los términos y condiciones de uso :\nSeleccionaremos los productos que deseemos instalar en mi caso todos :\nAdemás nos preguntara que accesos directos y donde los queremos crear\nSeleccionaremos la ruta donde queremos que se instale :\nSeleccionaremos si nos interesa el paquete Ncap .(Lo hemos instalado con GNS3)\nA continuación nos preguntara para instalar la extensión que nos permite analizar trafico USB , en mi caso la desmarcare ya que no me interesa .\nEsperaremos a que finalice la instalación y le daremos a siguiente :\nNos informara de que la instalación ha sido realizada correctamente :\n6.2 Prueba de funcionamiento He realizado una petición DNS a www.sevillafc.es y aquí podemos ver la consulta DNS :\n7 GNS VM Si queremos desplegar maquinas virtuales en una instancia virtual desplegaremos la maquina virtual que nos da GNS3 para que este lleve la carga de la Virtualización .\nNos descargaremos la OVA desde la pagina web oficial\nUna vez descargada la importaremos en Vmware y le daremos las características hardware que consideremos oportuno :\nUna vez echo esto abriremos GNS3 y editaremos las preferencias de GNS VM y seleccionaremos la maquina virtual que acabamos de importar :\nSe nos iniciara la maquina virtual y podremos ver los datos de la misma en la pestaña info :\nLanzaremos el set-up wizard desde la pestaña help de GNS3 y seleccionaremos la opción de ejecutar las apilances en una maquina virtual :\nSeleccionaremos la configuración de nuestra maquina virtual :\nSeleccionaremos de nuevo nuestra maquina virtual y las características hardware que deseemos :\nSolo nos quedara importar los dispositivos en la maquina virtual , esto se hace igual que hemos echo anteriormente cambiando el sitio donde lo importamos :\nSi queremos ver donde se ejecutara un dispositivo podemos verlo a través de preferencias :\nAdemás podemos ver en apartado servers sumarry el consumo de recursos de nuestras maquinas :\n8 Conclusión Podemos ver que la instalación es infinitamente mas cómoda en Windows ya que automáticamente te instala las dependencias, siendo la típica instalación de “siguiente a siguiente ” .\nAdemás en Windows al acabar la instalación el producto estaba listo para usarse y no he sufrido ningún error al iniciar el programa ni al usar sus características como si me ha pasado en Debian .\n9 Bibliografía Documentacion oficial wireshark\nPaquete wireshark en debian\nRequisitos mínimos wireshark\nError “VPCS executable version must be \u0026gt;=0.6.1 but not 0.8” Descarga VPCS\n","date":"September 8, 2023","hero":"/javierasping.github.io/images/redes/instalacion_wireshark_gns3/portada_instalacion_wireshark_gns3.jpeg","permalink":"https:/javierasping.github.io/posts/redes/instalacion_wireshark_gns3/instalacion-gns3-y-wireshark/","summary":"Instalación GNS3 y Wireshark en Debian 1. Introducción Wireshark es un analizador de protocolos utilizado para realizar análisis y solucionar problemas en redes de comunicaciones, para análisis de datos y protocolos, y como una herramienta didáctica.\nAñade una interfaz gráfica y muchas opciones de organización y filtrado de información. Así, permite ver todo el tráfico que pasa a través de una red estableciendo la configuración en modo promiscuo de nuestra tarjeta de red .","tags":["Redes","Wireshark","GNS3"],"title":"Instalación GNS3 y Wireshark en Debian"},{"categories":null,"contents":"Migración de un sistema de ficheros En ocasiones, es necesario actualizar el almacenamiento de nuestro sistema Debian para satisfacer las crecientes necesidades de espacio y mejorar la organización del disco. En esta guía, exploraremos el proceso de migración desde un disco con una única partición hacia uno con mayor capacidad, además de dividirlo en particiones separadas para una gestión más eficiente.\nEste proceso no solo ampliará el espacio de almacenamiento disponible, sino que también brindará una estructura más ordenada al sistema, facilitando tareas como la gestión de respaldos, el rendimiento del sistema y la administración del espacio en disco.\nCaracterísticas de la maquina Crea una máquina virtual en virt-manager con las siguientes características:\nSe instalará sistema operativo GNU/Linux Debian11. Tamaño de memoria: 1GB. CPU:1 Tamaño de disco duro: 2GB Detalles del hipervisor: chipset:Q35 Firmware: UEFIx86 Esquema de particiones La instalación de debian la realizarás, con el siguiente esquema de particiones: partición efi: 50MB\npartición /: 2GB\nswap: el resto de espacio sobrante.\nNo se instalará ningún entorno de escritorio.\nUna vez instalado el sistema, nos damos cuenta que estaríamos muy justos de espacio.\nAmpliación del disco Particionado Añade un disco a tu sistema de 10GB.\nParticiona este disco, eligiendo el tamaño apropiado para cada una de las particiones, teniendo en cuentas que cada partición será asignada a un directorio de los indicados:\n/boot/efi FAT32 partición efi –\u0026gt; 100MB / ext4 –\u0026gt; 8GB\n/home ext4 –\u0026gt;1GB\n/var ext4 –\u0026gt; 400MB\n/usr ext4 –\u0026gt; 400MB\nswap swap –\u0026gt; 200MB\nDando sistema de ficheros a las particiones Para darle formato a esta partición /boot/efi FAT32 partición efi –\u0026gt; 100MB\nPara estas particiones le daré formato ext4: / ext4 –\u0026gt; 8GB\n/home ext4 –\u0026gt;1GB\n/var ext4 –\u0026gt; 400MB\n/usr ext4 –\u0026gt; 400MB\nPara dar formato de swap: swap swap –\u0026gt; 200MB\nPara “activar la swap” –\u0026gt; sudo swapon dev/vdb6 y posteriormente para hacerlo permanente lo añadiremos al /etc/fstab .\nNos quedaría el disco con los siguientes formatos :\nMigración de datos Partición EFI A continuación realizaremos una copia fidedigna de cada una de nuestras particiones para ello , creare un directorio para montar cada disco en un directorio con su nombre :\nY montaremos las particiones en estos directorios :\nComenzaremos a pasar la información de nuestras particiones . Es importante usar el parámetro a (lo mismo que dpR) que permite hacer la copia recursivamente además se conservan intactos los permisos y enlaces que se encuentren en el sistema. Con el parámetro f, forzamos la copia.\nCopia de la partición EFI :\nPartición HOME Lo montaremos en un directorio cualquiera , a continuación lo copiaremos con rsync y con el comando diff comprobaremos si hay archivos diferentes en los directorios para ahorrarnos hacer la comprobación de forma manual .\nAhora lo añadiremos al fstab :\nLo montamos con un mount -a . Lo desmontamos y borraremos el directorio home del antiguo disco :\nPartición VAR Lo montaremos en un directorio cualquiera , a continuación lo copiaremos con rsync y con el comando diff comprobaremos si hay archivos diferentes en los directorios para ahorrarnos hacer la comprobación de forma manual .\nAhora lo añadiremos al fstab :\nLo montamos con un mount -a . Lo desmontamos y borraremos el directorio var del antiguo disco :\nPartición USR Lo montaremos en un directorio cualquiera , a continuación lo copiaremos con rsync y con el comando diff comprobaremos si hay archivos diferentes en los directorios para ahorrarnos hacer la comprobación de forma manual .\nAhora lo añadiremos al fstab :\nLo montamos con un mount -a :\nLo desmontamos y borraremos el directorio home del antiguo disco :\nY volveremos a montarlos con un mount -a .\nPartición RAIZ Lo montaremos en un directorio cualquiera , a continuación lo copiaremos con rsync y con el comando diff comprobaremos si hay archivos diferentes en los directorios para ahorrarnos hacer la comprobación de forma manual .\nExcluyendo los directorios que hemos separado anteriormente :\nAhora lo añadiremos al fstab :\nPara montar esta partición deberemos de reiniciar el sistema .\nGenerar la nueva EFI Para esto hay que seguir un procedimiento distinto , lo primero que haremos sera darle formato fat32 a la partición . Después igual que las demás la montaremos y instalaremos un nuevo grub especificando donde queremos instalarlo , en el segundo disco.\nAhora lo añadiremos al fstab :\nReiniciaremos el equipo y comprobaremos que funciona :\nAhora actualizaremos el grub :\nAhora para construir el nuevo efi tendremos que a través de un cd live o desde el modo rescate construir un nuevo grub :\nMontamos nuestra nueva partición del sistema y le damos a reinstalar el cargador de arranque grub :\nUna vez hecho esto apagamos la maquina y ponemos el segundo disco primero e el orden de arranque y reiniciamos el equipo :\nCuando reinicie elegimos la primera opción que es el arranque de vdb :\nY habremos conseguido migrar el sistema a un disco mas grande :\nMi /etc/fstab ha quedado de la siguiente manera :\nBibliografía Migrar de un disco a otro Copiar particiones Recuperar grub ","date":"September 8, 2023","hero":"/javierasping.github.io/images/sistemas/migracion_de_sistema_de_ficheros/portada.jpg","permalink":"https:/javierasping.github.io/posts/sistemas/migracion_sistema_de_ficheros/sistemas-de-ficheros/","summary":"Migración de un sistema de ficheros En ocasiones, es necesario actualizar el almacenamiento de nuestro sistema Debian para satisfacer las crecientes necesidades de espacio y mejorar la organización del disco. En esta guía, exploraremos el proceso de migración desde un disco con una única partición hacia uno con mayor capacidad, además de dividirlo en particiones separadas para una gestión más eficiente.\nEste proceso no solo ampliará el espacio de almacenamiento disponible, sino que también brindará una estructura más ordenada al sistema, facilitando tareas como la gestión de respaldos, el rendimiento del sistema y la administración del espacio en disco.","tags":["Debian 12","sistemas","ISO","ASO"],"title":"Migración de un sistema de ficheros"},{"categories":null,"contents":"NAT con iptables En este artículo aprenderás a configurar un pequeño escenario en el cual podrás configurar una serie de servicios. Crearás el escenario descrito a continuacion , además, harás que a través de una red interna, usando un servidor Linux, tengas acceso a Internet configurando SNAT en el mismo haciendo uso de iptables.\nInstalación del entorno de pruebas Vamos a instalar el siguiente entorno:\nConfiguración de VirtualBox Servidor debian :\nCliente windows\nCliente debian\nConfiguración de red Lo primero que haremos sera configurar las tarjetas de red de nuestras maquinas .\nServidor debian Editamos el fichero con nano /ect/network/interfaces como superusuario y añadimos las siguientes lineas .\nLos cuadros rojos corresponden a la configuración de las tarjetas de red enp0s3(tarjeta externa) y enp0s8(red interna). El cuadro azul corresponde a las reglas iptables para permitir las peticiones al exterior y prohibir las interiores .\nCliente debian Editamos el fichero con nano /etc/network/interfaces como superusuario y añadimos las siguientes lineas .La puerta de enlace sera la dirección ip de la tarjeta del servidor interna .\nCliente Windows 10 En windows 10 configuramos manualmente accediendo a conexiones de red \u0026gt; configuracion del adaptador \u0026gt; ipv4 y le asignamos lo siguiente .Al igual que el cliente debian cambiando la dirección ip . He puesto dns de Google porque utilizo mi red movil .\nConfiguración de nat en el servidor Modificar el fichero /etc/sysctl.conf. Hay que descomentar la línea :\nComprobamos si se ha aplicado\nComprobación de internet en los clientes Windows 10 Debian 11 ","date":"September 8, 2023","hero":"/javierasping.github.io/images/servicios/nat_iptables/portada_iptables.jpeg","permalink":"https:/javierasping.github.io/posts/servicios/nat_iptables/nat_iptables/","summary":"NAT con iptables En este artículo aprenderás a configurar un pequeño escenario en el cual podrás configurar una serie de servicios. Crearás el escenario descrito a continuacion , además, harás que a través de una red interna, usando un servidor Linux, tengas acceso a Internet configurando SNAT en el mismo haciendo uso de iptables.\nInstalación del entorno de pruebas Vamos a instalar el siguiente entorno:\nConfiguración de VirtualBox Servidor debian :","tags":["Servicios","NAT","SMR","IPTABLES","SNAT"],"title":"NAT con iptables"},{"categories":null,"contents":"¿Crees que la pregunta ARP es un mensaje de difusión? Realiza una captura en Wireshark de una petición ARP y analízala para justificar tu respuesta. Si , es un mensaje de difusión ya que en la cabecera podemos ver que el destino tiene una dirección de broadcast . Esta dirección es la que tiene todos sus bits a 1 que en las direcciones mac se traduce en FF:FF:FF:FF:FF:FF .\nCuando esta le llegue , en este caso al que tiene la dirección ip 192.168.1.1 nos devolverá la petición y en el origen obtendremos su dirección MAC.\n¿Crees que la respuesta ARP es un mensaje de difusión? Realiza una captura en Wireshark de una respuesta ARP y analízala para justificar tu respuesta. Podemos ver en la respuesta que en la dirección de destino viene la del pc que mando la pregunta , por lo que la respuesta no es un mensaje de broadcast sino una comunicación punto a punto .\nLos ordenadores de una red almacenan en memoria una caché con las correspondencias IP-MAC que van conociendo. Explica el proceso de actualización de la caché ARP después de observar como se va rellenando en las máquinas de un pequeño escenario en GNS3 con una red local con cuatro ordenadores conectados a un switch. Ve comprobando como cambia la caché ARP de todos los ordenadores cuando vas haciendo ping entre un ordenador y otro. Cuando hacemos un ping el emisor y el receptor “se añaden mutuamente a la tabla arp” , si las consultamos en ambas veremos que están incluidos :\nPodemos ver que el tiempo por el que se guardan en cache es de 120 segundos , cuando este tiempo se acaba, se borra la entrada.\nMientras que en los pcs que no han intervenido no almacenaran nada en la cache arp sobre la “transacción realizada”:\nAnaliza el comando ip neigh para ver las posibilidades que ofrece y piensa cual puede ser el uso real de cada una de ellas. Este comando nos permite interactuar con la tabla arp donde se guardan la relación de direcciones IP-MAC . Por ejemplo podemos visualizarla , añadir entradas o borrarlas así como modificarlas . Además podemos cambiar el tiempo durante el cual se guarda una petición en la tabla .\nPor ejemplo , listar el contenido :\nPodemos resumir sus funciones :\nMostrar la tabla ARP completa: ip neighbour show Agregar una entrada a la tabla ARP: ip neighbour add (IP) lladdr {MAC} dev {interface} Eliminar una entrada de la tabla ARP: ip neighbour del {IP} dev {interface} Establecer el tiempo de vida de una entrada en la tabla ARP: ip neighbour change {IP} dev {interface} nud {state} Buscar una entrada específica en la tabla ARP: ip neighbour | grep {IP} Básicamente esto es lo que debemos conocer para poder controlar las tablas ARP con el comando IP en sustitución (o como complemento) a «arp».\nAverigua qué es un ARP gratuito y cuál es el sentido de su existencia. Es una solicitud emitida por un dispositivo con el objetivo de actualizar la tabla arp del resto de dispositivos de una red . Este simplemente informa a los demás dispositivos de la red de su propia dirección IP y MAC .\nEl propósito principal de las ARP gratuitas es asegurar que todos los dispositivos en una red tengan la información más actualizada posible sobre las direcciones IP y MAC de los demás dispositivos en la red.\nUna de sus utilidades es detectar conflictos de IP\u0026rsquo;s, \u0026ldquo;esta ip ya está cogida\u0026rdquo; esto es debido a que otro equipo ha respondido con estos paquetes.\nPor lo que a partir de esta información se puede resolver esta incidencia.\nExplica con tus palabras en qué se basa un ataque ARP Spoofing y cómo se lleva a cabo. ¿Puede usarse como técnica de ataque desde tu casa a una red ajena? ¿Cómo podríamos defendernos de él? El ataque viene a modificar el flujo de los datos enviados desde un PC Víctima que pasa a través de un Gateway para hacer un ataque de tipo MITM (Man in the Middle) consiguiendo que el tráfico de la víctima pase por una máquina Atacante de forma inocua para la víctima.\nAsí el atacante intercepta los mensajes y es capaz de obtener todo el trafico de la red obteniendo contraseñas e información confidencial o sensible .\nLos pasos que sigue un atacante al realizar este ataque son :\nEscanear la red , para obtener una relación de los dispositivos conectados . Enviar paquetes arp falsos para asociar en las víctimas su dirección ip a su propia mac. Una vez que el cliente ha sido “engañado” , el atacante comenzara a interceptar todo el trafico. Estos ataques solo se producen si el atacante consigue acceso a tu red local , así que para protegernos podemos usar :\nHerramientas de detección de ARP Spoofing . Utilizar un firewall , ya que ese es capaz de bloquear paquetes ARP sospechosos . Utilizar protocolos como Ipsec y SSL/TLS . Configurar la tabla arp de manera estática. Hay dos tipos de ataques a switches llamados MAC Flooding y MAC Spoofing. ¿En qué consisten y cómo podemos defendernos de ellos? MAC Flooding consiste en llenar la tabla arp de un dispositivo de red , por ejemplo un switch y hacer que este no sea capaz de localizar a que boca va el trafico a si este lo mandara por todas las bocas provocando que en el peor de los casos dejar sin servicio al dispositivo .\nPara mitigar este ataque se recomienda configurar un limite en el tamaño de la tabla ARP y la detección y bloqueo de trafico sospechoso .\nMientras que el MAC Spoofing consiste en falsificar una dirección MAC para interceptar un determinado trafico , pudiendo tener acceso a contenido privado .\nPara mitigar este ataque en el caso de que suplante una maquina de mi red y tenga acceso a contenido podemos implementar herramientas de segundo factor de autentificaron o usar certificados digitales .\nAdemás podemos implementar en nuestra red las siguientes estrategias :\nEntradas estáticas en tabla ARP\nLa primera solución que existe corresponde a trabajar con rutas estáticas en los equipos de red. Esto permite invalidar los mensajes ARP, debido a que las IP se asocian una dirección MAC y esta no cambia en el tiempo. Es una solución simple y en general se aplica para asegurar que la puerta de enlace predetermina sea realmente la de la red y no un atacante. Sin embargo, es una estrategia difícil de aplicar si se posee una red con una gran cantidad de terminales.\nDHCP snooping\nEs una estrategia que mantiene un registro de las MAC que están conectadas en cada puerto y detecta inmediatamente si existe una suplantación. Varios fabricantes de equipos de red incorpora esta solución en sus equipos, como es el caso de CISCO.\nDynamic ARP Inspection\nPara evitar la suplantación de ARP (ARP spoofing) y el envenenamiento por ARP (ARP poisoning) resultante, un switch debe garantizar que solo se transmitan ARP Requests y ARP Replies válidas.\nLa Inspección Dinámica de ARP/ Dynamic ARP Inspection (DAI) requiere de DHCP snooping y ayuda a prevenir ataques ARP así:\nNo retransmitiendo respuestas/Replies ARP invalidas o gratuitas/gratuitous a otros puertos en la misma VLAN. Intercepta todas las solicitudes/Requests y respuestas/Replies ARP en puertos no confiables. Verificando cada paquete interceptado para un enlace válido de IP a MAC. Descarte y registro de respuestas no válidas de ARP para evitar el envenenamiento por ARP. Error-disabling la interfaz si se excede el número de paquetes ARP DAI configurado. RARP\nRARP es Reversal ARP, esto quiere decir que consulta a partir de una dirección MAC la IP correspondiente. En caso de que retorne más de una dirección IP, entonces la MAC ha sido clonada.\nBibliografía ip neigh arp spoofing ARP gratuitos medidas de mitigación ","date":"September 8, 2023","hero":"/javierasping.github.io/images/redes/arp/portada.png","permalink":"https:/javierasping.github.io/posts/redes/arp/arp/","summary":"¿Crees que la pregunta ARP es un mensaje de difusión? Realiza una captura en Wireshark de una petición ARP y analízala para justificar tu respuesta. Si , es un mensaje de difusión ya que en la cabecera podemos ver que el destino tiene una dirección de broadcast . Esta dirección es la que tiene todos sus bits a 1 que en las direcciones mac se traduce en FF:FF:FF:FF:FF:FF .\nCuando esta le llegue , en este caso al que tiene la dirección ip 192.","tags":["Redes","ARP"],"title":"Protocolo ARP"},{"categories":null,"contents":"servidor SSH bajo debian Gestión remota usando SSH Lo primeros que deberemos de hacer sera instalarnos el paquete en el servidor y el cliente :\nPor seguridad se suele no permitir la conexión del root al servidor; para ello, se debe modificar el archivo /etc/ssh/sshd_config, y se pone la siguiente opción:\nY reiniciamos el servicio para que se apliquen los cambios :\nConectarse al servidor ssh Vamos a instalarnos el cliente ssh, para ello:\nPara acceder desde el cliente al servidor tecleamos:\nNos abríamos conectado remotamente\nEjecución remota de aplicaciones gráficas Mediante ssh existe la posibilidad de ejecutar aplicaciones gráficas en el servidor y manejarlas y visualizarlas en el cliente. El servidor ssh deberá tener activada la redirección del protocolo X, es decir, deberá tener el siguiente parámetro en el archivo de configuración /etc/ssh/sshd_config:\nEn mi caso ya estaba habilitado , si no lo tuviésemos lo cambiamos y reiniciamos el servicio para que se apliquen los cambios . Ahora deberemos de conectarnos con el parámetro -X :\ny posteriormente podemos ejecutar cualquier aplicación gráfica, por ejemplo, gedit:\nSe nos abrirá el programa gráficamente :\nAhora vemos en el servidor que se ha creado :\nTransferir ficheros con ssh Para copiar un fichero desde el cliente al servidor introducimos el siguiente comando :\nAhora vamos a comprobar si se ha copiado al servidor :\nAcceso remoto por cifrado asimetricó Configuracion del acceso por claves Vamos a generar nuestras claves desde nuestro cliente :\nAhora vamos a añadirla a nuestro servidor :\nUna vez echo esto deshabilitamos el acceso con contraseña en el servidor editando el archivo /etc/ssh/sshd_config :\nA continuación solo debemos reiniciar el servicio y al volver a registrarnos, ya estaremos utilizando clave publica :\nSi nos intentamos registrar con usuario el cual no tenemos la clave publica nos dirá lo siguiente :\nCambio de puerto Ahora vamos a editar el fichero de configuración para indicar el puerto :\nY reiniciaremos el servicio :\nAhora si nos intentamos conectar como lo hemos hecho anterior mente , nos dara el siguiente error :\nPara conectarnos deberemos de especificar el puerto por el cual nos conectamos con -p :\nConectarnos con un cliente de acceso remoto usando túneles Usaremos kitty , cuando lo abramos en la primera pantalla introducimos la ip del servidor y el puerto que haya configurado en el servidor para el ssh en mi caso 2222\nAhora añadimos el puerto por el cual nos conectaremos usando el túnel y después la ip seguida de dos puntos y el mismo puerto .\nAhora introducimos nuestro usuario y contraseña y nos habremos conectado :\nSi queremos hacer lo mismo pero usando una clave publica desde windows , pulsamos windows +r y escribimos lo siguiente :\nY generamos las claves publicas :\nAhora vamos a la ruta que lo hemos guardado copiamos la clave publica y la introducimos en el servidor , por comodidad la he copiado desde el cliente usando ssh.\nUna vez añadida guardamos el archivo :\nVamos a desactivar la autenticación por contraseña y reiniciamos el servicio\nAhora desde el kitty deberemos de irnos al apartado ssh\u0026gt;auth , le damos a browse y seleccionamos nuestra clave privada , que deberá tener la extension .ppk . Yo la copie en otro directorio por comodidad para las pruebas .\nY nos conectamos :\nAquí hemos combinado conectarnos con kitty usando un túnel + otro puerto + clave publica .\nVNCserver Lo instalamos con el siguiente comando :\nA continuación configuramos las credenciales de configuración para administradores y usuarios de acceso con el siguiente comando :\nAhora vamos al cliente y introducimos la ip seguida del puerto por dos puntos, si no lo sabemos lo podemos mirar con :\nNos saldrá una advertencia al no estar cifrada la comunicación , le damos a continuar y introducimos la contraseña de acceso , que hayamos puesto anteriormente :\nComo no tenemos entrono grafico en el servidor no nos mostrara imagen pero podemos ver que hemos establecido conexión tanto en windows como en Linux :\nGestión de páginas web mediante ssh 1.Una vez creado los dos sitio virtuales deseamos establecer una conexión segura a cada uno de nuestros sitios, para ello debemos establecer un túnel ssh de la misma manera que lo hemos establecido para establecer una conexión remota por vnc .\n2.Crear un túnel desde el cliente ssh para que el acceso a la sección privada de la web de departamentos se establezca por el puerto 9999\n3.Con ambos túneles establecidos comprobar que el acceso a la web iesgn.org se puede realizar sin problemas por el puerto 80\nSolo he conseguido hacer a mi pagina por defecto , para eso hacemos un túnel con kitty por ejemplo:\nAhora añadimos los puertos origen y destino del puerto :\nAhora nos registramos con nuestro usuario :\nUna vez establecido el túnel introducimos en el navegador localhost:8888 :\nY así hemos establecido una conexión segura web .\nSi cerramos el túnel perderemos la conexión :\n","date":"September 8, 2023","hero":"/javierasping.github.io/images/servicios/ssh/portada-ssh.png","permalink":"https:/javierasping.github.io/posts/servicios/ssh/ssh/","summary":"servidor SSH bajo debian Gestión remota usando SSH Lo primeros que deberemos de hacer sera instalarnos el paquete en el servidor y el cliente :\nPor seguridad se suele no permitir la conexión del root al servidor; para ello, se debe modificar el archivo /etc/ssh/sshd_config, y se pone la siguiente opción:\nY reiniciamos el servicio para que se apliquen los cambios :\nConectarse al servidor ssh Vamos a instalarnos el cliente ssh, para ello:","tags":["Servicios","NAT","SMR","IPTABLES","SNAT","SSH","FORWARDING"],"title":"SSH bajo debian "},{"categories":null,"contents":"Storage Spaces en Windows Server Storage Spaces es una característica de almacenamiento definido por software en el sistema operativo Windows Server que permite a los administradores de sistemas combinar varios discos físicos en un único espacio de almacenamiento lógico llamado \u0026ldquo;pool de almacenamiento\u0026rdquo;. Este pool de almacenamiento se puede utilizar para crear espacios de almacenamiento virtuales llamados \u0026ldquo;espacios de almacenamiento\u0026rdquo; que ofrecen diversas funciones de redundancia y capacidades avanzadas de administración de almacenamiento.\nGrupos de almacenamiento Los siguientes cmdlets de Windows PowerShell realizan la misma función que el procedimiento anterior. Escriba cada cmdlet en una sola línea, aunque aquí pueden aparecer con saltos de línea entre varias líneas aquí debido a restricciones de formato.\nEl siguiente ejemplo muestra qué discos físicos están disponibles en el grupo primordial.\nGet-StoragePool -IsPrimordial $true | Get-PhysicalDisk -CanPool $True El siguiente ejemplo crea un nuevo grupo de almacenamiento denominado StoragePool1 que usa todos los discos disponibles:\nNew-StoragePool –FriendlyName StoragePool1 –StorageSubsystemFriendlyName \u0026#34;Windows Storage\\*\u0026#34; –PhysicalDisks (Get-PhysicalDisk –CanPool $True) Por defecto el tipo de aprovisionamiento es mirror.\nSi necesitamos añadir mas discos :\nAdd-PhysicalDisk -StoragePoolFriendlyName StoragePool1 -PhysicalDisks (Get-PhysicalDisk - CanPool $True) Crear un disco virtual Vamos a crear un disco virtual :\nNew-VirtualDisk –StoragePoolFriendlyName StoragePool1 –FriendlyName VirtualDisk1 –Size (8GB) Automáticamente nos creara un volumen y nos lo montara en una letra disponible: :\nPodemos interactuar con el y guardar información :\nVemos que este es el “equivalente” a LVM en Windows . Vemos que hay similitudes no solo en la estructura a la hora de crearlo si no que también podemos observar que hacen referencia en la documentación oficial a RAID 5 y RAID 6:\nA la forma de almacenar los datos en ya sea en stripes o guardando el espacio completo , al igual que sucede en Linux :\nBibliografía Documentación oficial ","date":"September 8, 2023","hero":"/javierasping.github.io/images/sistemas/storage_spaces/portada.png","permalink":"https:/javierasping.github.io/posts/sistemas/almacenamiento_servidor_independiente/almacenamiento_servidor_independiente/","summary":"Storage Spaces en Windows Server Storage Spaces es una característica de almacenamiento definido por software en el sistema operativo Windows Server que permite a los administradores de sistemas combinar varios discos físicos en un único espacio de almacenamiento lógico llamado \u0026ldquo;pool de almacenamiento\u0026rdquo;. Este pool de almacenamiento se puede utilizar para crear espacios de almacenamiento virtuales llamados \u0026ldquo;espacios de almacenamiento\u0026rdquo; que ofrecen diversas funciones de redundancia y capacidades avanzadas de administración de almacenamiento.","tags":["Linux","sistemas","ISO","ASO"],"title":"Storage Spaces en Windows Server"},{"categories":null,"contents":"Underworld enroutamiento básico en cisco y ACLS Practica basica de enroutamiento en cisco y configuracion de ACLS , tenemos 4 reinos en los cuales en primer lugar queremos lograr que se comuniquen , posteriormente iremos poniendo una serie de reglas para restringir esto.\nIntroducción Vives en UNDERWORLD. En tu mundo, se presentan diferentes tipos de especies con un único fin, “cruzarse” entre sí. Estas criaturas son:\nVAMPIROS\nLICÁNTROPOS: hombres lobo con la capacidad de regresar a su estado humano.\nHOMBRES LOBO: hombres lobo que tras su primera conversión a lobo, no pudieron regresar a su estado humano.\nHUMANOS: unos mierdecillas.\nTÚ: un guerrero informático con superpoderes como darse la vuelta a un juego que todavía no ha salido al mercado o poseer la facultad de volverse invisible cuando sale de fiesta y trata de cortejar a una fémina diciéndole frases del tipo: ¿quieres que te compile el kernel nena?\nEl aspecto de UNDERWORLD es el siguiente:\n1.Enturar el escenario Tablas de enroutamiento a “papel” ROUTER HUMANO 192.168.1.0/24 0.0.0.0 F0/0 192.168.2.0/24 0.0.0.0 F1/0 192.168.3.0/24 192.168.2.2 F1/0 192.168.4.0/24 192.168.2.2 F1/0 192.168.5.0/24 192.168.2.2 F1/0 192.168.6.0/24 192.168.2.2 F1/0 192.168.7.0/24 192.168.2.2 F1/0 0.0.0.0/0 192.168.2.2 F1/0 ROUTER VAMPIROS 192.168.1.0/24 192.168.2.1 F1/0 192.168.2.0/24 0.0.0.0 F1/0 192.168.3.0/24 0.0.0.0 F0/0 192.168.4.0/24 0.0.0.0 F2/0 192.168.5.0/24 192.168.4.2 F2/0 192.168.6.0/24 192.168.4.2 F2/0 192.168.7.0/24 192.168.4.2 F2/0 0.0.0.0/0 192.168.4.2 F2/0 ROUTER LICÁNTROPOS 192.168.1.0/24 192.168.4.1 F2/0 192.168.2.0/24 192.168.4.1 F2/0 192.168.3.0/24 192.168.4.1 F2/0 192.168.4.0/24 0.0.0.0 F2/0 192.168.5.0/24 0.0.0.0 F0/0 192.168.6.0/24 0.0.0.0 F1/0 192.168.7.0/24 192.168.6.2 F1/0 0.0.0.0/0 192.168.4.1 F1/0 ROUTER HOMBRE LOBO 192.168.1.0/24 192.168.6.1 F1/0 192.168.2.0/24 192.168.6.1 F1/0 192.168.3.0/24 192.168.6.1 F1/0 192.168.4.0/24 192.168.6.1 F1/0 192.168.5.0/24 192.168.6.1 F1/0 192.168.6.0/24 0.0.0.0 F1/0 192.168.7.0/24 0.0.0.0 F0/0 0.0.0.0/0 192.168.6.1 F1/0 2.Configuración direcciones Ips interfaces Router humanos Guardamos la configuración :\nRouter vampiros Guardamos la configuración :\nRouter licántropos Guardamos la configuración :\nRouter vampiros Guardamos la configuración :\n3. Añadiendo la tabla de enroutamiento a los routers Router humanos Nos creara por defecto las rutas a las redes que estamos conectados solo necesitaremos añadir la ruta por defecto :\nNos quedaría la tabla de enroutamiento :\nGuardamos la configuración :\nRouter vampiros Añadiremos las siguientes rutas :\nAsí quedaría la tabla de enroutamiento :\nGuardamos la configuración :\nRouter licántropos Añadimos las siguientes rutas :\nAsí quedaría nuestra tabla de enroutamiento :\nGuardamos la configuración :\nRouter hombres lobo Añadimos las siguientes rutas :\nAsí quedaría nuestra tabla de enroutamiento :\nGuardamos la configuración :\n4.Prueba de enroutamiento Para no hacer muy extenso este apartado comprobare que desde PC1 llego a todos los PCs:\n5.Configuración ACLs Todo el mundo utiliza la red para mandarse mensajitos y ligar (por lo que deberás configurar la red para que esto sea posible en un principio, es decir, que todos los equipos tengan conexión entre sí). Tú, que ya estás hasta la *#%?! de tanto bicho raro como consecuencia de los cruces que se producen cuando un vampiro se cruza por ejemplo con un licántropo y el hijo de éstos con un hombre lobo y así sucesivamente, decides ponerle fin a la historia haciendo lo siguiente, metiéndole unas cuantas ACLs a los routers que los comunican:\nLos VAMPIROS no podrán comunicarse con el resto de especies. Creamos la regla para denegar el trafico de la red 192.168.3.0:\nLa aplicamos a la interfaz FastEthernet 0/0(192.168.3.1) y la aplicamos a la salida de esta :\nComprobaremos que los PCs de la red de Vampiros no pueden comunicarse con el resto , nos dice que hay una ACL cortándonos el paso :\nSi desde cualquier otro reino nos comunicamos con ellos los mensajes serán capaces de llegar a ellos sin embargo la respuesta no llegaran ya que la ACL lo impide , la respuesta es cortada ya que sale de la red de los vampiros :\nLos HOMBRES LOBO y los LICÁNTROPOS, dado que no son tan repulsivos cuando se cruzan, podrán comunicarse entre sí. Con el resto de especies no tendrán comunicación. Este apartado podemos darle diferentes soluciones , yo he optado por poner una ACL , en la interfaz F2/0 del router de licántropos .\nCreamos la ACL :\nY la aplicamos de salida de la interfaz F2/0 de salida :\nComprobaremos que la ACL funciona , haciendo pings entre las maquinas.\nDesde PC7 vemos que no nos permite salir del router de licántropos , este nos corta la comunicación pero sin embargo podemos llegar a las demás redes :\nDesde PC5 podemos observar el mismo resultado :\nDesde PC1 vemos que no obtenemos respuesta ya que solo estamos cortando el trafico de salida impidiendo que las maquinas de “dentro” se comuniquen con las de fuera .\nHUMANOS tampoco podrán comunicarse con el resto de especies\nCon el esquema actual de ACLs no seria necesario implementar una nueva regla en ya que con el esquema actual no es posible la comunicación con ellos . Aunque los mensajes que PC1 realice lleguen a su destino este no recibirá ninguna respuesta .\nPero si aun así queremos impedir que los humanos puedan enviar mensajes a los demás desde su red implementaremos la siguiente regla en su router :\nAhora estamos cortando los mensajes de los humanos desde el Router 1:\n6.Servidor DHCP Al final decides hacer negocio con las especies raras porque no tienen ni pajolera idea de informática y eres contratado por estos entes malignos para que lleves a cabo las siguientes tareas:\nHombres lobo\nLos hombres lobo que son bastante burros metiendo direcciones IP a sus máquinas, te piden que les configures el servicio DHCP para que todas sus máquinas reciban automáticamente una IP libre:\nTendremos que hacer los siguientes pasos :\nEl comando ip dhcp excluded-address 192.168.7.1 –\u0026gt; Señalamos las direcciones que no queremos que se repartan por DHCP , es decir las exclusiones . El comando ip dhcp pool HOMBRES_LOBO nombramos al rango de direcciones que estamos repartiendo Nos meterá a la configuración del rango, ahora le decimos la red que queremos que reparta las direcciones network 192.168.7.0 255.255.255.0 Ahora le indicaremos que puerta de enlace queremos que asigne default-router 192.168.7.1 Si quisiéramos configurar un servidor DNS , por ejemplo el de google seria así dns-server 8.8.8.8 Podemos ver que el servidor DHCP esta funcionando correctamente con los parámetros que le hemos indicado anteriormente :\nLicántropos\nLos licántropos por su parte, te contratan para que les asignes también por DHCP sus IPs, pero te indican que no pueden recibir las primeras 10 direcciones de su rango (sin contar la de red ni la de la puerta de enlace), ya que éstas, están reservadas para los jefes de su clan que están de viaje y volverán en unos días.\nDeclaramos las ips que vamos a excluir :\nNombramos al rango de direcciones que estamos repartiendo para así poder configurarlo:\nLe decimos la red que queremos que reparta las direcciones :\nAhora le indicaremos que puerta de enlace queremos que asigne :\nComprobaremos que el servidor dhcp esta funcionando :\n7.Modificación ACLs Permitir ligar con las vampiros\nDe tanto hacer negocio con los vampiros, te fijas en un par de vampiritas que están de muy buen ver y te gustaría poder enviarles mensajitos desde el chalet que te acabas de comprar en HUMANLAND con el pastizal que les estás sacando a las pobres “criaturicas”. Tu IP es la 192.168.1.4 y la de SELENE y SONJA son la 192.168.3.4 y 192.168.3.5 respectivamente. Añade una máquina a HUMANLAND para tu equipo denominado IT KNIGHT y 2 máquinas denominadas SELENE y SONJA con las mencionadas IPs en TRANSILVANIA.\nSi queremos realizar esto deberemos de configurar ACLs avanzadas para poder controlar el origen y el destino de los paquetes.\nLa sintaxis es bastante sencilla en este caso :\npermit ip IP_ORIGEN WILDCARD IP_DESTINO WILDCARD Crearemos la ACL para los humanos :\nTambién crearemos la ACL para los vampiros :\nLa aplicaremos a la interfaz de entrada en cada red , ambas son la FastEthernet 0/0 :\n*****Deberemos de haber quitado anteriormente las lista asignada a la interfaz si no dará un error , para quitarla es el mismo comando que para ponerla poniendo un no delante .\nAhora comprobaremos la efectividad de estas reglas que hemos implementado :\nIT KNIGHT –\u0026gt; SELENE y SONJA\nVemos que solo nos permite el trafico hacia estos dos host específicos tal y como hemos indicado en nuestras ACLs\nSELENE –\u0026gt; IT KNIGHT\nVemos que solo nos permite el trafico hacia estos dos host específicos tal y como hemos indicado en nuestras ACLs , si intentamos comunicarnos con otro host cortara el trafico la ACL:\nSONJA–\u0026gt; IT KNIGHT\nVemos que solo nos permite el trafico hacia estos dos host específicos tal y como hemos indicado en nuestras ACLs , si intentamos comunicarnos con otro host cortara el trafico la ACL:\nTambién podemos ver las estadísticas de la ACL en el router fijándonos en los hits de la regla para ver si están funcionando :\nAunque en ninguna de las listas hemos especificado en deny any , no seria necesario ya que esta implícito , es decir por defecto al no cumplirse ninguna regla desechara el trafico .\n8. Servidor web Desde que no se puede ligar en UNDERWORLD, están todos más aburridos que un ajo, así que decides ponerles un servidor WEB interno a UNDERWORLD. Añade al router PUENTE 1, un servidor denominado FICHEROS que tendrá la IP 192.168.8.2/24, creando las ACLs necesarias para que la comunidad entera de UNDERWORLD, pueda entretenerse viendo algunas web chulas.\nLo primero sera configurar la nueva interfaz del router de los HUMANOS:\nLo siguiente sera configurar para nuestro esquema actual en el router de VAMPIROS la ruta a la nueva red para que se route el escenario correctamente :\nYa por ultimo configuraremos la ip de nuestro debian de forma estática con la direccion 192.168.8.2:\nAdemás le instalaremos apache (deberemos hacerlo previamente conectado a la nube NAT ) :\nUna vez ya tenemos el servidor web preparado y enrutado en nuestro escenario , vamos a modificar las distintas ACLs para que solo puedan llegar al servidor web por el puerto 80 .\nEn el router de los humanos añadimos la siguiente regla , la cual permite todo el trafico hacia el host 192.168.8.2 que vaya al puerto 80:\nPara refrescar la lista y que se apliquen los cambios deberemos de volver a asignársela al router :\nAhora haremos lo mismo con el router de los vampiros ya que tiene configuradas ACLs extendidas al igual que los humanos :\nAhora vamos a configurar una ACL avanzada para los licántropos y los hombres lobo :\nVamos a comprobar que NO podemos hacerle ping al servidor desde los VPCs:\nEn resumen hemos mantenido las reglas anteriores pero hemos permitido el trafico al servidor web siempre y cuando venga por el puerto 80 , por eso no podemos hacerle ping .\nVamos a comprobar que podemos acceder al servidor web desde las redes : –\u0026gt;HUMANOS :\n–\u0026gt;VAMPIROS:\n–\u0026gt;LICÁNTROPOS:\n–\u0026gt; HOMBRES LOBO :\n","date":"September 8, 2023","hero":"/javierasping.github.io/images/redes/underworld/portada_underwolrd.webp","permalink":"https:/javierasping.github.io/posts/redes/underworld/underworld/","summary":"Underworld enroutamiento básico en cisco y ACLS Practica basica de enroutamiento en cisco y configuracion de ACLS , tenemos 4 reinos en los cuales en primer lugar queremos lograr que se comuniquen , posteriormente iremos poniendo una serie de reglas para restringir esto.\nIntroducción Vives en UNDERWORLD. En tu mundo, se presentan diferentes tipos de especies con un único fin, “cruzarse” entre sí. Estas criaturas son:\nVAMPIROS\nLICÁNTROPOS: hombres lobo con la capacidad de regresar a su estado humano.","tags":["Redes","Wireshark","GNS3","Cisco","Enroutamiento","ACLS"],"title":"Underworld"},{"categories":null,"contents":"Underworld evolution El mundo de UNDERWORLD ha evolucionado mucho en los últimos meses, así que debes realizar tareas de administración de la red para afrontar la nueva situación.\nPor un lado, se ha descubierto Internet en el Inframundo, de forma que cada uno de los submundos (recuerda: vampiros, licántropos, hombres lobo y humanos) se conecta a un router que, a su vez, les conecta a uno de los dos grandes routers que forman la Internet de Underworld, llamados Marcus (para humanos y vampiros) y Alexander (para hombres lobo y licántropos). Marcus y Alexander están conectados entre sí.\nEl esquema sería el siguiente:\nPor otro lado, los seres del inframundo han descubierto una vulnerabilidad en los routers CISCO que les permite saltarse las listas de control de acceso, volviendo al caos que lograste impedir en su día con las ACL.\nTu tarea consistirá entonces en:\nSustituir en la infraestructura de red los routers CISCO por máquinas Linux siguiendo el esquema de la figura. Configurar adecuadamente las máquinas Linux para que funcionen como routers. Crear las tablas de enrutamiento necesarias para que todas las máquinas se comuniquen con todas en principio, teniendo en cuenta que las redes internas tendrán direcciónes privadas y en Internet tendremos direcciónes públicas. Configurar los cortafuegos necesarios en los routers para que: Los VAMPIROS no puedan comunicarse con el resto de especies. Los HOMBRES LOBO y los LICÁNTROPOS, dado que no son tan repulsivos cuando se cruzan, podrán comunicarse entre sí. Con el resto de especies no tendrán comunicación. HUMANOS tampoco podrán comunicarse con el resto de especies. Configurar el servicio DHCP que tenían los hombres lobo y los licántropos en las mismas condiciones que tenían cuando se usaban routers CISCO. Configurar en los cortafuegos las reglas necesarias para que, desde HUMANLAND, IT KNIGHT siga comunicándose con sus dos vampiras favoritas (SONJA Y SELENE). Realiza las configuraciones necesarias para montar en HUMANLAND un servidor web accesible desde cualquier parte de UNDERWORLD. Preparación del escenario en Linux Configuración de las tarjetas de red Lo primero que haremos sera añadir las tarjetas de red necesarias a cada router , para ello con la maquina apagada hacemos sobre la misma clic derecho \u0026gt; configuración \u0026gt; network y añadimos los slots que sean necesarios para cada maquina :\nNecesitaremos el siguiente numero de tarjetas de red por cada dispositivo :\nRouter 1 , 2 ,3 y 4 : Necesitaran 2 tarjetas de red MARCUS y ALEXANDER : Necesitaran 3 tarjetas de red PCs : Necesitaran 1 tarjeta de red Una vez hecho esto editaremos el fichero /etc/network/interfaces para realizar nuestra configuración de red .\nPosteriormente reiniciaremos el servicio networking con systemctl restart networking.service para que se aplique la configuración de red que hemos indicado .\nConfiguración de la tarjeta de red Router 1 :\nConfiguración de la tarjeta de red Router 2 :\nConfiguración de la tarjeta de red Router 3 :\nConfiguración de la tarjeta de red Router 4 :\nConfiguración de la tarjeta de red Router MARCUS :\nConfiguración de la tarjeta de red Router ALEXANDER :\nActivar el bit de forwarding Si queremos hacer que una maquina Linux actué como router , es decir que enroute los paquetes que no tienen como destino esta deberemos de activar el bit de forwarding .\nAdemás aprovecharemos para activar el bit de forwarding permanentemente en los routers del escenario para ello editamos el fichero /etc/sysctl.conf y descomentamos esta linea :\nEsto mismo repetiremos para los 6 routers que tenemos en el escenario :\nRouter 1:\nRouter 2:\nRouter 3:\nRouter 4:\nRouter MARCUS:\nRouter ALEXANDER:\nAhora todas nuestras maquinas están configuradas para actuar como routers y encaminaran los paquetes que le lleguen y no sean para esta .\nConfiguración de rutas Aquí te mostrare si he añadido alguna ruta manualmente y las tablas de enroutamiento de los dispositivos .\nRouter MARCUS:\nRouter ALEXANDER:\nRouter 1:\nRouter 2:\nRouter 4:\nTeniendo la configuración de red que tengo en las tarjetas solo he añadido 2 rutas manuales , en los routers de MARCUS y ALEXANDER en el resto no ha sido necesario ya que esta se genera automáticamente con la puerta de enlace que hayamos colocado al configurar las interfaces de red .\nPodría haberme ahorrado escribirlas si les hubiese colocado en las interfaz que esta configurada en la red 100.X.X.X la dirección ip del otro como puerta de enlace .\nPrueba de conectividad Vamos a comprobar que hemos realizado el enroutamiento correctamente así que voy a lanzar un ping desde cada router a cada uno de los extremos del escenario .\nRouter 1 :\nRouter 2 :\nRouter 3:\nRouter 4:\nQueda comprobado que tenemos conectividad entre todos los routers , los PCS no podrán tener “conectividad” hasta que configuremos el SNAT .\nConfiguración DHCP Licántropos Los licántropos por su parte, te contratan para que les asignes también por DHCP sus IPs, pero te indican que no pueden recibir las primeras 10 direcciónes de su rango (sin contar la de red ni la de la puerta de enlace), ya que éstas, están reservadas para los jefes de su clan que están de viaje y volverán en unos días.\nCon la maquina conectada a la nube NAT y la tarjeta que este conectada configurada por DHCP nos descargaremos el servidor DHCP , para esto primero deberemos de hacer un apt update ya que la maquina no trae cargados los repositorios en memoria :\nCuando acabe de instalarse nos dará un error , este es debido a que no esta configurado el servicio y no sabe por que interfaz tiene que repartir direcciónes el servidor :\nPara ello editaremos el fichero /etc/default/isc-dhcp-server y añadiremos el nombre de la tarjeta en la sección de IPV4 :\nAhora configuraremos el ámbito con los requisitos que nos solicitan los licántropos para ello editaremos el fichero /etc/dhcp/dhcpd.conf :\nTendremos que tener en cuenta que la configuración que pongamos aquí sea coherente con la configuración de red que tenemos , tenemos que tener en cuenta que tenemos una /28 así que en este caso solo podremos tener 14 direcciónes asignables .\nPero si seguimos el enunciado las 10 primeras no las quieren por lo que solo podremos asignar 3 a nuestros clientes .\nUna vez hecho esto reiniciaremos el servicio :\nY veremos si esta funcionando , viendo el estado :\nLe asignaremos ip a un PC para comprobar que funciona :\nHombres lobo Los hombres lobo que son bastante burros metiendo direcciónes IP a sus máquinas, te piden que les configures el servicio DHCP para que todas sus máquinas reciban automáticamente una IP libre.\nCon la maquina conectada a la nube NAT y la tarjeta que este conectada configurada por DHCP nos descargaremos el servidor DHCP , para esto primero deberemos de hacer un apt update ya que la maquina no trae cargados los repositorios en memoria :\nCuando acabe de instalarse nos dará un error , este es debido a que no esta configurado el servicio y no sabe por que interfaz tiene que repartir direcciónes el servidor :\nPara ello editaremos el fichero /etc/default/isc-dhcp-server y añadiremos el nombre de la tarjeta en la sección de IPV4 :\nPor suerte los hombres lobo son menos exigentes y ellos quieres que se reparta su rango de direcciónes completo así que para ello editaremos el fichero /etc/dhcp/dhcpd.conf :\nAhora reiniciaremos el servicio :\nComprobaremos el estado del mismo para comprobar que este funcionando correctamente :\nLe asignaremos una dirección a un cliente para asegurarnos que todo funciona correctamente :\nConfiguración SNAT Para acabar la fase de preparación necesitaremos de configurar SNAT para que las distintas razas puedan comunicarse entre si .\nRouter 1 :\nMe he creado un archivo llamado iptables para guardar todas las reglas de la practica :\nPara demostrar que funciona la regla , aquí vemos una captura entre el Router 1 y el PC1 :\nVemos que una vez fuera de la red entre R1 y MARCUS se ha aplicado SNAT :\nRouter 2 :\nMe he creado un archivo llamado iptables para guardar todas las reglas de la practica :\nPara demostrar que funciona la regla , aquí vemos una captura entre el Router 2 y el PC3. Vemos que el origen es una dirección ip privada :\nVemos que una vez fuera de la red entre R2 y MARCUS se ha aplicado SNAT , ya que el origen ahora es una dirección ip publica :\nRouter 3 :\nMe he creado un archivo llamado iptables para guardar todas las reglas de la practica :\nPara demostrar que funciona la regla , aquí vemos una captura entre el Router 3 y el PC5. Vemos que el origen es una dirección ip privada :\nVemos que una vez fuera de la red entre R3 y ALEXANDER se ha aplicado SNAT , ya que el origen ahora es una dirección ip publica :\nRouter 4 :\nMe he creado un archivo llamado iptables para guardar todas las reglas de la practica :\nPara demostrar que funciona la regla , aquí vemos una captura entre el Router 4 y el PC7. Vemos que el origen es una dirección ip privada :\nVemos que una vez fuera de la red entre R4 y ALEXANDER se ha aplicado SNAT , ya que el origen ahora es una dirección ip publica :\nCon el escenario actual cualquier PC es capaz de llegar a todas las direcciónes publicas de nuestra red :\nConfiguración DNAT Para que las maquinas puedan comunicarse entre si se les ha instalado ssh , así que tendremos que configurar el DNAT .\nR1\nPara esta red como tenemos dos clientes le he cambiado el puerto que usa el ssh :\nComprobamos que puedo conectarme a ambos host desde otra red , así vemos que funciona el DNAT.\nSonja:\nSelene:\nR2\nEn esta red solo tenemos un cliente que queremos que se pueda acceder desde el exterior así que solo tendremos una regla de DNAT :\nPara comprobar la regla me meteré desde los vampiros a los humanos :\nR3\nEn esta red al haber un servicio DHCP corriendo para que la regla de DNAT funcione correctamente deberemos de hacerle una reserva a nuestro host o configurarle la tarjeta de manera estática.\nYo haré lo primero por comodidad , para ello nos dirigimos al fichero /etc/dhcp/dhcpd.conf y escribimos lo siguiente:\nhost NombreDeLaReserva { hardware ethernet DIR_MAC_HOST; fixed-address IP_RESERVA;} Una vez hecho esto reiniciamos el servicio :\nY pondré la siguiente regla:\nAhora vamos a comprobar que me puedo conectar a este host:\nR4\nEn esta red también le configuraremos una reserva en el servidor para que nuestras reglas se mantengan activas , en este caso le asignare la dirección 192.168.4.5.\nReiniciaremos el servicio y comprobamos que nuestro host tenga asignada la ip de la reserva , en caso contrario solicitaremos otra con dhclient :\nAhora añadiremos la regla de DNAT para que se pueda llegar al servidor ssh :\nComprobamos que la regla esta funcionando y podemos conectarnos desde otra red :\nConfiguración cortafuegos Los Vampiros no puedan comunicarse con el resto de especies Pondré una política por defecto DROP en la tabla FORWARD para que tire todo el trafico proveniente de la red de los vampiros :\nComprobaremos que los vampiros son incapaces de llegar a las demás redes :\nPodemos ver los hits que ha realizado para ver que esta funcionando la regla :\nPermitir comunicación entre Hombres Lobo y Licántropos Los HOMBRES LOBO y los LICÁNTROPOS, dado que no son tan repulsivos cuando se cruzan, podrán comunicarse entre sí. Con el resto de especies no tendrán comunicación.\nPondré una política por defecto DROP en la tabla FORWARD y a continuación permitiré el trafico que entre por la interfaz ens4 y salga por la ens5 , y la inversa para permitir el trafico entre esta dos redes :\nVemos que entre ellos pueden comunicarse sin embargo no pueden acceder a los Humanos ni a los Vampiros :\nComprobaremos que las reglas tienen hits :\nHUMANOS tampoco podrán comunicarse con el resto de especies Con las reglas que tenemos actualmente la comunicación con otras especies por parte de los humanos no es posible, podemos ver que en R2 sin ninguna regla adicional no podemos conectarnos :\nVemos que no podemos comunicarnos :\nSi queremos prohibir el trafico en nuestro router y no depender de las reglas externas en caso de que estas cambien añadiremos una política por defecto DROP :\nVeremos los hits en la política por defecto :\nConfigurar en los cortafuegos las reglas necesarias para que, desde HUMANLAND, IT KNIGHT siga comunicándose con sus dos vampiros favoritas (SONJA Y SELENE). Las ips de estas maquinas son :\nIT KNIGHT (SSH)–\u0026gt; 192.168.2.3:22 SONJA (SSH) –\u0026gt; 192.168.1.4:22 SELENE (SSH) –\u0026gt; 192.168.1.5:2222 En el router 1 las reglas necesarias para poder permitir esta comunicación son :\nEn el router 2 las reglas necesarias para poder permitir esta comunicación son :\nVamos a ir comprobando acción a acción para asegurarnos de que estas reglas realizan su cometido.\nSELENE –\u0026gt; ITKNIGHT\nEn el router 1 :\nEn el router 2:\nSONJA –\u0026gt; ITKNIGHT\nHacemos ssh :\nVemos los hits del router 1:\nVemos los hits del router 2(Misma regla que el apartado anterior) :\nITKNIGHT –\u0026gt; SONJA\nHacemos ssh :\nVemos los hits del router 1 :\nVemos los hits del router 2 :\nITKNIGHT –\u0026gt; SELENE\nLanzamos el ssh :\nVemos los hits del router 1 :\nVemos los hits del router 2:\nServidor web HUMANLAND Realiza las configuraciones necesarias para montar en HUMANLAND un servidor web accesible desde cualquier parte de UNDERWORLD.\nLe he dado a este la ip 192.168.2.10 .\nLo primero que debemos de configurar es el DNAT en el router R2(HUMALAND):\nAhora en el router 2 permitiremos que se reciban peticiones al servidor y sus respuestas :\nEn el router 1 permitimos que puedan hacer peticiones y sus respuestas :\nPara terminar en ALEXANDER permitimos que puedan atravesar peticiones web :\nVamos a comprobar que se pueden acceder desde todas las redes .\nVAMPIROS :\nComprobamos los hits en router 1 :\nHOMBRES LOBO Y LICÁNTROPOS\nHacemos la petición web desde ambas redes :\nComprobamos los hits en router ALEXANDER :\nPor ultimo vemos los hits en el Router 2 (HUMANOS) de la regla DNAT\nEscenario con routers Cisco Configuración de las interfaces R1\nR2\nR3\nR4\nMARCUS\nALEXANDER\nTablas de enroutamiento R1\nAñadimos la ruta por defecto :\nAsí quedaría la tabla de enroutamiento de R1:\nR2\nAñadimos la ruta por defecto :\nAsí quedaría la tabla de enroutamiento de R2:\nR3\nAñadimos la ruta por defecto :\nAsí quedaría la tabla de enroutamiento de R3:\nR4\nAñadimos la ruta por defecto :\nAsí quedaría la tabla de enroutamiento de R4:\nMARCUS\nAñadimos la ruta por defecto :\nAsí quedaría la tabla de enroutamiento de MARCUS:\nALEXANDER\nAñadimos la ruta por defecto :\nAsí quedaría la tabla de enroutamiento de ALEXANDER:\nPrueba de conectividad Vamos a comprobar que hemos realizado el enroutamiento correctamente así que voy a lanzar un ping desde cada router a cada uno de los extremos del escenario .\nR1 → A los extremos :\nR2 → A los extremos :\nR3 –\u0026gt; a los extremos:\nR4 –\u0026gt; a los extremos\nConfiguración DHCP Licántropos Los licántropos por su parte, te contratan para que les asignes también por DHCP sus IPs, pero te indican que no pueden recibir las primeras 10 direcciónes de su rango (sin contar la de red ni la de la puerta de enlace), ya que éstas, están reservadas para los jefes de su clan que están de viaje y volverán en unos días.\nLo primero que haremos sera establecer el rango de IP´s excluidas del conjunto (pool) direcciónes que podrá asignar el servicio indicando la ip inicial y final del rango, ambas incluidas:\nPonemos un nombre al rango del servicio DHCP:\nDefinimos la red a la que dará servicio de DHCP:\nIncluimos la puerta de enlace que ofrecerá el servicio :\nCon esto ya tendríamos montado el servidor DHCP , con el siguiente comando podemos ver las estadísticas del servicio para ver si este esta funcionando :\nComprobaremos a demás que se ha realizado la concesión a nuestro host :\nDHCP Hombres lobo Los hombres lobo que son bastante burros metiendo direcciónes IP a sus máquinas, te piden que les configures el servicio DHCP para que todas sus máquinas reciban automáticamente una IP libre.\nEn el apartado anterior detallo cada apartado de la configuración de un servidor DHCP en cisco , aquí te muestro la configuración para la red de los Hombre Lobo :\nComprobaremos que esta funcionando :\nConfiguración SNAT Router 1:\nLo primero que haremos sera crear una acl para permitir el trafico que queremos hacer SNAT :\nLe asignaremos a la interfaz interna de nuestra red esta regla :\nAhora crearemos un pool con las ips publicas , el comando seria este no sale completo en la terminal :\nActivamos el NAT :\nIndicamos que interfaz es de “dentro” :\nIndicamos la interfaz de “fuera”:\nEl SNAT estaría funcionando , así que vamos a comprobarlo :\nVemos que la regla tiene HITS:\nRouter 2:\nLo primero que haremos sera crear una acl para permitir el trafico que queremos hacer SNAT :\nLe asignaremos a la interfaz interna de nuestra red esta regla :\nAhora crearemos un pool con las ips publicas , el comando seria este no sale completo en la terminal :\nActivamos el NAT :\nIndicamos que interfaz es de “dentro” :\nIndicamos la interfaz de “fuera”:\nEl SNAT estaría funcionando , así que vamos a comprobarlo viendo si la regla tiene HITS:\nRouter 3:\nLo primero que haremos sera crear una acl para permitir el trafico que queremos hacer SNAT :\nLe asignaremos a la interfaz interna de nuestra red esta regla :\nAhora crearemos un pool con las ips publicas , el comando seria este no sale completo en la terminal :\nActivamos el NAT :\nIndicamos que interfaz es de “dentro” :\nIndicamos la interfaz de “fuera”:\nEl SNAT estaría funcionando , así que vamos a comprobarlo viendo si la regla tiene HITS:\nRouter 4:\nLo primero que haremos sera crear una acl para permitir el trafico que queremos hacer SNAT :\nLe asignaremos a la interfaz interna de nuestra red esta regla :\nAhora crearemos un pool con las ips publicas , el comando seria este no sale completo en la terminal :\nActivamos el NAT :\nIndicamos que interfaz es de “dentro” :\nIndicamos la interfaz de “fuera”:\nEl SNAT estaría funcionando , así que vamos a comprobarlo viendo si la regla tiene HITS:\nConfiguración de DNAT R1\nComprobación :\nR2\nComprobación :\nR3\nComprobación :\nR4\nComprobación :\nConfiguración cortafuegos Los Vampiros no puedan comunicarse con el resto de especies Para ello vamos a borrar la regla existente que hay en la lista :\nAhora denegaremos el trafico saliente de la red de los vampiros :\nComprobamos que no pueden comunicarse :\nMiramos los hits de las reglas :\nPermitir comunicación entre Hombres Lobo y Licántropos Los HOMBRES LOBO y los LICÁNTROPOS, dado que no son tan repulsivos cuando se cruzan, podrán comunicarse entre sí. Con el resto de especies no tendrán comunicación.\nCon estas dos reglas permitimos a cualquier host de nuestra redes locales salir cuando el destino es los hombres lobos o los licántropos :\nR3-→ 180.0.0.1 R4 –\u0026gt; 190.0.0.1 Vemos que nos tira los paquetes que no van desde HL a LC o de LC a HL :\nHUMANOS tampoco podrán comunicarse con el resto de especies Con las reglas que tenemos actualmente la comunicación con otras especies por parte de los humanos no es posible, podemos ver que en R2 sin ninguna regla adicional no podemos conectarnos ya que nuestros paquetes llegaran a las redes .\nPara que verdaderamente los humanos no puedan comunicarse sin depender de las reglas de los demos reinos , vamos a impedir que estos salgan del reino :\nSi lo comprobamos ahora ellos no podrán salir del reino :\nMiramos los hits :\nConfigurar en los cortafuegos las reglas necesarias para que, desde HUMANLAND, IT KNIGHT siga comunicándose con sus dos vampiros favoritas (SONJA Y SELENE). Las ips de estas maquinas son :\nIT KNIGHT (SSH) -–\u0026gt; 192.168.2.3:22 SONJA (SSH) -–\u0026gt; 192.168.1.4:22 SELENE (SSH) -–\u0026gt; 192.168.1.5:2222 Para permitir que los vampiros puedan salir a comunicarse con los humanos :\nPermitimos los mensajes de salida a la publica de los vampiros cuando el puerto sea el 22 y 2222:\nAhora vamos a permitir que los vampiros puedan conectarse a los humanos usando el puerto 22 :\nNo se porque no funciona .. solo va si no coloco ninguna regla incluso permitiendo TODO el trafico ssh tampoco … También he permitido todo el ICMP pero nada sigue ocurriendo lo mismo .\nEl nat y el SNAT están funcionando bien pero a la hora de hacer las reglas ssh pasa lo siguiente en la red local al ser mandados de vuelta el router los corta a pesar de que el trafico esta permitido\n","date":"September 8, 2023","hero":"/javierasping.github.io/images/redes/underworld_evolution/portada.jpeg","permalink":"https:/javierasping.github.io/posts/redes/underworld_evolution/underworld_evolution/","summary":"Underworld evolution El mundo de UNDERWORLD ha evolucionado mucho en los últimos meses, así que debes realizar tareas de administración de la red para afrontar la nueva situación.\nPor un lado, se ha descubierto Internet en el Inframundo, de forma que cada uno de los submundos (recuerda: vampiros, licántropos, hombres lobo y humanos) se conecta a un router que, a su vez, les conecta a uno de los dos grandes routers que forman la Internet de Underworld, llamados Marcus (para humanos y vampiros) y Alexander (para hombres lobo y licántropos).","tags":["Redes","comandos"],"title":"Underworld evolution"}]