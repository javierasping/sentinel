<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DEBIAN on Atlas</title><link>https://www.javiercd.es/tags/debian/</link><description>Recent content in DEBIAN on Atlas</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Thu, 28 Mar 2024 10:00:00 +0000</lastBuildDate><atom:link href="https://www.javiercd.es/tags/debian/index.xml" rel="self" type="application/rss+xml"/><item><title>Comparativa entre OpenVPN y Wireguard</title><link>https://www.javiercd.es/posts/vpn/comparativa_ovpn_wire/comparativa_ovpn_wire/</link><pubDate>Thu, 28 Mar 2024 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/posts/vpn/comparativa_ovpn_wire/comparativa_ovpn_wire/</guid><description>El objetivo de este post es comparar los distintos software de VPNs mas utilizados viendo cual es mas rápido , para ello nos apoyaremos en test de velocidad utilizando iperf3 .
[!NOTE]
La comparativa parte de los post de esta sección en los que montamos cada tipo de VPN .
Velocidad sin VPN Voy a comenzar comparando las velocidades de estos 2 sistemas , utilizando iperf3 . Para ello he quitado el router cisco ya que lo tenia configurado con interfaces FastEthernet y lo he cambiado por un router Linux con interfaces GigabitEthernet .</description></item><item><title>Implementación de un cortafuegos perimetral con Fortinet I</title><link>https://www.javiercd.es/posts/cortafuegos/fortinet_uno/fortinet_uno/</link><pubDate>Thu, 28 Mar 2024 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/posts/cortafuegos/fortinet_uno/fortinet_uno/</guid><description>Antes de comenzar la practica , el escenario que ves en la practica es lo mas parecido que puedo montar a la practica original . He utilizado la versión 7.0.9-1 de FortiGate , ya que las versiones superiores traen algunas restricciones . Puedes descargarte la imagen desde este link .
Puesta en marcha del cortafuegos Los dispositivos FortiGate vienen configurados de fabrica con la IP 192.168.1.99/24 , como estoy desde GNS3 no es necesario que me conecte a esta interfaz con un dispositivo y cambie la configuración .</description></item><item><title>Implementación de un cortafuegos perimetral con Fortinet II</title><link>https://www.javiercd.es/posts/cortafuegos/fortinet_dos/fortinet_dos/</link><pubDate>Thu, 28 Mar 2024 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/posts/cortafuegos/fortinet_dos/fortinet_dos/</guid><description>Ahora vamos a emular la práctica de cortafuegos II, pero en GNS3. Para ello, he transformado al cliente 1 en Odin, además he añadido a Thor y Loki como máquinas virtuales en lugar de contenedores en la red LAN. También he creado una nueva red llamada DMZ, en la cual estará la máquina Hela.
Dado que he transformado el escenario anterior en este nuevo, contamos con algunas reglas creadas anteriormente.</description></item><item><title>Implementación de un cortafuegos perimetral con Nftables I</title><link>https://www.javiercd.es/posts/cortafuegos/nftables_uno/cortafuegos_uno/</link><pubDate>Thu, 28 Mar 2024 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/posts/cortafuegos/nftables_uno/cortafuegos_uno/</guid><description>En este post sobre un escenario con maquinas Debian , aplicaremos reglas con Nftables para conrtrolar el trafico que entra y sale en nuestra red , intentando imitar un escenario.
[!NOTE]
Para desplegar el escenario para realizar estos ejercicios necesitaras desplegar el fichero .yaml que encontraras en el enlace del párrafo siguiente . Este se encargara de desplegar 2 maquinas una que hará de cortafuegos y otra que simulara un cliente que estará conectado a la primera maquina para simular una red local .</description></item><item><title>Implementación de un cortafuegos perimetral con Nftables II</title><link>https://www.javiercd.es/posts/cortafuegos/nftables_dos/cortafuegos_dos/</link><pubDate>Thu, 28 Mar 2024 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/posts/cortafuegos/nftables_dos/cortafuegos_dos/</guid><description>Sobre el escenario creado en el módulo de servicios con las máquinas Odin (Router), Hela (DMZ), Loki y Thor (LAN) y empleando nftables, configura un cortafuegos perimetral en la máquina Odin de forma que el escenario siga funcionando completamente teniendo en cuenta los siguientes puntos:
• Se valorará la creación de cadenas diferentes para cada flujo de tráfico (de LAN al exterior, de LAN a DMZ, etc…). • Política por defecto DROP para todas las cadenas.</description></item><item><title>Instalación de android en GNS3 con KVM</title><link>https://www.javiercd.es/posts/redes/android_gns3/android/</link><pubDate>Thu, 28 Mar 2024 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/posts/redes/android_gns3/android/</guid><description>Para descargarnos la imagen de android puedes hacerlo desde esta pagina &amp;ndash;&amp;gt; https://www.fosshub.com/Android-x86.html :
wget https://www.fosshub.com/Android-x86.html?dwl=android-x86_64-9.0-r2.iso Crea una maquina en KVM como si fuese un Debian , yo le he dado 2GB de RAM y 2 cores :
En nuestro caso podemos lanzar una instalación automática :
Cuando tengas la maquina instalada , apaga la maquina y vamos a importarla en gns3 . Para ello vamos a llevarnos el disco de KVM y vamos a importarlo en el directorio donde hayamos instalado las imágenes de GNS3 , luego haz propiedad del disco copiado a tu usuario .</description></item><item><title>VPN acceso remoto Wireguard</title><link>https://www.javiercd.es/posts/vpn/acceso_remoto_wireguard/acceso_remoto_wireguard/</link><pubDate>Thu, 28 Mar 2024 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/posts/vpn/acceso_remoto_wireguard/acceso_remoto_wireguard/</guid><description>En primer lugar configurare la maquina servidor1 como servidor VPN de acceso remoto y servidor2 como cliente VPN . Posteriormente configurare un cliente Windows y Android .
Lo primero que haremos sera instalarnos tanto en ambas maquinas el paquete Wireguard :
root@servidor1:~# sudo apt update &amp;amp;&amp;amp; sudo apt install wireguard debian@servidor2:~$ sudo apt update &amp;amp;&amp;amp; sudo apt install wireguard Vamos a generar los pares de claves que se utilizarán para cifrar la conexión.</description></item><item><title>VPN de acceso remoto con Ipsec StrongSwan</title><link>https://www.javiercd.es/posts/vpn/acceso_remoto_strongswang/strongswang/</link><pubDate>Thu, 28 Mar 2024 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/posts/vpn/acceso_remoto_strongswang/strongswang/</guid><description>StrongSwan es una implementación de VPN (Red Privada Virtual) basada en IPsec, de código abierto, multiplataforma, completa y ampliamente utilizada. Funciona en sistemas operativos como Linux, FreeBSD, OS X, Windows, Android e iOS. Principalmente, es un demonio de intercambio de claves que admite los protocolos de Intercambio de Claves de Internet (IKEv1 e IKEv2) para establecer asociaciones de seguridad (SA) entre dos pares.
[!NOTE]
Voy a partir del post de VPN acceso remoto con OpenVPN , asi que es posible que haga referencia a este durante este articulo .</description></item><item><title>VPN de acceso remoto con OpenVPN y certificados x509</title><link>https://www.javiercd.es/posts/vpn/acceso_remoto_openvpn/accesoremoto_openvpn/</link><pubDate>Thu, 28 Mar 2024 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/posts/vpn/acceso_remoto_openvpn/accesoremoto_openvpn/</guid><description>Uno de los dos equipos (el que actuará como servidor) estará conectado a dos redes Para la autenticación de los extremos se usarán obligatoriamente certificados digitales, que se generarán utilizando openssl y se almacenarán en el directorio /etc/openvpn, junto con los parámetros Diffie-Helman y el certificado de la propia Autoridad de Certificación. Se utilizarán direcciones de la red 10.99.99.0/24 para las direcciones virtuales de la VPN. La dirección 10.99.99.1 se asignará al servidor VPN.</description></item><item><title>VPN site to site con OpenVPN y certificados x509</title><link>https://www.javiercd.es/posts/vpn/site_to_site_openvpn/site_to_site_openvpn/</link><pubDate>Thu, 28 Mar 2024 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/posts/vpn/site_to_site_openvpn/site_to_site_openvpn/</guid><description>Montando el escenario Para realizar este ejercicio he montado el siguiente escenario en GNS3 :
Configuración del router cisco Vamos a darle a cada interfaz la configuración de red correspondiente :
# Interfaz que nos dará internet R1#configure terminal R1(config)#interface fastEthernet 0/0 R1(config-if)#ip add dhcp R1(config-if)#no shut R1(config-if)#exit # Interfaz red Servidor 1 R1(config)#interface fastEthernet 1/0 R1(config-if)#ip add 90.0.0.1 255.255.255.0 R1(config-if)#no shut R1(config-if)#exit # Interfaz red Servidor 2 R1(config)#interface fastEthernet 1/1 R1(config-if)#ip add 100.</description></item><item><title>VPN site to site Wireguard</title><link>https://www.javiercd.es/posts/vpn/site_to_site_wireguard/site_to_site_wireguard/</link><pubDate>Thu, 28 Mar 2024 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/posts/vpn/site_to_site_wireguard/site_to_site_wireguard/</guid><description>[!NOTE]
Voy a partir del post de VPN acceso remoto con Wireguard , asi que es posible que haga referencia a este durante este articulo .
Generación de claves Lo primero que haremos sera instalarnos tanto en ambas maquinas el paquete Wireguard :
root@servidor1:~# sudo apt update &amp;amp;&amp;amp; sudo apt install wireguard debian@servidor2:~$ sudo apt update &amp;amp;&amp;amp; sudo apt install wireguard Vamos a generar los pares de claves que se utilizarán para cifrar la conexión.</description></item><item><title>Instalación pila LAMP en debian 12</title><link>https://www.javiercd.es/posts/iaw/lamp/lamp/</link><pubDate>Sat, 28 Oct 2023 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/posts/iaw/lamp/lamp/</guid><description>Instalación pila LAMP en Debian 12 Si estás utilizando Debian 12, sigue los pasos a continuación para instalar un servidor web LAMP completo en Debian GNU/Linux 12 &amp;ldquo;Bookworm&amp;rdquo; (Stable). Ten en cuenta que Debian 12 incluye PHP 8.2 en sus repositorios, lo que puede ser diferente de versiones anteriores de Debian.
Instalación del servidor web Lo primero en un servidor LAMP es la &amp;ldquo;A&amp;rdquo; de Apache. Para instalar Apache, ejecuta los siguientes comandos:</description></item><item><title>Instalación pila LEMP en debian 12 con PHP-8</title><link>https://www.javiercd.es/posts/iaw/lemp/lemp/</link><pubDate>Sat, 28 Oct 2023 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/posts/iaw/lemp/lemp/</guid><description>Instalación pila LEMP en debian 12 con PHP-8 En esta guía, te explicare los pasos necesarios para instalar una pila LEMP (Linux, Nginx, MariaDB y PHP) en un servidor con Debian 12. La configuración incluirá PHP 8.2 como versión principal. La pila LEMP es esencial para alojar sitios web y aplicaciones web basadas en PHP, como WordPress u otras aplicaciones dinámicas. Sigue los pasos detallados a continuación para configurar tu servidor LEMP con PHP 8.</description></item><item><title>Instalación WordPress en Debian 12 con pila LAMP PHP-8</title><link>https://www.javiercd.es/posts/iaw/wordpress/instalacion_wordpress/</link><pubDate>Sat, 28 Oct 2023 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/posts/iaw/wordpress/instalacion_wordpress/</guid><description>Instalación WordPress en Debian 12 con pila LAMP PHP-8 WordPress es un sistema de gestión de contenidos (CMS, por sus siglas en inglés) de código abierto muy popular que se utiliza para crear y administrar sitios web y blogs. Fue lanzado por primera vez en 2003 y desde entonces ha ganado una amplia base de usuarios y una comunidad activa de desarrolladores y diseñadores.
Preparación Antes de empezar con la instalación de WordPress vamos a dejar claro en una lista cual es el ecosistema de nuestro servidor para que todo funcione correctamente:</description></item><item><title>Instalación WordPress en Debian 12 con pila LEMP PHP-8</title><link>https://www.javiercd.es/posts/iaw/wordpress_lemp/instalacion_wordpress_lemp/</link><pubDate>Sat, 28 Oct 2023 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/posts/iaw/wordpress_lemp/instalacion_wordpress_lemp/</guid><description>Instalación WordPress en Debian 12 con pila LEMP PHP-8 WordPress es un sistema de gestión de contenidos (CMS, por sus siglas en inglés) de código abierto muy popular que se utiliza para crear y administrar sitios web y blogs. Fue lanzado por primera vez en 2003 y desde entonces ha ganado una amplia base de usuarios y una comunidad activa de desarrolladores y diseñadores.
Requisitos previos Servidor con Linux: Debes disponer de un servidor que ejecute Linux , la guía esta pensada para Debian 12 .</description></item></channel></rss>