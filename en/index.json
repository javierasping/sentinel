[{"categories":null,"contents":"In this guide, you will learn how to configure a slave DNS server using BIND9 on Debian. This server will sync with the master server (dns1.javiercruces.org) and distribute the name resolution load in your local network. You will also be guided to verify that the zone transfer works correctly.\nIn this case, the slave server is located in the 192.168.10.0/24 network, with the IP 192.168.10.200.\n1. Initial Setup of the Slave Server Hostname First, assign the correct hostname. Edit the /etc/hostname file:\ndns2 Next, configure the /etc/hosts file to associate the fully qualified domain name with the local IP:\n127.0.1.1 dns2.javiercruces.org dns2 Verify that the FQDN resolves correctly using hostname -f. You should get the following output:\ndebian@dns2:~$ hostname -f dns2.javiercruces.org 2. Installing BIND9 Install the BIND9 package as we did on the master server:\nsudo apt update \u0026amp;\u0026amp; sudo apt install bind9 bind9utils bind9-doc rsync -y 3. Basic Configuration Edit named.conf.options On the slave server, edit the /etc/bind/named.conf.options file to allow queries from internal networks:\noptions { directory \u0026#34;/var/cache/bind\u0026#34;; allow-query { 127.0.0.1; 192.168.10.0/24; }; recursion yes; dnssec-validation no; forwarders { 1.1.1.1; 8.8.8.8; }; }; 4. Configuring Slave Zones Edit the /etc/bind/named.conf.local file to define the slave zones. These should match the zones configured on the master server:\nzone \u0026#34;javiercruces.org\u0026#34; { type slave; masters { 192.168.10.1; }; file \u0026#34;/var/cache/bind/slaves/db.javiercruces.org\u0026#34;; }; zone \u0026#34;10.168.192.in-addr.arpa\u0026#34; { type slave; masters { 192.168.10.1; }; file \u0026#34;/var/cache/bind/slaves/db.192.168.10\u0026#34;; }; Create the directory to store the slave files if it does not exist:\nsudo mkdir -p /var/cache/bind/slaves sudo chown bind:bind /var/cache/bind/slaves 5. Restarting the Service Once everything is configured, restart the BIND9 service:\nsudo systemctl restart bind9 Check for errors in the event log:\nsudo journalctl -xeu bind9 You can also check if the zones were transferred correctly by running:\nls -l /var/cache/bind/slaves 6. Updating the Master Server For the slave server to receive the zones correctly, it needs to be authorized by the master server (dns1).\nEdit the /etc/bind/named.conf.local file on the master server and add the allow-transfer option with the slave\u0026rsquo;s IP:\nzone \u0026#34;javiercruces.org\u0026#34; { type master; file \u0026#34;/var/cache/bind/db.javiercruces.org\u0026#34;; allow-transfer { 192.168.10.200; }; }; zone \u0026#34;10.168.192.in-addr.arpa\u0026#34; { type master; file \u0026#34;/var/cache/bind/db.192.168.10\u0026#34;; allow-transfer { 192.168.10.200; }; }; Additionally, we will update the DNS records to add the new server. You need to add an A record and an NS record. Here\u0026rsquo;s the complete file:\ndebian@dns1:~$ sudo cat /var/cache/bind/db.javiercruces.org $TTL 86400 @ IN SOA dns1.javiercruces.org. root.javiercruces.org. ( 1 ; Serial 604800 ; Refresh 86400 ; Retry 2419200 ; Expire 86400 ) ; Negative Cache TTL ; @ IN NS dns1.javiercruces.org. @ IN NS dns2.javiercruces.org. @ IN MX 10 correo.javiercruces.org. $ORIGIN javiercruces.org. dns1 IN A 192.168.10.1 dns2 IN A 192.168.10.200 correo IN A 192.168.10.2 thor IN A 192.168.10.3 hela IN A 192.168.10.4 www IN CNAME thor informatica IN CNAME thor ftp IN CNAME hela We must also update the reverse zone:\n$TTL 86400 @ IN SOA dns1.javiercruces.org. root.javiercruces.org. ( 1 ; Serial 604800 ; Refresh 86400 ; Retry 2419200 ; Expire 86400 ) ; Negative Cache TTL ; @ IN NS dns1.javiercruces.org. $ORIGIN 10.168.192.in-addr.arpa. 1 IN PTR dns1.javiercruces.org. 2 IN PTR correo.javiercruces.org. 3 IN PTR thor.javiercruces.org. 4 IN PTR hela.javiercruces.org. 200 IN PTR dns2.javiercruces.org. After saving the changes, reload the BIND configuration:\nsudo rndc reload Or restart the service:\nsudo systemctl restart bind9 With this, the master server is authorized to send zones to the slave when necessary.\n7. Verifications Every time you restart the service on dns1, it will send changes to dns2. To verify that the zone transfer is working correctly, run the following command on dns2 to view logs in real-time:\ndebian@dns2:~$ sudo journalctl -u named -f Then, add a record on the master server:\nsentinel IN A 192.168.10.25 You can force the zone transfer with:\ndebian@dns2:~$ sudo rndc sync And the logs of a successful transfer will look like this:\ndebian@dns2:~$ sudo journalctl -u named -f May 10 23:11:08 dns2 named[936]: received control channel command \u0026#39;sync\u0026#39; May 10 23:11:08 dns2 named[936]: dumping all zones: success Finally, perform a query to both servers to verify that both return the same result:\ndebian@cliente1:~$ dig @192.168.10.1 sentinel.javiercruces.org ; \u0026lt;\u0026lt;\u0026gt;\u0026gt; DiG 9.18.33-1~deb12u2-Debian \u0026lt;\u0026lt;\u0026gt;\u0026gt; @192.168.10.1 sentinel.javiercruces.org ; (1 server found) ;; global options: +cmd ;; Got answer: ;; -\u0026gt;\u0026gt;HEADER\u0026lt;\u0026lt;- opcode: QUERY, status: NOERROR, id: 31484 ;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1 ;; OPT PSEUDOSECTION: ; EDNS: version: 0, flags:; udp: 1232 ; COOKIE: 067375f875fc084c01000000681fdf328945678dcc84fea2 (good) ;; QUESTION SECTION: ;sentinel.javiercruces.org.\tIN\tA ;; ANSWER SECTION: sentinel.javiercruces.org. 86400 IN\tA\t192.168.10.25 ;; Query time: 0 msec ;; SERVER: 192.168.10.1#53(192.168.10.1) (UDP) ;; WHEN: Sat May 10 23:20:18 UTC 2025 ;; MSG SIZE rcvd: 98 debian@cliente1:~$ dig @192.168.10.200 sentinel.javiercruces.org ; \u0026lt;\u0026lt;\u0026gt;\u0026gt; DiG 9.18.33-1~deb12u2-Debian \u0026lt;\u0026lt;\u0026gt;\u0026gt; @192.168.10.200 sentinel.javiercruces.org ; (1 server found) ;; global options: +cmd ;; Got answer: ;; -\u0026gt;\u0026gt;HEADER\u0026lt;\u0026lt;- opcode: QUERY, status: NXDOMAIN, id: 29032 ;; flags: qr aa rd ra; QUERY: 1, ANSWER: 0, AUTHORITY: 1, ADDITIONAL: 1 ;; OPT PSEUDOSECTION: ; EDNS: version: 0, flags:; udp: 1232 ; COOKIE: 4fd30029eb8c1f3d01000000681fdf34b473e093120ca15c (good) ;; QUESTION SECTION: ;sentinel.javiercruces.org.\tIN\tA ;; AUTHORITY SECTION: javiercruces.org.\t86400\tIN\tSOA\tdns1.javiercruces.org. root.javiercruces.org. 1 604800 8 6400 2419200 86400 ;; Query time: 0 msec ;; SERVER: 192.168.10.200#53(192.168.10.200) (UDP) ;; WHEN: Sat May 10 23:20:20 UTC 2025 ;; MSG SIZE rcvd: 128 ","date":"May 10, 2025","hero":"/images/servicios/dns/dns_esclavo.png","permalink":"https://www.javiercd.es/en/posts/servicios/dns/bind9/dns_esclavo/dns_esclavo/","summary":"\u003cp\u003eIn this guide, you will learn how to configure a slave DNS server using BIND9 on Debian. This server will sync with the master server (\u003ccode\u003edns1.javiercruces.org\u003c/code\u003e) and distribute the name resolution load in your local network. You will also be guided to verify that the zone transfer works correctly.\u003c/p\u003e\n\u003cp\u003eIn this case, the slave server is located in the 192.168.10.0/24 network, with the IP 192.168.10.200.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"1-initial-setup-of-the-slave-server\"\u003e1. Initial Setup of the Slave Server\u003c/h2\u003e\n\u003ch3 id=\"hostname\"\u003eHostname\u003c/h3\u003e\n\u003cp\u003eFirst, assign the correct hostname. Edit the \u003ccode\u003e/etc/hostname\u003c/code\u003e file:\u003c/p\u003e","tags":["DNS","BIND9","SMR","ASIR"],"title":"Configuring a Slave DNS Server with BIND9"},{"categories":null,"contents":" In this guide, you will learn how to install and configure a DNS server on Linux using BIND9. You will set up forward and reverse lookup zones for your domain, allow DNS queries from other machines on the network, and perform tests using tools like dig. You will also learn how to configure forwarders to efficiently resolve external domain names.\n1. Initial Preparation Create the DNS Machine Create a machine and set its name to dns1.yourname.org.\nEdit the /etc/hostname file:\njaviercruces@dns1:~$ sudo cat /etc/hostname dns1 Then add a static resolution for this name and the DNS server\u0026rsquo;s FQDN to the /etc/hosts file.\njaviercruces@dns1:~$ sudo nano /etc/hosts In my case, I will name the machine dns1.javiercruces.org\n127.0.1.1 dns1.javiercruces.org dns1 Verify the FQDN with:\njaviercruces@dns1:~$ hostname -f It should return something like this:\njaviercruces@dns1:~$ hostname -f dns1.javiercruces.org 2. Installing BIND9 Install the BIND9 DNS server:\ndebian@dns1:~$ sudo apt update \u0026amp;\u0026amp; sudo apt install bind9 bind9utils bind9-doc -y 3. Basic Configuration Disable IPv6 (optional) Edit /etc/default/named to prevent BIND9 from using IPv6:\nOPTIONS=\u0026#34;-4 -f -u bind\u0026#34; Allow queries from specific networks Edit /etc/bind/named.conf.options:\noptions { directory \u0026#34;/var/cache/bind\u0026#34;; allow-query { 127.0.0.1; 192.168.10.0/24; 192.168.20.0/24; }; recursion yes; dnssec-validation no; forwarders { 1.1.1.1; 8.8.8.8; }; }; Restart BIND9:\nsudo systemctl restart bind9 4. Configure Forward Lookup Zone Edit /etc/bind/named.conf.local:\nzone \u0026#34;javiercruces.org\u0026#34; { type master; file \u0026#34;/var/cache/bind/db.javiercruces.org\u0026#34;; }; Create the zone file:\nsudo cp /etc/bind/db.empty /var/cache/bind/db.javiercruces.org sudo nano /var/cache/bind/db.javiercruces.org Example content:\n$TTL 86400 @ IN SOA dns1.javiercruces.org. root.javiercruces.org. ( 1 ; Serial 604800 ; Refresh 86400 ; Retry 2419200 ; Expire 86400 ) ; Negative Cache TTL ; @ IN NS dns1.javiercruces.org. @ IN MX 10 correo.javiercruces.org. $ORIGIN javiercruces.org. dns1 IN A 192.168.10.1 correo IN A 192.168.10.2 thor IN A 192.168.10.3 hela IN A 192.168.10.4 www IN CNAME thor informatica IN CNAME thor ftp IN CNAME hela 5. Configure Reverse Lookup Zone Edit /etc/bind/named.conf.local:\nzone \u0026#34;10.168.192.in-addr.arpa\u0026#34; { type master; file \u0026#34;/var/cache/bind/db.192.168.10\u0026#34;; }; Ensure the corresponding line in /etc/bind/zones.rfc1918 is commented out:\n//zone \u0026#34;10.168.192.in-addr.arpa\u0026#34; { type master; file \u0026#34;/etc/bind/db.empty\u0026#34;; }; Create the zone file:\nsudo cp /etc/bind/db.empty /var/cache/bind/db.192.168.10 sudo nano /var/cache/bind/db.192.168.10 Example content:\n$TTL 86400 @ IN SOA dns1.javiercruces.org. root.javiercruces.org. ( 1 ; Serial 604800 ; Refresh 86400 ; Retry 2419200 ; Expire 86400 ) ; Negative Cache TTL ; @ IN NS dns1.javiercruces.org. $ORIGIN 10.168.192.in-addr.arpa. 1 IN PTR dns1.javiercruces.org. 2 IN PTR correo.javiercruces.org. 3 IN PTR thor.javiercruces.org. 4 IN PTR hela.javiercruces.org. 6. Testing With the configuration from the previous sections, your DNS server should now be operational.\nBasic queries with dig If you don’t specify the DNS server using the @ parameter, it will use the one configured in /etc/resolv.conf. Remember to update your DHCP settings to assign your local DNS server to your clients.\n# A record query for hela.javiercruces.org dig @192.168.10.1 hela.javiercruces.org # Reverse lookup (PTR) for 192.168.10.4 (corresponding to hela) dig @192.168.10.1 -x 192.168.10.4 # MX record query for javiercruces.org dig @192.168.10.1 javiercruces.org MX # NS record query for javiercruces.org dig @192.168.10.1 javiercruces.org NS Observe the query times and which records were used for name resolution. The second query should be faster due to cache use.\nIf you want to flush the DNS cache on your server, use the following command:\nsudo rndc flush ","date":"May 4, 2025","hero":"/images/servicios/dns/bind9_install.jpg","permalink":"https://www.javiercd.es/en/posts/servicios/dns/bind9/instalacion_basica/instalacion_configuracion/","summary":"\u003chr\u003e\n\u003cp\u003eIn this guide, you will learn how to install and configure a DNS server on Linux using BIND9. You will set up forward and reverse lookup zones for your domain, allow DNS queries from other machines on the network, and perform tests using tools like \u003ccode\u003edig\u003c/code\u003e. You will also learn how to configure forwarders to efficiently resolve external domain names.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"1-initial-preparation\"\u003e1. Initial Preparation\u003c/h2\u003e\n\u003ch3 id=\"create-the-dns-machine\"\u003eCreate the DNS Machine\u003c/h3\u003e\n\u003cp\u003eCreate a machine and set its name to \u003ccode\u003edns1.yourname.org\u003c/code\u003e.\u003c/p\u003e","tags":["DNS","BIND9","SMR","ASIR"],"title":"Installation and Configuration of BIND9 on Linux"},{"categories":null,"contents":"This guide is an introductory tutorial that shows how to install, configure, and use a basic instance of Prometheus using Docker Compose. Additionally, a Linux machine (in this case Debian 12) will be configured to expose its system metrics, which will be collected by Prometheus using Node Exporter.\nPrerequisites Docker and Docker Compose installed A Linux machine with administrator privileges Creating files Creating the docker-compose All the files used in this post can be found in my github.\nThe first thing we will do is create our docker-compose file.\nHere we highlight two aspects:\nPrometheus works on port 9090; in my case, I will keep it and not change it. The configuration file added to the container makes it easier to modify the configuration. javiercruces@HPOMEN15:~/learn_observability/exercise1$ cat docker-compose.yaml version: \u0026#39;3.8\u0026#39; services: prometheus: image: prom/prometheus:latest container_name: prometheus ports: - \u0026#34;9090:9090\u0026#34; volumes: - ./prometheus.yml:/etc/prometheus/prometheus.yml Creating the prometheus.yml file The prometheus.yml file is the main Prometheus configuration file. In it, we define global parameters and the targets from which Prometheus will collect metrics. Labels and scrape intervals can also be customized.\nIn this example from Prometheus\u0026rsquo; getting started page, we add our Debian 12 machine. Since Prometheus runs in Docker, I added the network\u0026rsquo;s gateway IP, which corresponds to my physical Debian 12 machine.\nFor more details on all available options, see the official Prometheus documentation.\nglobal: scrape_interval: 15s external_labels: monitor: \u0026#39;javiercd-metrics\u0026#39; scrape_configs: - job_name: \u0026#39;prometheus\u0026#39; scrape_interval: 5s static_configs: - targets: [\u0026#39;localhost:9090\u0026#39;] - job_name: \u0026#39;node-exporter-debian12\u0026#39; scrape_interval: 5s static_configs: - targets: [\u0026#39;172.17.0.1:9100\u0026#39;] Node Exporter Configuration on Debian 12 To allow Prometheus to collect OS metrics, we’ll install Node Exporter, a service that exposes system metrics for Prometheus to scrape.\nPackage Installation Run the following command to install prometheus-node-exporter from the Debian repositories:\njaviercruces@HPOMEN15:~/learn_observability/exercise1$ sudo apt install prometheus-node-exporter Service Verification Once installed, the daemon will run automatically. You can use the following command to confirm:\njaviercruces@HPOMEN15:~/learn_observability/exercise1$ sudo systemctl is-enabled prometheus-node-exporter enabled You can also get more information with this command:\nExpected output (summary):\njaviercruces@HPOMEN15:~/learn_observability/exercise1$ sudo systemctl status prometheus-node-exporter ● prometheus-node-exporter.service - Prometheus exporter for machine metrics Loaded: loaded (/lib/systemd/system/prometheus-node-exporter.service; enabled; preset: enabled) Active: active (running) since Sat 2025-05-17 01:59:00 CEST; 1min 10s ago Docs: https://github.com/prometheus/node_exporter Main PID: 8488 (prometheus-node) Tasks: 6 (limit: 18302) Memory: 3.7M CPU: 6ms CGroup: /system.slice/prometheus-node-exporter.service └─8488 /usr/bin/prometheus-node-exporter ... Note in the last lines that it is listening on port 9100. Additional info:\nSystemd unit file path: /lib/systemd/system/prometheus-node-exporter.service Node exporter config path: /etc/default/prometheus-node-exporter Bringing Up the Stack Once the Prometheus configuration file is ready and Node Exporter is running, let\u0026rsquo;s bring up Prometheus:\njaviercruces@HPOMEN15:~/learn_observability/exercise1$ docker compose up -d Once up, open your browser and go to the port Prometheus is exposed on (9090 in my case):\nCheck if Prometheus is receiving metrics from Debian 12 at http://localhost:9090/targets. If everything is running, metrics should be visible:\nLastly, let’s query a couple of metrics:\nReferences Getting started Prometheus Prometheus configuration DockerHub Prometheus Node-exporter ","date":"April 17, 2025","hero":"/images/observabilidad/metricas/prometheus/prometheus_docker_compose.png","permalink":"https://www.javiercd.es/en/posts/observabilidad/metricas/prometheus/instalacion_basica_docker_compose/prometheus_docker_compose_debian12/","summary":"\u003cp\u003eThis guide is an introductory tutorial that shows how to install, configure, and use a basic instance of Prometheus using Docker Compose. Additionally, a Linux machine (in this case Debian 12) will be configured to expose its system metrics, which will be collected by Prometheus using Node Exporter.\u003c/p\u003e\n\u003ch2 id=\"prerequisites\"\u003ePrerequisites\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDocker and Docker Compose installed\u003c/li\u003e\n\u003cli\u003eA Linux machine with administrator privileges\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"creating-files\"\u003eCreating files\u003c/h2\u003e\n\u003ch3 id=\"creating-the-docker-compose\"\u003eCreating the docker-compose\u003c/h3\u003e\n\u003cp\u003eAll the files used in this post can be found in my \u003ca href=\"https://github.com/javierasping/learn_observability\" target=\"_blank\" rel=\"noopener\"\u003egithub\u003c/a\u003e.\u003c/p\u003e","tags":["Metrics","Prometheus","Observability"],"title":"Installing Prometheus with docker-compose and Node Exporter on Debian 12"},{"categories":null,"contents":"Complete guide to installing and managing Docker Compose on Linux systems.\nInstallation from Repository For Debian/Ubuntu-based Systems sudo apt-get update sudo apt-get install docker-compose-plugin For RHEL/CentOS-based Systems sudo yum check-update sudo yum install docker-compose-plugin For Fedora-based Systems sudo dnf update sudo dnf install docker-compose-plugin Updating the Plugin Update on Ubuntu/Debian sudo apt-get update \u0026amp;\u0026amp; sudo apt-get upgrade docker-compose-plugin Update on RHEL/CentOS sudo yum update docker-compose-plugin Manual Installation Direct Download of the Binary DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker} mkdir -p $DOCKER_CONFIG/cli-plugins curl -SL https://github.com/docker/compose/releases/download/v2.25.0/docker-compose-linux-$(uname -m) -o $DOCKER_CONFIG/cli-plugins/docker-compose chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose Global Installation (for all users) sudo curl -SL https://github.com/docker/compose/releases/download/v2.25.0/docker-compose-linux-$(uname -m) -o /usr/local/lib/docker/cli-plugins/docker-compose sudo chmod +x /usr/local/lib/docker/cli-plugins/docker-compose ","date":"March 9, 2025","hero":"/images/docker/instalar_docker_compose.png","permalink":"https://www.javiercd.es/en/posts/docker/instalar_docker_compose/instalar_docker_compose/","summary":"\u003cp\u003eComplete guide to installing and managing Docker Compose on Linux systems.\u003c/p\u003e\n\u003ch2 id=\"installation-from-repository\"\u003eInstallation from Repository\u003c/h2\u003e\n\u003ch3 id=\"for-debianubuntu-based-systems\"\u003eFor Debian/Ubuntu-based Systems\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo apt-get update\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo apt-get install docker-compose-plugin\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"for-rhelcentos-based-systems\"\u003eFor RHEL/CentOS-based Systems\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo yum check-update\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo yum install docker-compose-plugin\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"for-fedora-based-systems\"\u003eFor Fedora-based Systems\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo dnf update\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo dnf install docker-compose-plugin\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003ch2 id=\"updating-the-plugin\"\u003eUpdating the Plugin\u003c/h2\u003e\n\u003ch3 id=\"update-on-ubuntudebian\"\u003eUpdate on Ubuntu/Debian\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo apt-get update \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e sudo apt-get upgrade docker-compose-plugin\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"update-on-rhelcentos\"\u003eUpdate on RHEL/CentOS\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo yum update docker-compose-plugin\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003ch2 id=\"manual-installation\"\u003eManual Installation\u003c/h2\u003e\n\u003ch3 id=\"direct-download-of-the-binary\"\u003eDirect Download of the Binary\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eDOCKER_CONFIG\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003eDOCKER_CONFIG\u003cspan style=\"color:#66d9ef\"\u003e:-\u003c/span\u003e$HOME/.docker\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emkdir -p $DOCKER_CONFIG/cli-plugins\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl -SL https://github.com/docker/compose/releases/download/v2.25.0/docker-compose-linux-\u003cspan style=\"color:#66d9ef\"\u003e$(\u003c/span\u003euname -m\u003cspan style=\"color:#66d9ef\"\u003e)\u003c/span\u003e -o $DOCKER_CONFIG/cli-plugins/docker-compose\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003echmod +x $DOCKER_CONFIG/cli-plugins/docker-compose\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"global-installation-for-all-users\"\u003eGlobal Installation (for all users)\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo curl -SL https://github.com/docker/compose/releases/download/v2.25.0/docker-compose-linux-\u003cspan style=\"color:#66d9ef\"\u003e$(\u003c/span\u003euname -m\u003cspan style=\"color:#66d9ef\"\u003e)\u003c/span\u003e -o /usr/local/lib/docker/cli-plugins/docker-compose\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo chmod +x /usr/local/lib/docker/cli-plugins/docker-compose\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e","tags":["Docker","Kubernetes","Containers"],"title":"Installing Docker Compose on Ubuntu 24"},{"categories":null,"contents":"To start using Docker Engine on Ubuntu, make sure you meet the prerequisites and follow the installation steps.\nPrerequisites Operating System Requirements To install Docker Engine, you need the 64-bit version of one of these Ubuntu releases:\nUbuntu Oracular 24.10 Ubuntu Noble 24.04 (LTS) Ubuntu Jammy 22.04 (LTS) Ubuntu Focal 20.04 (LTS) Docker Engine for Ubuntu is compatible with x86_64 (or amd64), armhf, arm64, s390x, and ppc64le (ppc64el) architectures.\nNote: Installation on Ubuntu-derived distributions, such as Linux Mint, is not officially supported (although it may work).\nUninstall Older Versions Before installing Docker Engine, you should uninstall any conflicting packages.\nYour Linux distribution may provide unofficial Docker packages that could conflict with the official packages provided by Docker. You need to uninstall these packages before installing the official version of Docker Engine.\nThe unofficial packages to uninstall are:\ndocker.io docker-compose docker-compose-v2 docker-doc podman-docker Additionally, Docker Engine depends on containerd and runc. Docker Engine packages these dependencies into a single package: containerd.io. If you have previously installed containerd or runc, uninstall them to avoid conflicts with the versions included in Docker Engine.\nRun the following command to uninstall all conflicting packages:\nfor pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done apt-get may report that you have none of these packages installed.\nImages, containers, volumes, and networks stored in /var/lib/docker/ are not automatically removed when you uninstall Docker. If you want to start with a clean installation and remove existing data, refer to the uninstall section for Docker Engine.\nInstallation Methods You can install Docker Engine in various ways, depending on your needs:\nDocker Engine is included with Docker Desktop for Linux. This is the easiest and fastest way to get started. Set up and install Docker Engine from the Docker apt repository. Install it manually and manage updates manually. Use a convenience script. Only recommended for testing and development environments. Install Using the Apt Repository Before installing Docker Engine for the first time on a new host machine, you need to set up the Docker apt repository. After this, you will be able to install and update Docker from the repository.\nSet up the Docker apt repository:\nAdd the official Docker GPG key:\nsudo apt-get update sudo apt-get install ca-certificates curl sudo install -m 0755 -d /etc/apt/keyrings sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc sudo chmod a+r /etc/apt/keyrings/docker.asc Add the repository to the Apt sources:\necho \u0026#34;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release \u0026amp;\u0026amp; echo \u0026#34;${UBUNTU_CODENAME:-$VERSION_CODENAME}\u0026#34;) stable\u0026#34; | sudo tee /etc/apt/sources.list.d/docker.list \u0026gt; /dev/null sudo apt-get update Install Docker packages:\nsudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin Verify that the installation was successful by running the hello-world image:\nsudo docker run hello-world This command downloads a test image and runs it in a container. When the container runs, it prints a confirmation message and exits.\nYou have now correctly installed and started Docker Engine.\nTip:\nIf you encounter errors trying to run without root, make sure to allow non-privileged users to run Docker commands. See the following steps for installation on Linux to allow this.\nUpdate Docker Engine To update Docker Engine, follow step 2 of the installation instructions, choosing the new version you want to install.\nInstall from a Package If you are unable to use the Docker apt repository to install Docker Engine, you can download the .deb file for your version and install it manually. You will need to download a new file each time you wish to update Docker Engine.\nGo to https://download.docker.com/linux/ubuntu/dists/.\nSelect your version of Ubuntu from the list, then go to pool/stable/ and select the applicable architecture (amd64, armhf, arm64, or s390x).\nDownload the following .deb files:\ncontainerd.io_\u0026lt;version\u0026gt;_\u0026lt;arch\u0026gt;.deb docker-ce_\u0026lt;version\u0026gt;_\u0026lt;arch\u0026gt;.deb docker-ce-cli_\u0026lt;version\u0026gt;_\u0026lt;arch\u0026gt;.deb docker-buildx-plugin_\u0026lt;version\u0026gt;_\u0026lt;arch\u0026gt;.deb docker-compose-plugin_\u0026lt;version\u0026gt;_\u0026lt;arch\u0026gt;.deb Install the .deb packages:\nsudo dpkg -i ./containerd.io_\u0026lt;version\u0026gt;_\u0026lt;arch\u0026gt;.deb ./docker-ce_\u0026lt;version\u0026gt;_\u0026lt;arch\u0026gt;.deb ./docker-ce-cli_\u0026lt;version\u0026gt;_\u0026lt;arch\u0026gt;.deb ./docker-buildx-plugin_\u0026lt;version\u0026gt;_\u0026lt;arch\u0026gt;.deb ./docker-compose-plugin_\u0026lt;version\u0026gt;_\u0026lt;arch\u0026gt;.deb The Docker daemon will automatically start.\nVerify that the installation was successful by running the hello-world image:\nsudo service docker start sudo docker run hello-world You have now correctly installed and started Docker Engine.\nInstall Using the Convenience Script Docker provides a convenience script at https://get.docker.com/ to install Docker in non-interactive fashion in development environments. This script is not recommended for production environments, but it is useful for creating a provisioning script tailored to your needs.\ncurl -fsSL https://get.docker.com -o get-docker.sh sudo sh ./get-docker.sh Uninstall Docker Engine To uninstall Docker Engine, run the following command:\nsudo apt-get purge docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin docker-ce-rootless-extras Images, containers, volumes, or custom configuration files are not automatically deleted. To remove all Docker elements, run:\nsudo rm -rf /var/lib/docker sudo rm -rf /var/lib/containerd Remove the sources list and keys:\nsudo rm /etc/apt/sources.list.d/docker.list sudo rm /etc/apt/keyrings/docker.asc You will need to remove any manually edited configuration files.\nNext Steps Managing Docker as a Non-root User The Docker daemon binds to a Unix socket, not to a TCP port. By default, the root user owns the Unix socket, and other users can only access it using sudo. The Docker daemon always runs as the root user.\nIf you do not want to prepend the docker command with sudo, you can create a Unix group called docker and add users to it. When the Docker daemon starts, it creates a Unix socket accessible to members of the docker group. On some Linux distributions, the system automatically creates this group when installing Docker Engine using a package manager. In this case, you do not need to create the group manually.\nWarning\nThe docker group grants root-level privileges to the user. For more details on how this affects security on your system, see Docker Daemon Attack Surface.\nNote\nTo run Docker without root privileges, see Running the Docker daemon as a non-root user (Rootless mode).\nCreate the docker group and add your user 1. Create the docker group: sudo groupadd docker 2. Add your user to the docker group: sudo usermod -aG docker $USER 3. Log out and log back in for your group membership to be reevaluated. If you are running Linux on a virtual machine, you may need to restart the virtual machine for the changes to take effect.\nYou can also run the following command to activate the changes in groups:\nnewgrp docker 4. Verify that you can run Docker commands without sudo: docker run hello-world This command downloads a test image and runs it in a container. When the container runs, it prints a confirmation message and exits.\nIf you initially ran Docker CLI commands using sudo before adding your user to the docker group, you might see the following error:\nWARNING: Error loading config file: /home/user/.docker/config.json - stat /home/user/.docker/config.json: permission denied This error indicates that the permission settings for the ~/.docker/ directory are incorrect, due to having used the sudo command earlier.\nSolution To fix this issue, delete the ~/.docker/ directory (it will be recreated automatically, but any custom settings will be lost), or change the ownership and permissions using the following commands:\nsudo chown \u0026#34;$USER\u0026#34;:\u0026#34;$USER\u0026#34; /home/\u0026#34;$USER\u0026#34;/.docker -R sudo chmod g+rwx \u0026#34;$HOME/.docker\u0026#34; -R Configure Docker to Start Automatically with systemd Many modern Linux distributions use systemd to manage which services start when the system boots. On Debian and Ubuntu, the Docker service automatically starts on boot. To automatically start Docker and containerd on boot on other Linux distributions that use systemd, run the following commands:\nsudo systemctl enable docker.service sudo systemctl enable containerd.service To stop this behavior, use disable instead of enable:\nsudo systemctl disable docker.service sudo systemctl disable containerd.service You can use systemd unit files to configure the Docker service at startup, for example, to add an HTTP proxy, set a different directory or partition for Docker\u0026rsquo;s runtime files, or make other customizations. For an example, see Configure the daemon to use a proxy.\nConfigure the Default Logging Driver Docker provides logging drivers to collect and view log data from all containers running on a host. The default logging driver, json-file, writes log data to JSON-formatted files in the host\u0026rsquo;s filesystem. Over time, these log files can increase in size, potentially leading to disk resource exhaustion.\nTo avoid issues with excessive disk usage due to log data, consider one of the following options:\nConfigure the json-file logging driver to enable log rotation. Use an alternative logging driver such as the \u0026ldquo;local\u0026rdquo; logging driver, which performs log rotation by default. Use a logging driver that sends logs to a remote logging aggregator. ","date":"March 9, 2025","hero":"/images/docker/instalar_docker.png","permalink":"https://www.javiercd.es/en/posts/docker/instalar_docker_ubuntu24/instalacion_docker_ubuntu24/","summary":"\u003cp\u003eTo start using Docker Engine on Ubuntu, make sure you meet the prerequisites and follow the installation steps.\u003c/p\u003e\n\u003ch2 id=\"prerequisites\"\u003ePrerequisites\u003c/h2\u003e\n\u003ch3 id=\"operating-system-requirements\"\u003eOperating System Requirements\u003c/h3\u003e\n\u003cp\u003eTo install Docker Engine, you need the 64-bit version of one of these Ubuntu releases:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUbuntu Oracular 24.10\u003c/li\u003e\n\u003cli\u003eUbuntu Noble 24.04 (LTS)\u003c/li\u003e\n\u003cli\u003eUbuntu Jammy 22.04 (LTS)\u003c/li\u003e\n\u003cli\u003eUbuntu Focal 20.04 (LTS)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eDocker Engine for Ubuntu is compatible with x86_64 (or amd64), armhf, arm64, s390x, and ppc64le (ppc64el) architectures.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e: Installation on Ubuntu-derived distributions, such as Linux Mint, is not officially supported (although it may work).\u003c/p\u003e","tags":["Docker","Kubernetes","Containers"],"title":"Installing Docker on Ubuntu 24"},{"categories":null,"contents":"In this article, I present an update of the process of installing GNS3 in Debian 12, based on the previous post for Debian 11. If you need more detailed details about the installation or configuration of GNS3, I recommend you review the previous version.\nGNS3 installation We update the repositories and install the available system updates.\njaviercruces@HPOMEN15:~$ sudo apt update -y \u0026amp;\u0026amp; sudo apt upgrade -y We install the necessary dependencies for GNS3, including Python, virtualization tools (KVM, QEMU, libvirt), additional libraries (PyQt5, dynamipes) and other utilities.\njaviercruces@HPOMEN15:~$ sudo apt install python3 python3-pip pipx python3-pyqt5 python3-pyqt5.qtwebsockets python3-pyqt5.qtsvg qemu-kvm qemu-utils libvirt-clients libvirt-daemon-system virtinst dynamips software-properties-common ca-certificates curl gnupg2 bridge-utils virt-manager libvirt-daemon -y We enable and start the libvirtd virtualization service and add to the \u0026ldquo;libvirt\u0026rdquo; group to give you permissions on the virtual machines and KVM networks.\njaviercruces@HPOMEN15:~$ sudo systemctl enable --now libvirtd \u0026amp;\u0026amp; sudo usermod -aG libvirt $(whoami) We install the main GNS3 applications: the server (gns3-server) and the graphic interface (gns3-gui) using pipx for an isolated Python environment in a comfortable way, without creating a virtual environment by hand.\njaviercruces@HPOMEN15:~$ pipx install gns3-server \u0026amp;\u0026amp; pipx install gns3-gui We ensure that the directory of pipx binaries is in the PATH environment variable so that the GNS3 commands are accessible globally from any terminal.\njaviercruces@HPOMEN15:~$ pipx ensurepath We inject the PyQt5 package into the gns3-gui environment, making sure that it has all the necessary dependencies.\njaviercruces@HPOMEN15:~$ pipx inject gns3-gui gns3-server PyQt5 We start the default KVM network and set it up so that when restart it will be automatically incited.\njaviercruces@HPOMEN15:~$ virsh --connect=qemu:///system net-start default La red default se ha iniciado javiercruces@HPOMEN15:~$ virsh --connect=qemu:///system net-autostart default La red default ha sido marcada para iniciarse automáticamente We restart the system to apply changes, such as group settings and PATH.\njaviercruces@HPOMEN15:~$ sudo reboot Now we can start gns3, but I recommend you set up the following sections you have in the post.\njaviercruces@HPOMEN15:~$ gns3 Ubridge installation We clone the ubridge repository from GitHub. Ubridge is a necessary tool for GNS3, which allows to manage traffic between virtualized network interfaces.\njaviercruces@HPOMEN15:~$ git clone https://github.com/GNS3/ubridge.git We move to the newly cloned project directory.\njaviercruces@HPOMEN15:~$ cd ubridge/ We compile the ubridge source code using \u0026ldquo;make.\u0026rdquo;\njaviercruces@HPOMEN15:~/ubridge$ make We install the ubridge binary in the system to make it available globally.\njaviercruces@HPOMEN15:~/ubridge$ sudo make install We assign execution permissions to the Ubridge binary file\njaviercruces@HPOMEN15:~/ubridge$ chmod +x ubridge We copy the binary file to \u0026ldquo;/usr/local/bin,\u0026rdquo; a standard command route available globally in the system.\njaviercruces@HPOMEN15:~/ubridge$ cp -p ubridge /usr/local/bin We set up special permissions for ubridge, allowing you access to network operations (cap _ net _ admin) and the sending of raw packages (cap _ net _ raw) necessary for its operation.\njaviercruces@HPOMEN15:~/ubridge$ sudo setcap cap_net_admin,cap_net_raw=ep /usr/local/bin/ubridge Vpcs installation We clone the VPCS repository from GitHub. VPCS (Virtual PC Simulator) is a light tool that simulates basic PCs for network testing in GNS3.\njaviercruces@HPOMEN15:~$ git clone https://github.com/GNS3/vpcs.git We access the directory where we cloned the repository and run the script that compiled the program source code.\njaviercruces@HPOMEN15:~$ cd vpcs/src javiercruces@HPOMEN15:~/vpcs/src$ sudo ./mk.sh Within the src folder we will have the executable of the vpcs machines, save this route as you will have to set it in gns3.\njaviercruces@HPOMEN15:~/vpcs/src$ ls | grep c vpcs javiercruces@HPOMEN15:~/vpcs/src$ pwd /home/javiercruces/vpcs/src In preferences you have to add the route where you have saved the compiled file vpcs, in my case the serious route /home/javiercruces/vpcs/src/vpcs\n","date":"September 8, 2024","hero":"/images/redes/instalacion_wireshark_gns3/gns3_deb12.png","permalink":"https://www.javiercd.es/en/posts/redes/instalar_gns3_debian12/instalar_gns3_debian12/","summary":"\u003cp\u003eIn this article, I present an update of the process of installing GNS3 in Debian 12, based on the previous post for Debian 11. If you need more detailed details about the installation or configuration of GNS3, I recommend you review the previous version.\u003c/p\u003e\n\u003ch2 id=\"gns3-installation\"\u003eGNS3 installation\u003c/h2\u003e\n\u003cp\u003eWe update the repositories and install the available system updates.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejaviercruces@HPOMEN15:~$ sudo apt update -y \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e sudo apt upgrade -y \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWe install the necessary dependencies for GNS3, including Python, virtualization tools (KVM, QEMU, libvirt), additional libraries (PyQt5, dynamipes) and other utilities.\u003c/p\u003e","tags":["Redes","Wireshark","GNS3"],"title":"Installation GNS3 in Debian 12"},{"categories":null,"contents":"If you have a Linux laptop with an NVIDIA GPU, you may have noticed that the video ports are not working properly after installing the graphics drivers. If this sounds familiar, don\u0026rsquo;t worry—I’ve got you covered.\nI\u0026rsquo;ve been investigating and found a tool that can save you several headaches. It\u0026rsquo;s called EnvyControl, a command-line utility (CLI) that allows you to easily choose which graphics card you want to use on your computer. This is especially useful if your laptop has a hybrid graphics configuration, such as Intel + NVIDIA or AMD + NVIDIA.\nIn my case, I set up the tool to always use the dedicated GPU, and voilà! The video ports started working smoothly.\nEnvyControl is free, open-source, and distributed under the MIT license. Please note that the software is provided as is, without guarantees. Additionally, any custom X.org settings could be overwritten when switching modes.\nIf you want to try it, here is the repository link: EnvyControl on GitHub. There, you will find specific installation tutorials for different distributions.\nNow, let\u0026rsquo;s go through the steps to install it on Debian.\nEnvyControl Installation Since it is no longer possible to install pip packages outside a virtual environment after the adoption of PEP 668, you should use the .deb package provided in the repository instead.\nFind the latest version at the following link: Releases - EnvyControl.\nOn that page, select and download the corresponding .deb package. You can also use the wget tool to download it from the terminal.\nInstall the downloaded package with the following command:\nsudo apt -y install ./python3-envycontrol_version.deb Using EnvyControl Once you have installed the tool, you can select the GPU you want to use on your computer. Keep in mind that any applied settings will not take effect until you reboot the system.\nTo use the integrated GPU (for power saving):\nsudo envycontrol -s integrated To enable hybrid mode (both GPUs):\nsudo envycontrol -s hybrid --rtd3 To use only the dedicated GPU (recommended if you need external video ports):\nFirst, switch to hybrid mode:\nsudo envycontrol -s hybrid Then, switch to dedicated GPU mode:\nsudo envycontrol -s nvidia --force-comp --coolbits 24 ⚠️ REMEMBER TO REBOOT FOR CHANGES TO APPLY.\nAdditional Notes I\u0026rsquo;ve provided the commands that worked for me, but EnvyControl has its own manual. You can also find more information in the official repository.\nAdditionally, there is a GNOME extension that allows you to switch GPUs through a graphical interface. While I personally always work with my laptop plugged in, you might want to switch to hybrid or integrated mode when on battery.\nConclusion By now, your NVIDIA drivers should be working properly, and you should be able to use your laptop\u0026rsquo;s video ports without issues.\nAs mentioned earlier, compatibility may vary depending on your hardware. In my case, video ports only work when I use the dedicated GPU mode. If you\u0026rsquo;re facing a similar situation, don’t hesitate to try this setup!\n","date":"September 1, 2024","hero":"/images/drivers/elegir_grafica.png","permalink":"https://www.javiercd.es/en/posts/drivers/nvidia_optimus/nvidia_optimus/","summary":"\u003cp\u003eIf you have a Linux laptop with an NVIDIA GPU, you may have noticed that the video ports are not working properly after installing the graphics drivers. If this sounds familiar, don\u0026rsquo;t worry—I’ve got you covered.\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;ve been investigating and found a tool that can save you several headaches. It\u0026rsquo;s called \u003cstrong\u003eEnvyControl\u003c/strong\u003e, a command-line utility (CLI) that allows you to easily choose which graphics card you want to use on your computer. This is especially useful if your laptop has a hybrid graphics configuration, such as Intel + NVIDIA or AMD + NVIDIA.\u003c/p\u003e","tags":["NVIDIA Drivers","Linux"],"title":"How to Choose Which GPU to Use on My Laptop with Linux"},{"categories":null,"contents":"MariaDB installation and configuration in Debian 12 To install MariaDB in Debian 12, follow these steps:\n1.Update the repositories and install the MariaDB package:\nFirst, update your system repositories and install MariaDB:\njaviercruces@jcruces:~$ sudo apt update javiercruces@jcruces:~$ sudo apt install mariadb-server 2.Enable and start the MariaDB service:\nOnce installed, set MariaDB to automatically start the start and then start the service:\njaviercruces@jcruces:~$ sudo systemctl start mariadb javiercruces@jcruces:~$ sudo systemctl enable mariadb 3.Configure MariaDB:\nRun the security script to make initial settings:\njaviercruces@jcruces:~$ sudo mysql_secure_installation He then answers the following questions from the assistant:\n# Enter the current password for root (press Enter if there is no password): Enter current password for root (enter for none): `Enter` # Set a new password for root? [Y/n]: Set root password? [Y/n]: `Y` # Remove anonymous users? [Y/n]: Remove anonymous users? [Y/n]: `Y` # Disallow root login remotely? [Y/n]: Disallow root login remotely? [Y/n]: `Y` # Remove the test database and access to it? [Y/n]: Remove test database and access to it? [Y/n]: `Y` # Reload privilege tables now? [Y/n]: Reload privilege tables now? [Y/n]: `Y` Create a new user and assign permissions : Connect to MariaDB as root:\njaviercruces@jcruces:~$ sudo mysql -u root Then create a new user and give him complete permissions on the database:\nCREATE USER \u0026#39;javiercruces\u0026#39;@\u0026#39;localhost\u0026#39; IDENTIFIED BY \u0026#39;tu_contraseña\u0026#39;; GRANT ALL PRIVILEGES ON *.* TO \u0026#39;javiercruces\u0026#39;@\u0026#39;localhost\u0026#39; WITH GRANT OPTION; FLUSH PRIVILEGES; EXIT; Connect using the new user: You can now connect to MariaDB with the newly created user:\njaviercruces@jcruces:~$ mysql -u javiercruces -p Create a new database, insert data and consult the table: Create a database, a table and add some data:\nCREATE DATABASE futbol; USE futbol; CREATE TABLE titulos_champions ( id INT AUTO_INCREMENT PRIMARY KEY, equipo VARCHAR(100) NOT NULL, campeonatos INT NOT NULL ); INSERT INTO titulos_champions (equipo, campeonatos) VALUES (\u0026#39;Real Madrid\u0026#39;, 15), (\u0026#39;Barcelona\u0026#39;, 5); He then makes a consultation to verify the data:\nSELECT * FROM titulos_champions; The expected exit should be:\n+----+--------------+--------------+ | id | equipo | campeonatos | +----+--------------+--------------+ | 1 | Real Madrid | 15 | | 2 | Barcelona | 5 | +----+--------------+--------------+ ","date":"September 1, 2024","hero":"/images/base_de_datos/instalar_mariadb/instalar_mariadb.png","permalink":"https://www.javiercd.es/en/posts/base_de_datos/instalar_mariadb/instalar_mariadb/","summary":"\u003ch2 id=\"mariadb-installation-and-configuration-in-debian-12\"\u003eMariaDB installation and configuration in Debian 12\u003c/h2\u003e\n\u003cp\u003eTo install MariaDB in Debian 12, follow these steps:\u003c/p\u003e\n\u003cp\u003e1.\u003cstrong\u003eUpdate the repositories and install the MariaDB package\u003c/strong\u003e:\u003c/p\u003e\n\u003cp\u003eFirst, update your system repositories and install MariaDB:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e javiercruces@jcruces:~$ sudo apt update\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e javiercruces@jcruces:~$ sudo apt install mariadb-server\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e2.\u003cstrong\u003eEnable and start the MariaDB service\u003c/strong\u003e:\u003c/p\u003e\n\u003cp\u003eOnce installed, set MariaDB to automatically start the start and then start the service:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e javiercruces@jcruces:~$ sudo systemctl start mariadb\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e javiercruces@jcruces:~$ sudo systemctl enable mariadb\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e3.\u003cstrong\u003eConfigure MariaDB\u003c/strong\u003e:\u003c/p\u003e","tags":["MariaDB","Debian"],"title":"Installation and Configuration of MariaDB in Debian 12"},{"categories":null,"contents":"The installation of NVIDIA drivers in the Linux universe has traditionally been a challenge, especially in distributions such as Debian, where free software policies often complicate the process.\nIn this post I will explain a simple way to install NVIDIA drivers using the official Debian repositories. In addition, at the end of the article, you will learn to install a key tool called Nvidia Optimus, which will provide you with the ability to select which graphics card you will use.\nThis tool is especially useful in laptops, as it is common for these devices to present problems when emitting video through ports, a situation that can be easily with this tool.\nIdentification of Our GPU Before we embark on installation and configuration, it is essential to know the hardware of our computer. To find out which graphics cards are available in our system, we will use the following command:\njaviercruces@HPOMEN15:~$ lspci -nn | egrep -i \u0026#34;3d|display|vga\u0026#34; 01:00.0 VGA compatible controller [0300]: NVIDIA Corporation GA106M [GeForce RTX 3060 Mobile / Max-Q] [10de:2520] (rev a1) 06:00.0 VGA compatible controller [0300]: Advanced Micro Devices, Inc. [AMD/ATI] Cezanne [Radeon Vega Series / Radeon Vega Mobile Series] [1002:1638] (rev c5) As you can see in the output of the previous command, my laptop has two graphics cards. Identifying the model is crucial, as if we choose a manual driver installation, we will need the specific for our GPU.\nHowever, in Debian we have a utility that simplifies this process, indicating which controller we should install. However, to access this utility, we need to modify our Debian repositories.\nTo make this modification, we will add the \u0026ldquo;non-free\u0026rdquo; section to our repositories using a text editor of our preference:\njaviercruces@HPOMEN15:~$ sudo nano /etc/apt/sources.list deb http://deb.debian.org/debian/ bookworm main contrib non-free non-free-firmware Remember that every time you modify this file you have to make an update for it to be updated.\njaviercruces@HPOMEN15:~$ sudo apt update -y With our properly updated repositories, we will proceed to install the NVIDIA detection script with the following command:\njaviercruces@HPOMEN15:~$ sudo apt install nvidia-detect We will now run the NVIDIA script; as you can see, it will provide us with detailed information about our NVIDIA graphics card, as well as the various compatible drivers and the recommended Debian package for installation:\njaviercruces@HPOMEN15:~$ nvidia-detect Detected NVIDIA GPUs: 01:00.0 VGA compatible controller [0300]: NVIDIA Corporation GA106M [GeForce RTX 3060 Mobile / Max-Q] [10de:2520] (rev a1) Checking card: NVIDIA Corporation GA106M [GeForce RTX 3060 Mobile / Max-Q] (rev a1) Your card is supported by all driver versions. Your card is also supported by the Tesla drivers series. Your card is also supported by the Tesla 470 drivers series. It is recommended to install the nvidia-driver package. Recommended driver installation Before installing the drivers, you must get the right kernel headers so that the NVIDIA controller can compile correctly.\nIn a typical 64-bit system that uses the default kernel, you just run:\njaviercruces@HPOMEN15:~$ sudo apt install linux-headers-amd64 For 32-bit systems with the no-PAE kernel, instead, you would make the following installation:\njaviercruces@HPOMEN15:~$ sudo apt install linux-headers-686 Once the driver\u0026rsquo;s dependencies are installed, we will install the same:\njaviercruces@HPOMEN15:~$ sudo apt install nvidia-driver -y During installation, you are likely to find a typically blue screen that informs you about a conflict with the \u0026ldquo;nouveau\u0026rdquo; driver, which is the driver installed automatically by Debian due to its free software features. Simply click \u0026ldquo;OK\u0026rdquo; on this screen and continue the installation process.\nAt the end of the installation, you will need to restart your equipment to load the NVIDIA module. After reboot, you can check if it has been properly loaded using the following command. Using the tilted bar (/), you can filter the output by writing the word \u0026ldquo;nvidia,\u0026rdquo; which will take you directly to the relevant information on your graphic card, allowing you to confirm that the NVIDIA module is loaded.\nYou have to check that on the line \u0026ldquo;Kernel driver in use,\u0026rdquo; have the nvidia module.\njaviercruces@HPOMEN15:~$ lspci -knn | less 01:00.0 VGA compatible controller [0300]: NVIDIA Corporation GA106M [GeForce RTX 3060 Mobile / Max-Q] [10de:2520] (rev a1) DeviceName: NVIDIA Graphics Device Subsystem: Hewlett-Packard Company GA106M [GeForce RTX 3060 Mobile / Max-Q] [103c:88d1] Kernel driver in use: nvidia Kernel modules: nouveau, nvidia_current_drm, nvidia_current You may not have noticed but now on your desktop you will have an app called nvidia-settings with which you can set your graph.\nIn addition if you want to see from the command line information of your GPU NVIDIA you have at your disposal the following command:\njaviercruces@HPOMEN15:~$ nvidia-smi Fri Dec 29 02:04:58 2023 +-----------------------------------------------------------------------------+ | NVIDIA-SMI 525.125.06 Driver Version: 525.125.06 CUDA Version: 12.0 | |-------------------------------+----------------------+----------------------+ | GPU Name Persistence-M| Bus-Id Disp.A | Volatile Uncorr. ECC | | Fan Temp Perf Pwr:Usage/Cap| Memory-Usage | GPU-Util Compute M. | | | | MIG M. | |===============================+======================+======================| | 0 NVIDIA GeForce ... On | 00000000:01:00.0 Off | N/A | | N/A 42C P5 10W / 80W | 296MiB / 6144MiB | 12% Default | | | | N/A | +-------------------------------+----------------------+----------------------+ +-----------------------------------------------------------------------------+ | Processes: | | GPU GI CI PID Type Process name GPU Memory | | ID ID Usage | |=============================================================================| | 0 N/A N/A 3246 G /usr/lib/xorg/Xorg 117MiB | | 0 N/A N/A 3442 G /usr/bin/gnome-shell 32MiB | | 0 N/A N/A 4807 G ...on=20231218-080113.411000 104MiB | | 0 N/A N/A 5802 G ...RendererForSitePerProcess 38MiB | +-----------------------------------------------------------------------------+ javiercruces@HPOMEN15:~$ Congratulations, Master of NVIDIA Drivers! You have unlocked an epic achievement in the realm of computer science. Not anyone is able to get here, I don\u0026rsquo;t want to disappoint you but have you checked that the HDMI and DisplayPort ports of your team work?\nAt this point, two possible paths are opened:\nIn the first stage, your ports work perfectly without requiring additional intervention. If this is your case, congratulations you see God has favorites.\nIf, on the contrary, like I\u0026rsquo;m not one of them, as the ports have just checked, they don\u0026rsquo;t emit video, on your monitor you\u0026rsquo;ll see that you have no signal even though on the debian you see the monitor detects you.\nIf this problem occurs you can find a post on this same page explaining a possible solution, for this we will make use of the nvidia optimus tool. I leave the link below https://www.javiercd.es/posts/drivers/nvidia_optimus/nvidia_optimus/\n","date":"September 1, 2024","hero":"/images/drivers/instalar_drivers_nvidia.png","permalink":"https://www.javiercd.es/en/posts/drivers/nvidia_driver/instalacion-controladores-nvidia-debian-12/","summary":"\u003cp\u003eThe installation of NVIDIA drivers in the Linux universe has traditionally been a challenge, especially in distributions such as Debian, where free software policies often complicate the process.\u003c/p\u003e\n\u003cp\u003eIn this post I will explain a simple way to install NVIDIA drivers using the official Debian repositories. In addition, at the end of the article, you will learn to install a key tool called Nvidia Optimus, which will provide you with the ability to select which graphics card you will use.\u003c/p\u003e","tags":["Controladores NVIDIA","Linux"],"title":"Installation of NVIDIA Controllers in Debian 12"},{"categories":null,"contents":"This post addresses how to configure and manage connections between different databases, both homogeneous and heterogeneous, to facilitate interoperability between various database systems. Throughout the article, different connection scenarios are explored, starting with configurations between databases of the same type, such as Oracle to Oracle or PostgreSQL to PostgreSQL, and then moving towards heterogeneous connections between different technologies, such as Oracle to MySQL, PostgreSQL to Oracle, and vice versa. It also covers the steps needed to configure links, create users, and modify key configuration files, allowing remote consultations.\nHomogeneous Connections Oracle to Oracle We will interconnect two Oracle databases, which we will call oracle1 and oracle2 to differentiate them throughout this practice.\nUser Creation in Oracle1 First, we will create a user in Oracle1 who has permissions to connect to the database and to create database links:\nTo verify that the user has been created correctly, disconnect from the current user and reconnect with the new user:\nUser Creation in Oracle2 Repeat the steps made in Oracle1 to create a user in Oracle2 with appropriate permissions to remotely connect and create database links:\nVerify the connection to the new user created:\nConfiguration of listener.ora and tnsnames.ora Files in ORACLE1 To ensure interconnection, we must configure the files listener.ora and tnsnames.ora. This will allow ORACLE1 to listen to the connections and recognize the location of ORACLE2.\nListener.ora Configuration Edit the listener.ora file so that ORACLE1 can listen to connections on the network:\nNote: Although it is recommended to allow connections only from specific IPs, in this test environment we have enabled general access. This file also defines the port used by Oracle.\nTnsnames.ora Configuration We will now set the file tnsnames.ora so that ORACLE1 knows where ORACLE2 is:\nIn this example, ORACLE2 is configured under IP 192.168.122.13 and listens on port 1521. It is also important to know the name of the remote service. If you don\u0026rsquo;t know it, you can run the following command on ORACLE2:\nConnectivity Verification To confirm that ORACLE1 can communicate with ORACLE2, we will use the tnsping tool with the configured alias:\nRemember! If you did not set the listener.ora on the remote server (ORACLE2), this test will fail.\nConfiguration of listener.ora and tnsnames.ora Files in ORACLE2 We will now repeat the same steps in ORACLE2 so that it can communicate with ORACLE1.\nListener.ora Configuration Edit the listener.ora file so that ORACLE2 listens to incoming connections:\nIn this case, we have configured ORACLE2 to listen on any IP, using port 1521, as in ORACLE1.\nTnsnames.ora Configuration Edit the tnsnames.ora file to define an alias that allows ORACLE2 to communicate with ORACLE1:\nConnectivity Verification Use the tnsping tool in ORACLE2 with the alias set for ORACLE1:\nIf the output is successful, it means that ORACLE2 can communicate with ORACLE1.\nRemember! If you did not set the listener.ora on the remote server (ORACLE1), this test will fail.\nCreation of the Link from ORACLE1 to ORACLE2 At this stage, we will establish a link from ORACLE1 to ORACLE2. We will use a user with link creation privileges, such as javiercruces1, which was created earlier.\nThe link will receive a name, in this case, ORACLE2_LINK. We will specify that we will use the remote user credentials javiercruces2 and the connection defined in the file tnsnames.ora for ORACLE2.\nLink Verification To verify, we will create the dept table in ORACLE2 and consult from ORACLE1:\nCreation of the Link from ORACLE2 to ORACLE1 We will now set the link in the opposite direction, from ORACLE2 to ORACLE1. We will follow the same procedure.\nWith the user javiercruces2, we will create a link called ORACLE1_LINK. This link will use the remote user credentials javiercruces1 and the connection defined in the tnsnames.ora file for ORACLE1:\nLink Verification We will conduct a simple consultation using the newly created link:\nSimultaneous Consultations between ORACLE1 and ORACLE2 Now, we will check that it is possible to consult using both databases simultaneously from ORACLE1:\nThis same consultation can also be made from ORACLE2:\nPostgreSQL to PostgreSQL To allow interconnection, it is essential to configure both machines to listen to requests. This is achieved by defining the IPs and ports in the configuration file located in /etc/postgresql/15/main/postgresql.conf:\nIn addition, it is necessary to set up the networks from which connections will be accepted. This is done in the file pg_hba.conf:\nAfter making these changes, we will restart the PostgreSQL service to apply them:\nAs in the previous section, we will use the Scott table schema, placing a table in each database for \u0026ldquo;remote\u0026rdquo; consultations.\nInterconnect PostgreSQL1 to PostgreSQL2 To interconnect the databases, we will use dblink, a module that allows for consultations and operations distributed between PostgreSQL databases. This is achieved by establishing direct connections between them.\nUser Creation and Database in PostgreSQL1 First, we create the users and database in PostgreSQL1:\nEnable dblink Extension We will activate the dblink extension in PostgreSQL1:\nCreation of the Connection to PostgreSQL2 We will use the dblink module to establish a connection to PostgreSQL2:\nConduct Consultations Using dblink Once the connection is created, we can conduct remote consultations from PostgreSQL1:\nNote: It is a bit tedious to define the fields for each remote consultation, which may make it difficult to use in more complex consultations.\nInterconnect PostgreSQL2 to PostgreSQL1 User Creation and Database in PostgreSQL2 We will create the users and database in PostgreSQL2 following a process similar to that in PostgreSQL1:\nEnable dblink Extension and Create Connection to PostgreSQL1 We will activate the dblink extension and configure the connection to PostgreSQL1:\nConduct Consultations Towards PostgreSQL1 Now, we can consult from PostgreSQL2 to PostgreSQL1:\nSimultaneous Consultations between PostgreSQL1 and PostgreSQL2 To simplify remote consultations between the two databases, we can create views. This avoids the need to manually define the type of each field in the consultations:\nThe same consultation can be made from PostgreSQL1 to PostgreSQL2:\nHeterogeneous Connections Oracle to MySQL ODBC Driver Installation for MySQL First, we download the ODBC driver for MySQL along with the necessary dependencies:\nWe access the official MySQL page to download the drivers and proceed to their installation:\nConfiguration of Heterogeneous Services in Oracle We access the hs/admin directory within our Oracle installation:\nWe edit the initMYSQL.ora file with the following content to configure Heterogeneous Services:\nODBC Configuration for MySQL We set ODBC for MySQL, making sure we include the right credentials to connect to the MySQL database:\nConfiguration of the Listener in Oracle We update the listener configuration to include localhost and the Oracle listening port:\nWe restart the Oracle listener service to apply the changes:\nODBC Driver Check We check that the ODBC driver is working properly by connecting to the MySQL database. We can also use the isql driver to check the connection:\nCreation of the Link between Oracle and MySQL We created the link in Oracle to connect to the MySQL database:\nConducting Consultations between Oracle and MySQL We can make a simple consultation to the MySQL database:\nIt is also possible to consult using both databases simultaneously. It is important to lock in double quotes the names of MySQL fields and tables to be interpreted correctly:\nMySQL to Oracle Oracle to PostgreSQL Note: A machine with Oracle Linux 8 and Oracle Database 23 was used for this section.\nPrevious Configuration in Oracle As an initial step, we created again a user and database in Oracle, assigning the appropriate permissions:\nDriver Installation for PostgreSQL We install the PostgreSQL driver using dnf. This command will also install the necessary libraries as dependencies:\nFile Configuration odbcinst.ini The /etc/odbcinst.ini file is used in Linux systems to configure ODBC drivers. We edit this file to register the PostgreSQL driver:\nFile Configuration odbc.ini The /etc/odbc.ini file contains specific settings for each connection to a database. Here are the details of the connection to the PostgreSQL database:\nConfiguration in Oracle to Use the Driver We configure Oracle so it can use the ODBC driver. This includes updating the files needed to set up the connection:\nConfiguration of the Listener in Oracle We configure the listener file to enable communication with the PostgreSQL database:\nFile Configuration tnsnames.ora We add an entry to the tnsnames.ora file to define the connection to PostgreSQL:\nReboot of the Listener We restart the listener service to apply the changes:\nConnection Test We check the connectivity using tnsping:\nIn addition, we test the connection using the ODBC driver from the terminal:\nCreation of the Link in Oracle We connect to Oracle and create the link to the PostgreSQL database. In the queries, the names of fields and tables should go between double quotes, and the values between single quotes:\nSimultaneous Consultations between Oracle and PostgreSQL We can conduct combined consultations between the two databases:\nPostgreSQL to Oracle Download and Install Necessary Packages From the official Oracle page, we will download the following required packages:\nSince the system used is Debian, it is necessary to convert the RPM-format packages to DEB using alien. The process will take about 5 minutes, and the packages will be installed automatically when using the -i parameter:\nOracle Connection Test Once the packages are installed, we check that it is possible to remotely connect to the Oracle database to ensure that the configuration is correct:\nDownload and Compile oracle_fdw The next step is to install oracle_fdw, an extension for PostgreSQL that allows you to connect to Oracle. We download the latest version from the official repository:\nRepository: oracle_fdw in GitHub We clone the repository and compile the source code:\nWithin the downloaded directory, we run make to compile:\nFinally, we install the extension with the make install command:\nPostgreSQL Configuration Creation of Extension: We connect to the PostgreSQL database where we want to create the link and set the extension oracle_fdw:\nCreation of the Schema and Foreign Server: We create a schema called oracle and set up a foreign server pointing to the Oracle database:\nUser Mapping: We create a mapping between the local PostgreSQL user (javiercruces1) and the remote Oracle user (javiercruces3). We also grant the necessary permissions on the schema and the foreign server:\nImportation of the Schema: With the local PostgreSQL user, we import the Oracle user\u0026rsquo;s table schema to the local foreign server:\nCombined Consultations Finally, we can conduct consultations involving data from both databases (PostgreSQL and Oracle). This allows us to work with information distributed in an integrated manner:\n","date":"September 1, 2024","hero":"/images/base_de_datos/interconexion_de_servidores/interconexion_de_servidores.png","permalink":"https://www.javiercd.es/en/posts/base_de_datos/interconexion_de_servidores/interconexion_servidores/","summary":"\u003cp\u003eThis post addresses how to configure and manage connections between different databases, both homogeneous and heterogeneous, to facilitate interoperability between various database systems. Throughout the article, different connection scenarios are explored, starting with configurations between databases of the same type, such as Oracle to Oracle or PostgreSQL to PostgreSQL, and then moving towards heterogeneous connections between different technologies, such as Oracle to MySQL, PostgreSQL to Oracle, and vice versa. It also covers the steps needed to configure links, create users, and modify key configuration files, allowing remote consultations.\u003c/p\u003e","tags":["Oracle","Mysql","PostgreSQL","Debian"],"title":"Interconnection of database servers"},{"categories":null,"contents":"Installing Oracle 19c on Debian 12 may seem complicated, but don\u0026rsquo;t worry, I\u0026rsquo;m here to guide you in every step. In this post, I will explain to you in a simple way how to prepare your system and make the installation of Oracle 19c in Debian 12.\nUpdate the repositories The first thing is to update the repositories of our virtual machine and in case we don\u0026rsquo;t have any packages we update it:\nInstall dependencies The following will be to install the Oracle units in our system:\nlibaio1 * *: Provides asynchronous access to E / S. Unixodbc * *: It is an ODBC controller for database connectivity. Bc * *: It\u0026rsquo;s an arbitrary precision calculator. Ksh * *: It\u0026rsquo;s the Korn shell for scripts. Gawk * *: It\u0026rsquo;s an improved version of Awk for text and data processing. Add oracle user We will create the dba group and create the oracle user:\nWe check that we can access the oracle user:\nNetwork configuration We have to have a static ip set up:\nWe also have to have an entry in the hosts file of our private address:\nDownload the Oracle website installation file Once we have checked that we can install it in our system or virtual machine we will download it from your official website.\nWe will quickly realize that Oracle does not support Debian as we will find the package in .rpm format this means that it is prepared to be installed in network-based distributions hat.\nFor us to use this package we will have to transform it to .deb for it there is a tool called alien that will convert the package to us so that we can use it.\nWe install the tool:\nNow using wget we\u0026rsquo;ll download the Oracle meta-package:\nOnce downloaded we will use the alien utility to transform us, this will take approximately a step to lighten the process I have transformed it into my physical machine:\nWe passed it to our virtual machine using scp.\nNow that we have our package transformed to .deb we install it using dpkg in our virtual machine\nWe\u0026rsquo;ll start the installation, it\u0026rsquo;ll take a while, so you have to be patient:\nOnce finished in our user\u0026rsquo;s bashrc we will add the oracle environment variables, ORACLE\\ _ SID will tell us at the end of the installation, the others will depend on the directory we have put in previous steps:\nError solution Error [FATAL] [DBT-50000] Unable to check available memory It returns an error, it tells us that you cannot check the available memory, this error can be solved by deactivating the check of configuration parameters for it in line 164 of the → / etc / init.d / oracledb\\ _ ORCLCDB-19c file\nWe will change it to the following (complete line 164):\n\\ * I highlight the content you should add, you can also replace the entire line.\nAnother mistake you can give us is that you can\u0026rsquo;t find netstat:\nIt is easily solved by installing net- tools.\n# ORA-65096: unvalid username or common role If you don\u0026rsquo;t let us create a user:\nWith this modification let us create users\nFirst steps with Oracle We will connect as administrators in the database:\nThe first thing we have to do is create a user, give him permissions we need and check that we can connect with the:\nAnd we give him the permits we consider to him:\nThen we try to connect with it:\nWith this we will have completed the basic installation of Oracle 19c on Debian 12. It is recommended that if you are using the database you be installed by a client like SQLplus or SQLdeveloped.\nSQLplus installation We download the basic SQLplus package for Linux, it\u0026rsquo;s a .zip:\nWe download the second SQLplus package:\nWe create the /opt/oracle directory:\nWe uncompress the zip files in the directory we just created:\nWe get into the directory and list the content:\nAnd then we export the SQLplus bookstore variable and run the changes:\nIf we want it to be maintained we will add it to the bashrc:\n","date":"September 1, 2024","hero":"/images/base_de_datos/instalar_oracle/instalacion_oracle.png","permalink":"https://www.javiercd.es/en/posts/base_de_datos/instalacion_oracle_19c_debian12/instalacion_oracle/","summary":"\u003cp\u003eInstalling Oracle 19c on Debian 12 may seem complicated, but don\u0026rsquo;t worry, I\u0026rsquo;m here to guide you in every step. In this post, I will explain to you in a simple way how to prepare your system and make the installation of Oracle 19c in Debian 12.\u003c/p\u003e\n\u003ch3 id=\"update-the-repositories\"\u003eUpdate the repositories\u003c/h3\u003e\n\u003cp\u003eThe first thing is to update the repositories of our virtual machine and in case we don\u0026rsquo;t have any packages we update it:\u003c/p\u003e","tags":["Oracle","Debian"],"title":"Oracle installation 19c under Debian 12"},{"categories":null,"contents":"In this post, I will guide you through the process of installing PostgreSQL in Debian 12, creating a user with basic permissions, and how to create and consult a database.\n#1. PostgreSQL installation\nTo install PostgreSQL in Debian 12, follow these steps:\nUpdate the repositories and install PostgreSQL * *: First, make sure your system is updated and install PostgreSQL:\n```bash sudo apt update sudo apt install postgresql ``` Verifies that the service is in operation * *: After installation, make sure that the PostgreSQL service is in operation:\n```bash sudo systemctl status postgresql ``` You should see a message that indicates the service is active (running).\n#2. Creation of a User and Allocation of Permissions\nAccess the user \u0026lsquo;postgres\u0026rsquo; * *: PostgreSQL creates a user called \u0026lsquo;postgres\u0026rsquo; during installation. Access this user to perform the configuration tasks:\n```bash sudo -u postgres psql ``` If you want you can change the user\u0026rsquo;s password to the database with the following command:\n```sql ALTER USER postgres WITH PASSWORD 'tu_nueva_contraseña'; ``` Create a new user * *: Within the \u0026lsquo;postgres\u0026rsquo; prompt, to create a new user uses the following command.\n```sql CREATE USER javiercruces WITH PASSWORD 'tu_contraseña'; ``` Create a new database * *: Then create a database that will be associated with your new user.\n```sql CREATE DATABASE mypgdatabase OWNER mypguser; ``` Create an administrator user * * If you want to create a user with all the privileges in a database, enter the following command:\n```sql GRANT ALL PRIVILEGES ON DATABASE nombre_base_de_datos TO nombre_usuario; ``` Get out of the console with \u0026lsquo;\\ q\u0026rsquo;:\n```sql \\q ``` #3. Connection test\nConnect to PostgreSQL with the new user * *: From the user \u0026lsquo;postgres\u0026rsquo;, or directly from your terminal, try to connect to PostgreSQL using the new user:\n```bash psql -U nombre_usuario -d nombre_base_de_datos ``` You will be asked for the user\u0026rsquo;s password. If you can access the database, the configuration was successful.\n#4. Creation and Consultation of a Table\nCreate a new table * *: Once inside the PostgreSQL console with the new user, create a new table. For example, for a table of football equipment:\n```sql CREATE TABLE equipos ( id SERIAL PRIMARY KEY, nombre VARCHAR(100) NOT NULL, titulos INT NOT NULL ); ``` Insert data in the table * *: Insert some test data into the created table:\n```sql INSERT INTO equipos (nombre, titulos) VALUES ('Real Madrid', 15), ('Barcelona', 5); ``` See the data in the table * *: Conducts a consultation to verify that the data have been correctly inserted:\n```sql SELECT * FROM equipos; ``` The expected exit should be:\n```plaintext id | nombre | titulos ----+--------------+--------- 1 | Real Madrid | 15 2 | Barcelona | 5 ``` With these steps, you have installed PostgreSQL, created a user and database, and performed basic tests to ensure that everything works properly. Now you have your PostgreSQL environment ready to use!\n","date":"September 1, 2024","hero":"/images/base_de_datos/instalar_postgre/instalacion_postgree.png","permalink":"https://www.javiercd.es/en/posts/base_de_datos/instalar_postgresql/instalar_postgresql/","summary":"\u003cp\u003eIn this post, I will guide you through the process of installing PostgreSQL in Debian 12, creating a user with basic permissions, and how to create and consult a database.\u003c/p\u003e\n\u003cp\u003e#1. PostgreSQL installation\u003c/p\u003e\n\u003cp\u003eTo install PostgreSQL in Debian 12, follow these steps:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cul\u003e\n\u003cli\u003eUpdate the repositories and install PostgreSQL * *:\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eFirst, make sure your system is updated and install PostgreSQL:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e```bash\nsudo apt update\nsudo apt install postgresql \n```\n\u003c/code\u003e\u003c/pre\u003e\n\u003col start=\"2\"\u003e\n\u003cli\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cul\u003e\n\u003cli\u003eVerifies that the service is in operation * *:\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eAfter installation, make sure that the PostgreSQL service is in operation:\u003c/p\u003e","tags":["PostgreSQL","Debian"],"title":"PostgreSQL installation in Debian 12"},{"categories":null,"contents":"To allow remote access to your MariaDB server, follow these steps:\nConfigure the MariaDB configuration file First, edit the MariaDB configuration file to allow connections from specific IP addresses. Open the file /etc/mysql/mariadb.conf.d/50-server.cnf with a text editor, for example, nano:\nsudo nano /etc/mysql/mariadb.conf.d/50-server.cnf Find the line that starts with bind-address and change it to accept connections from any IP address. You can have him accept connections from all the PIs with:\n```bash bind-address = 0.0.0.0 ``` If you prefer to allow connections only from specific IP addresses, replace 0.0.0.0 with the desired IP addresses, separated by commas. Save the file and close the editor (Ctrl + X, then Y to confirm the changes and Enter to go out in nano).\nReboot MariaDB service For the changes to take effect, restart the MariaDB service:\nsudo systemctl restart mariadb Install MariaDB`s client on the machine from which you want to connect In the client machine (from which you want to access the MariaDB server), install the MariaDB client. In Debian or Ubuntu, you can do it with:\nsudo apt update sudo apt install mariadb-client Connect to the MariaDB server from the client machine Finally, use MariaDB\u0026rsquo;s client to connect to the server. Replace user, server _ ip and database with the user name, the IP address of the server and the database you want to access, respectively:\nmysql -u usuario -p -h servidor_ip When requested, enter the user password you have configured on the MariaDB server.\nWith these steps, you will have set up the remote access to your MariaDB server and you will be able to connect from any machine that the MariaDB client has installed.\n","date":"September 1, 2024","hero":"/images/base_de_datos/instalar_mariadb/acceso_remoto_mariadb.png","permalink":"https://www.javiercd.es/en/posts/base_de_datos/acceso_remoto_mariadb/acceso_remoto_mariadb/","summary":"\u003cp\u003eTo allow remote access to your MariaDB server, follow these steps:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eConfigure the MariaDB configuration file\u003c/strong\u003e\nFirst, edit the MariaDB configuration file to allow connections from specific IP addresses. Open the file \u003ccode\u003e/etc/mysql/mariadb.conf.d/50-server.cnf\u003c/code\u003e with a text editor, for example, \u003ccode\u003enano\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo nano /etc/mysql/mariadb.conf.d/50-server.cnf\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eFind the line that starts with \u003ccode\u003ebind-address\u003c/code\u003e and change it to accept connections from any IP address. You can have him accept connections from all the PIs with:\u003c/p\u003e","tags":["MariaDB","Debian"],"title":"Remote access configuration in MariaDB"},{"categories":null,"contents":"To configure remote access in Oracle, it is essential to correctly adjust the network files located in $ORACLE_HOME/network/admin. These files, such as listener.ora and tnsnames.ora, allow us to define how clients will connect to the database and which equipment will have access.\nRemote Access Configuration The Oracle configuration with respect to the network is saved in the directory that we have defined as the Oracle home: $ORACLE_HOME/network/admin.\nlistener.ora: This file is used to configure Oracle\u0026rsquo;s listening service. It contains information about the connection points and protocols that the Oracle server will use to accept client connections. samples: Within this directory, there are examples of configuration files for various Oracle components. These sample files are useful as a reference when we need to create configuration files. shrept.lst: This file is part of the Oracle recovery process and is used to track the replication of real-time change records. It is essential when working with data replication. sqlnet.ora: This file sets Oracle\u0026rsquo;s network options. Here, it defines how server names are resolved, sets security measures, and adjusts the security layer. tnsnames.ora: Here, the aliases that Oracle will use are defined. Configuring listener.ora We will start by configuring the listener.ora file and indicate which equipment can connect to the database. In my case, I allow connections from all devices:\nStarting the Oracle Listener Service Once this is done, we will log in with the Oracle user and start the Oracle listener service to enable network connections:\nNote: You must add the Oracle variables in the Oracle user\u0026rsquo;s .bashrc file to start the service. If you haven\u0026rsquo;t done this, you won\u0026rsquo;t find the command.\nConfiguring tnsnames.ora on the Client On the client machine where we are going to make the connection, we will need to edit the tnsnames.ora file and add the address and port where our server is hosted:\nConnecting to the Oracle Database Once this is done, the command to connect is as follows:\nThe syntax is:\nThe syntax is user/password@//IP:PORT /SID\nWe can consult tables, I have added the outline of the previous year\u0026rsquo;s project:\n","date":"September 1, 2024","hero":"/images/base_de_datos/instalar_oracle/acceso_remoto_oracle.png","permalink":"https://www.javiercd.es/en/posts/base_de_datos/oracle_acceso_remoto/oracle_acceso_remoto/","summary":"\u003cp\u003eTo configure remote access in Oracle, it is essential to correctly adjust the network files located in \u003ccode\u003e$ORACLE_HOME/network/admin\u003c/code\u003e. These files, such as \u003ccode\u003elistener.ora\u003c/code\u003e and \u003ccode\u003etnsnames.ora\u003c/code\u003e, allow us to define how clients will connect to the database and which equipment will have access.\u003c/p\u003e\n\u003chr\u003e\n\u003ch3 id=\"remote-access-configuration\"\u003eRemote Access Configuration\u003c/h3\u003e\n\u003cp\u003eThe Oracle configuration with respect to the network is saved in the directory that we have defined as the Oracle home: \u003ccode\u003e$ORACLE_HOME/network/admin\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/base_de_datos/oracle_acceso_remoto/img/Aspose.Words.55b57132-3c19-4447-864b-0b88f1173a10.029.png\" alt=\"Oracle network directory\"\u003e\u003c/p\u003e","tags":["Oracle","Debian"],"title":"Remote Access Configuration in Oracle"},{"categories":null,"contents":"\nThe goal of this post is to compare the different VPNs software most used by seeing which is faster, for which we will support in speed test using iperf3.\n[NOTE] The comparative part of the posts in this section in which we mount each type of VPN.\nSpeed without VPN I\u0026rsquo;m gonna start by comparing the speeds of these 2 systems, using iperf3. For this I have removed the cisco router as I had it configured with FastEthernet interfaces and changed it to a Linux router with GigabitEthernet interfaces.\nI\u0026rsquo;m going to launch an iperf3 using public addresses so that the traffic does not use any VPN:\njaviercruces@servidor2:~$ iperf3 -c 90.0.0.2 -i 1 -t 30 Connecting to host 90.0.0.2, port 5201 [ 5] local 100.0.0.2 port 32858 connected to 90.0.0.2 port 5201 [ ID] Interval Transfer Bitrate Retr Cwnd [ 5] 0.00-1.00 sec 110 MBytes 919 Mbits/sec 897 188 KBytes [ 5] 1.00-2.00 sec 102 MBytes 859 Mbits/sec 712 120 KBytes [ 5] 2.00-3.00 sec 111 MBytes 931 Mbits/sec 735 83.4 KBytes [ 5] 3.00-4.00 sec 112 MBytes 944 Mbits/sec 600 173 KBytes [ 5] 4.00-5.00 sec 109 MBytes 913 Mbits/sec 1018 126 KBytes [ 5] 5.00-6.00 sec 115 MBytes 961 Mbits/sec 889 113 KBytes [ 5] 6.00-7.00 sec 113 MBytes 947 Mbits/sec 549 90.5 KBytes [ 5] 7.00-8.00 sec 116 MBytes 976 Mbits/sec 964 198 KBytes [ 5] 8.00-9.00 sec 114 MBytes 956 Mbits/sec 591 76.4 KBytes [ 5] 9.00-10.00 sec 108 MBytes 908 Mbits/sec 736 120 KBytes [ 5] 10.00-11.00 sec 105 MBytes 881 Mbits/sec 689 126 KBytes [ 5] 11.00-12.00 sec 106 MBytes 893 Mbits/sec 745 124 KBytes [ 5] 12.00-13.00 sec 118 MBytes 990 Mbits/sec 847 93.3 KBytes [ 5] 13.00-14.00 sec 122 MBytes 1.03 Gbits/sec 899 94.7 KBytes [ 5] 14.00-15.00 sec 125 MBytes 1.05 Gbits/sec 1014 73.5 KBytes [ 5] 15.00-16.00 sec 125 MBytes 1.05 Gbits/sec 973 113 KBytes [ 5] 16.00-17.00 sec 109 MBytes 915 Mbits/sec 934 86.3 KBytes [ 5] 17.00-18.00 sec 101 MBytes 844 Mbits/sec 629 115 KBytes [ 5] 18.00-19.00 sec 105 MBytes 881 Mbits/sec 652 122 KBytes [ 5] 19.00-20.00 sec 116 MBytes 971 Mbits/sec 826 96.2 KBytes [ 5] 20.00-21.00 sec 115 MBytes 962 Mbits/sec 820 99.0 KBytes [ 5] 21.00-22.00 sec 128 MBytes 1.08 Gbits/sec 1193 99.0 KBytes [ 5] 22.00-23.00 sec 130 MBytes 1.09 Gbits/sec 1027 110 KBytes [ 5] 23.00-24.00 sec 123 MBytes 1.03 Gbits/sec 855 116 KBytes [ 5] 24.00-25.00 sec 122 MBytes 1.03 Gbits/sec 714 126 KBytes [ 5] 25.00-26.00 sec 120 MBytes 1.01 Gbits/sec 861 119 KBytes [ 5] 26.00-27.00 sec 129 MBytes 1.08 Gbits/sec 768 112 KBytes [ 5] 27.00-28.00 sec 125 MBytes 1.05 Gbits/sec 976 140 KBytes [ 5] 28.00-29.00 sec 116 MBytes 972 Mbits/sec 943 140 KBytes [ 5] 29.00-30.00 sec 119 MBytes 996 Mbits/sec 755 116 KBytes - - - - - - - - - - - - - - - - - - - - - - - - - [ ID] Interval Transfer Bitrate Retr [ 5] 0.00-30.00 sec 3.39 GBytes 970 Mbits/sec 24811 sender [ 5] 0.00-30.00 sec 3.39 GBytes 970 Mbits/sec receiver The average speed of the network has been 970 Mbits / sec, without using any VPN.\nWireguard speed We\u0026rsquo;ll measure the speed of Wireguard:\njaviercruces@cliente3:~$ iperf3 -c 192.168.0.2 -i 1 -t 30 Connecting to host 192.168.0.2, port 5201 [ 5] local 192.168.1.2 port 39096 connected to 192.168.0.2 port 5201 [ ID] Interval Transfer Bitrate Retr Cwnd [ 5] 0.00-1.00 sec 57.5 MBytes 483 Mbits/sec 63 196 KBytes [ 5] 1.00-2.00 sec 56.4 MBytes 473 Mbits/sec 37 190 KBytes [ 5] 2.00-3.00 sec 58.2 MBytes 488 Mbits/sec 85 188 KBytes [ 5] 3.00-4.00 sec 57.1 MBytes 479 Mbits/sec 65 140 KBytes [ 5] 4.00-5.00 sec 57.8 MBytes 485 Mbits/sec 6 199 KBytes [ 5] 5.00-6.00 sec 59.7 MBytes 500 Mbits/sec 62 200 KBytes [ 5] 6.00-7.00 sec 59.0 MBytes 495 Mbits/sec 26 234 KBytes [ 5] 7.00-8.00 sec 57.8 MBytes 485 Mbits/sec 13 216 KBytes [ 5] 8.00-9.00 sec 58.6 MBytes 492 Mbits/sec 88 151 KBytes [ 5] 9.00-10.00 sec 58.1 MBytes 487 Mbits/sec 13 174 KBytes [ 5] 10.00-11.00 sec 57.9 MBytes 486 Mbits/sec 22 135 KBytes [ 5] 11.00-12.00 sec 57.1 MBytes 479 Mbits/sec 30 188 KBytes [ 5] 12.00-13.00 sec 57.3 MBytes 481 Mbits/sec 19 178 KBytes [ 5] 13.00-14.00 sec 57.1 MBytes 479 Mbits/sec 15 230 KBytes [ 5] 14.00-15.00 sec 56.5 MBytes 474 Mbits/sec 20 218 KBytes [ 5] 15.00-16.00 sec 57.4 MBytes 481 Mbits/sec 38 172 KBytes [ 5] 16.00-17.00 sec 55.9 MBytes 469 Mbits/sec 137 143 KBytes [ 5] 17.00-18.00 sec 57.0 MBytes 478 Mbits/sec 26 246 KBytes [ 5] 18.00-19.00 sec 56.6 MBytes 475 Mbits/sec 42 183 KBytes [ 5] 19.00-20.00 sec 56.2 MBytes 471 Mbits/sec 43 222 KBytes [ 5] 20.00-21.00 sec 56.5 MBytes 474 Mbits/sec 11 203 KBytes [ 5] 21.00-22.00 sec 56.4 MBytes 473 Mbits/sec 69 147 KBytes [ 5] 22.00-23.00 sec 54.1 MBytes 454 Mbits/sec 25 163 KBytes [ 5] 23.00-24.00 sec 55.9 MBytes 469 Mbits/sec 54 207 KBytes [ 5] 24.00-25.00 sec 57.5 MBytes 482 Mbits/sec 99 164 KBytes [ 5] 25.00-26.00 sec 56.5 MBytes 474 Mbits/sec 39 182 KBytes [ 5] 26.00-27.00 sec 56.7 MBytes 476 Mbits/sec 24 150 KBytes [ 5] 27.00-28.00 sec 56.3 MBytes 472 Mbits/sec 6 219 KBytes [ 5] 28.00-29.00 sec 57.0 MBytes 478 Mbits/sec 15 146 KBytes [ 5] 29.00-30.00 sec 56.0 MBytes 470 Mbits/sec 48 151 KBytes - - - - - - - - - - - - - - - - - - - - - - - - - [ ID] Interval Transfer Bitrate Retr [ 5] 0.00-30.00 sec 1.67 GBytes 479 Mbits/sec 1240 sender [ 5] 0.00-30.00 sec 1.67 GBytes 479 Mbits/sec receiver The average speed of wireguard has been 479 Mbits / sec.\nOpenVPN speed Let\u0026rsquo;s measure the speed of OpenVPN\njaviercruces@cliente3:~$ iperf3 -c 192.168.0.2 -i 1 -t 30 Connecting to host 192.168.0.2, port 5201 [ 5] local 192.168.1.2 port 43522 connected to 192.168.0.2 port 5201 [ ID] Interval Transfer Bitrate Retr Cwnd [ 5] 0.00-1.00 sec 25.1 MBytes 211 Mbits/sec 24 139 KBytes [ 5] 1.00-2.00 sec 24.8 MBytes 208 Mbits/sec 15 163 KBytes [ 5] 2.00-3.00 sec 23.7 MBytes 199 Mbits/sec 40 103 KBytes [ 5] 3.00-4.00 sec 24.6 MBytes 207 Mbits/sec 19 114 KBytes [ 5] 4.00-5.00 sec 24.2 MBytes 203 Mbits/sec 8 119 KBytes [ 5] 5.00-6.00 sec 24.3 MBytes 204 Mbits/sec 14 155 KBytes [ 5] 6.00-7.00 sec 24.2 MBytes 203 Mbits/sec 13 139 KBytes [ 5] 7.00-8.00 sec 24.5 MBytes 206 Mbits/sec 18 115 KBytes [ 5] 8.00-9.00 sec 24.0 MBytes 201 Mbits/sec 34 132 KBytes [ 5] 9.00-10.00 sec 24.3 MBytes 204 Mbits/sec 32 120 KBytes [ 5] 10.00-11.00 sec 24.5 MBytes 206 Mbits/sec 12 100 KBytes [ 5] 11.00-12.00 sec 24.4 MBytes 205 Mbits/sec 8 139 KBytes [ 5] 12.00-13.00 sec 23.9 MBytes 201 Mbits/sec 6 171 KBytes [ 5] 13.00-14.00 sec 24.1 MBytes 202 Mbits/sec 20 156 KBytes [ 5] 14.00-15.00 sec 24.0 MBytes 202 Mbits/sec 8 135 KBytes [ 5] 15.00-16.00 sec 23.5 MBytes 197 Mbits/sec 21 143 KBytes [ 5] 16.00-17.00 sec 24.0 MBytes 202 Mbits/sec 8 168 KBytes [ 5] 17.00-18.00 sec 24.6 MBytes 206 Mbits/sec 24 154 KBytes [ 5] 18.00-19.00 sec 23.8 MBytes 200 Mbits/sec 21 132 KBytes [ 5] 19.00-20.00 sec 24.3 MBytes 204 Mbits/sec 20 139 KBytes [ 5] 20.00-21.00 sec 24.6 MBytes 206 Mbits/sec 11 142 KBytes [ 5] 21.00-22.00 sec 23.0 MBytes 193 Mbits/sec 26 115 KBytes [ 5] 22.00-23.00 sec 24.6 MBytes 207 Mbits/sec 3 128 KBytes [ 5] 23.00-24.00 sec 24.0 MBytes 202 Mbits/sec 26 104 KBytes [ 5] 24.00-25.00 sec 24.3 MBytes 204 Mbits/sec 21 106 KBytes [ 5] 25.00-26.00 sec 24.3 MBytes 204 Mbits/sec 15 108 KBytes [ 5] 26.00-27.00 sec 23.8 MBytes 200 Mbits/sec 36 132 KBytes [ 5] 27.00-28.00 sec 22.9 MBytes 192 Mbits/sec 13 118 KBytes [ 5] 28.00-29.00 sec 23.7 MBytes 199 Mbits/sec 19 163 KBytes [ 5] 29.00-30.00 sec 24.2 MBytes 203 Mbits/sec 11 126 KBytes - - - - - - - - - - - - - - - - - - - - - - - - - [ ID] Interval Transfer Bitrate Retr [ 5] 0.00-30.00 sec 725 MBytes 203 Mbits/sec 546 sender [ 5] 0.00-30.00 sec 724 MBytes 202 Mbits/sec receiver The average speed has been 203 Mbits / sec.\nConclusions\nIf we compare the results, it is clear that in terms of speed, WireGuard has proved to be the most efficient option, significantly exceeding OpenVPN, doubling it in speed.\nWireGuard is designed for fast speed. It establishes a connection in 100 milliseconds, while OpenVPN takes 8 milliseconds. In some tests, WireGuard proved to be 58% faster than OpenVPN. In ideal circumstances, its speed exceeded 500 mbps.\nWireGuard is the fastest protocol due to many factors. These include:\nIts light code makes it intrinsically the fastest protocol. WireGuard also supports multithreatening - processing data using many CPU cores simultaneously - and uses a faster encryption method. In addition, WireGuard is good at using the available bandwidth and operates completely in the kernel space. To avoid censorship, OpenVPN is better than WireGuard. Why? Because the OpenVPN protocol can work on the layers of the UPD and TCP Protocol.\nUDP is faster, while TCP is reliable. TCP can avoid censorship using port 443, the same port that HTTPS uses. Thanks to TCP, OpenVPN avoids censorship of strict countries such as China and Russia. In some cases, an advanced deep inspection can detect OpenVPN. But for these cases, safety experts recommend using the Scramble within the advanced protocol configuration to add another layer of protection to the VPN traffic.\nOn the other hand, WireGuard only uses the UDP layer to transport data. And the main purpose of UDP is to transport data at high speed, not to evade censorship. This makes it easy to detect. In addition, it is susceptible to deep inspection of packages.\nOpenVPN is safe if properly configured. This protocol has no known security vulnerabilities, and its code has been audited many times. In addition, it has many encryption and authentication algorithms. When there is some security vulnerability in the algorithm, then OpenVPN can immediately configure another thing.\nIn terms of security cases, WireGuard has also gained a good reputation. It is safe and uses the latest cryptography. Your code is short and easy to audit. In addition, WireGuard has a fixed set of algorithms and encryption. When some vulnerability is found, all end points are updated to a new version, which ensures that no one reuses unsafe code.\n","date":"March 28, 2024","hero":"/images/vpn/wire_ovpn.png","permalink":"https://www.javiercd.es/en/posts/vpn/comparativa_ovpn_wire/comparativa_ovpn_wire/","summary":"\u003cp\u003e\u003cimg src=\"/vpn/comparativa_ovpn_wire/img/Pastedimage20240114150833.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eThe goal of this post is to compare the different VPNs software most used by seeing which is faster, for which we will support in speed test using iperf3.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e[NOTE]\nThe comparative part of the posts in this section in which we mount each type of VPN.\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch2 id=\"speed-without-vpn\"\u003eSpeed without VPN\u003c/h2\u003e\n\u003cp\u003eI\u0026rsquo;m gonna start by comparing the speeds of these 2 systems, using iperf3. For this I have removed the cisco router as I had it configured with FastEthernet interfaces and changed it to a Linux router with GigabitEthernet interfaces.\u003c/p\u003e","tags":["VPN","LINUX","DEBIAN","WIREGUARD","OPENVPN"],"title":"Comparative between OpenVPN and Wireguard"},{"categories":null,"contents":"At first a student will establish a Certified Authority and sign a certificate for the other student\u0026rsquo;s page. We will then test it on the Apache and Nginx web servers.\nCreate the certifying authority Step 1: Creating directories and files\nThe first step will be to generate a directory in which you will locate your certification authority, in order to maintain an organization at all times. The directory name will be CA /. In turn, you have to generate several subdirectories within it:\ncertsdb: The signed certificates shall be stored in that directory. certreqs: In that directory, the certificate signature application files (CSR) shall be stored. crl: The list of certificates that have been revoked (CRL) shall be stored in that directory. private: The private key of the certifying authority shall be stored in this directory. debian@javiercrucesCA:~$ sudo mkdir /CA debian@javiercrucesCA:~$ cd !$ debian@javiercrucesCA:/CA$ sudo mkdir certsdb certreqs crl private debian@javiercrucesCA:/CA$ sudo chmod 700 private/ debian@javiercrucesCA:/CA$ sudo touch index.txt Once the directories are generated, move into the father CA / directory. When you are within it, you list the content in a graphic way so you can appreciate that everything has been generated correctly, making use of tree. You\u0026rsquo;ll see that the 4 directories have been properly generated. Before continuing it is recommended to change the permissions to 700 to the private directory /, as it will contain the private key of the CA and we are interested that only the owner has access to it. In addition, we will need in the current directory a file that will act as a database for existing index.txt name certificates\ndebian@javiercrucesCA:/CA$ sudo tree -p [drwxr-xr-x] . ├── [drwxr-xr-x] certreqs ├── [drwxr-xr-x] certsdb ├── [drwxr-xr-x] crl ├── [-rw-r--r--] index.txt └── [drwx------] private 5 directories, 1 file debian@javiercrucesCA:/CA$ Step 2: Openssl configuration file The most likely is that you want to use an openssl configuration file other than that of our machine, so try to make the certifying authority as isolated as possible from it, so make a copy of your native configuration file and adapt it to your needs. This file is normally found in / usr / lib / ssl / openssl.cnf, although it may also be in / etc / openssl.cnf or in / usr / share / ssl / openssl.cnf, you will have to copy it to the current directory and modify it with a text editor.\ndebian@javiercrucesCA:/CA$ sudo cp /usr/lib/ssl/openssl.cnf ./ debian@javiercrucesCA:/CA$ ls -l total 32 drwxr-xr-x 2 root root 4096 Jan 8 19:22 certreqs drwxr-xr-x 2 root root 4096 Jan 8 19:22 certsdb drwxr-xr-x 2 root root 4096 Jan 8 19:22 crl -rw-r--r-- 1 root root 0 Jan 8 19:23 index.txt -rw-r--r-- 1 root root 12332 Jan 8 19:26 openssl.cnf drwx------ 2 root root 4096 Jan 8 19:22 private Within it, appropriate adaptations must be made to make use of the directories previously generated, as well as to indicate certain basic information about the certifying authority, which your partner must know, as it will be requested at the time of the generation of the certificate signature application file. The amendments to be made are as follows:\ndir = / root / CA certs = $dir / certsdb new _ certs _ dir = $certs\n[ CA_default ] dir = /CA # Where everything is kept certs = $dir/certsdb # Where the issued certs are kept crl_dir = $dir/crl # Where the issued crl are kept database = $dir/index.txt # database index file. #unique_subject = no # Set to \u0026#39;no\u0026#39; to allow creation of # several certs with same subject. new_certs_dir = $certs # default place for new certs. countryName _ default = EN stateOrProvinceName _ default = Sevilla localityName _ default = Two Sisters 0.organizationName _ default = IES Gonzalo Nazareno organization\n[ req_distinguished_name ] countryName = Country Name (2 letter code) countryName_default = ES countryName_min = 2 countryName_max = 2 stateOrProvinceName = State or Province Name (full name) stateOrProvinceName_default = Sevilla localityName = Dos Hermanas 0.organizationName = Organization Name (eg, company) 0.organizationName_default = IES Gonzalo Nazareno #we can do this but it is not needed normally :-) #1.organizationName = Second Organization Name (eg, company) #1.organizationName_default = World Wide Web Pty Ltd organizationalUnitName = Organizational Unit Name (eg, section) organizationalUnitName_default = Informatica #challenge #challenge #challenge #unstructural\n[ req_attributes ] challengePassword = A challenge password challengePassword_min = 4 challengePassword_max = 20 unstructuredName = An optional company name Step 3: Creation and signature of our own certificate After that, you will have everything ready to generate your key pair and a certificate signature application file that you will then self-sign, running the command for:\ndebian@javiercrucesCA:/CA$ sudo openssl req -new -newkey rsa:4096 -keyout private/cakey.pem -out careq.pem -config ./openssl.cnf Enter PEM pass phrase: Verifying - Enter PEM pass phrase: ----- You are about to be asked to enter information that will be incorporated into your certificate request. What you are about to enter is what is called a Distinguished Name or a DN. There are quite a few fields but you can leave some blank For some fields there will be a default value, If you enter \u0026#39;.\u0026#39;, the field will be left blank. ----- Country Name (2 letter code) [ES]:ES State or Province Name (full name) [Sevilla]:Sevilla Dos Hermanas []: Organization Name (eg, company) [IES Gonzalo Nazareno]: Organizational Unit Name (eg, section) [Informatica]: Common Name (e.g. server FQDN or YOUR name) []:javiercruces.iesgn.org Email Address []:javierasping@gmail.com As you can see, a passing sentence is requested to protect the private key that we are going to generate, as well as certain basic information for the certificate signature application file, which must match that we have previously entered into the openssl configuration file. The last two fields are not generic, so we must fill them out on a case-by-case basis. After that, we will be able to proceed with the self-signing of the certificate, which we will then have to provide to customers to include in their list of CA certificates, so that they are not shown the warning when using HTTPS. As I mentioned earlier, in a real situation, this process is usually carried out by companies with a certain reputation whose certificate is imported by default in the browsers. To do this, run the command:\ndebian@javiercrucesCA:/CA$ sudo openssl ca -create_serial -out cacert.pem -days 365 -keyfile private/cakey.pem -selfsign -extensions v3_ca -config ./openssl.cnf -infiles careq.pem Using configuration from ./openssl.cnf Enter pass phrase for private/cakey.pem: Check that the request matches the signature Signature ok Certificate Details: Serial Number: 74:1e:8a:f8:24:45:14:9e:28:f1:83:04:7c:7d:6c:0f:5f:3b:ac:f2 Validity Not Before: Jan 8 19:57:17 2024 GMT Not After : Jan 7 19:57:17 2025 GMT Subject: countryName = ES stateOrProvinceName = Sevilla organizationName = IES Gonzalo Nazareno organizationalUnitName = Informatica commonName = javiercruces.iesgn.org emailAddress = javierasping@gmail.com X509v3 extensions: X509v3 Subject Key Identifier: E3:9C:A3:CF:0E:33:EB:83:45:40:00:9B:04:4A:A9:9B:C8:8C:A9:62 X509v3 Authority Key Identifier: E3:9C:A3:CF:0E:33:EB:83:45:40:00:9B:04:4A:A9:9B:C8:8C:A9:62 X509v3 Basic Constraints: critical CA:TRUE Certificate is to be certified until Jan 7 19:57:17 2025 GMT (365 days) Sign the certificate? [y/n]:y 1 out of 1 certificate requests certified, commit? [y/n]y Write out database with 1 new entries Data Base Updated debian@javiercrucesCA:/CA$ Where:\ncreate _ serial: We suggest that you generate a 128 bit serial to start. Thanks to that randomness, if we had to start again, we would not overwrite the existing ones. It\u0026rsquo;s very important. out: We specify where the signed certificate will be stored. In this case, in the current directory, with the name cact.pem. Days: We specify the validity on days of the signed certificate. In this case, 365 days. keyfile: We indicate the private key to use to sign that certificate. In this case, the one generated in the previous step, private / cakey.pem. selfsign: Let\u0026rsquo;s tell openssl we\u0026rsquo;re going to sign the certificate. extensions: We indicate to openssl the section of the configuration file in which the extensions to use are found. In this case, v3 _ ca. config: We specify openssl using the modified configuration file, not the native one, with the name openssl.cnf. unfaithful: We indicate what we want to sign, in this case, the CSR for our new certifying authority created in the previous step, with the name careq.pem. As you can see at the output of the command, we have been asked to make sure that even if the private key reached bad hands, they cannot make fraudulent signatures. In addition, before signing the certificate, we have been shown all the information concerning the certificate, and we have been asked for confirmation. To verify that the certificate of the certifying authority is contained in the current directory, list the content of the certificate and check that, in fact, there is a cact.pem file that is the result of signing the application file of the Careq.pem. certificate.\ndebian@javiercrucesCA:/CA$ sudo tree . ├── cacert.pem ├── careq.pem ├── certreqs ├── certsdb │ └── 741E8AF82445149E28F183047C7D6C0F5F3BACF2.pem ├── crl ├── index.txt ├── index.txt.attr ├── index.txt.old ├── openssl.cnf ├── private │ └── cakey.pem └── serial 5 directories, 9 files debian@javiercrucesCA:/CA$ Step 4: Signature of licence applications It is all ready to proceed to sign the certificate for your partner\u0026rsquo;s server, so you must place your certificate signature application file within certreqs /, which is where they should be located.\ndebian@javiercrucesCA:~$ sudo ls -l /CA/certreqs/ total 4 -rw-r--r-- 1 root root 1785 Jan 11 10:00 peperc.csr You can proceed to sign it, using the command:\ndebian@javiercrucesCA:/CA$ sudo openssl ca -config openssl.cnf -extensions v3_req -days 3650 -notext -md sha256 -in certreqs/peperc.csr -out certsdb/pepe.csr.pem Using configuration from openssl.cnf Enter pass phrase for /CA/private/cakey.pem: Check that the request matches the signature Signature ok Certificate Details: Serial Number: 74:1e:8a:f8:24:45:14:9e:28:f1:83:04:7c:7d:6c:0f:5f:3b:ac:f3 Validity Not Before: Jan 11 10:01:58 2024 GMT Not After : Jan 8 10:01:58 2034 GMT Subject: countryName = ES stateOrProvinceName = Sevilla organizationName = IES Gonzalo Nazareno commonName = pfoter15 emailAddress = pepepfoter15@gmail.com X509v3 extensions: X509v3 Basic Constraints: CA:FALSE X509v3 Key Usage: Digital Signature, Non Repudiation, Key Encipherment Certificate is to be certified until Jan 8 10:01:58 2034 GMT (3650 days) Sign the certificate? [y/n]:y 1 out of 1 certificate requests certified, commit? [y/n]y Write out database with 1 new entries Database updated Where:\nconfig: We specify openssl using the modified configuration file, not the native one, with the name openssl.cnf. out: We specify where the signed certificate will be stored. In this case, within the certsdb / directory, with the name nombre.crt. infidel: We indicate what we want to sign, in this case, the CSR of our partner, located in certreqs / with name nombre.csr. At first, the certificate is already signed within certsdb /, so to verify it, you will list the content of that directory.\nThere must be a total of 3 files within it: one corresponding to the certificate of the certifying authority itself, and two corresponding to your partner, which are exactly the same but with different names, one with one identifier and the other with a common name that we have established in order to identify it more easily.\ndebian@javiercrucesCA:~$ sudo ls -l /CA/certsdb/ total 16 -rw-r--r-- 1 root root 7429 Jan 8 19:57 741E8AF82445149E28F183047C7D6C0F5F3BACF2.pem -rw-r--r-- 1 root root 2139 Jan 11 10:02 741E8AF82445149E28F183047C7D6C0F5F3BACF3.pem -rw-r--r-- 1 root root 2139 Jan 11 10:02 pepe.csr.pem Step 5: Sending certificates to the web server. So far your share has come, as only the certsdb / nombre.crt file, which is its signed certificate, together with the certificate of the certifying authority, which contains the public key, would be allowed to be sent to your partner, in order to be able to verify that signature on its certificate, the name of cact.pem. Finally, you will show the content of the index.txt file, which is a kind of flat text database with information on the certificates signed by the certifying authority. Within it, we find basic information corresponding to the two signed certificates: that of the certification authority itself and that of our partner, in addition to its current state of validity.\nI\u0026rsquo;m going to send and bring me from the instance of pepe the different files, he has configured my public key so that I can connect:\ndebian@javiercrucesCA:~$ scp javiercd.csr 172.22.200.113:/home/debian/ javiercd.csr 100% 1886 839.4KB/s 00:00 debian@javiercrucesCA:~$ scp 172.22.200.113:/home/debian/peperc.csr ./ peperc.csr 100% 1785 432.6KB/s 00:00 -- Le envio su certificado firmado debian@javiercrucesCA:~$ scp 172.22.200.113:/CA/certsdb/pepe.csr.pem pepe.csr.pem 100% 1785 432.6KB/s 00:00 debian@javiercrucesCA:~$ scp /CA/cacert.pem 172.22.200.113:/home/debian/pub_javi.pem cacert.pem 100% 7429 582.6KB/s 00:00 debian@javiercrucesCA:~$ scp 172.22.200.113:/CA/cacert.pem ./pub_pepe.pem cacert.pem 100% 7389 1.2MB/s 00:00 Task 2: Configure HTTPS Step 1: Key creation and certificate application. The first thing you have to do is create a certificate signature application (CSR or Certificate Signing Request) and get it to your partner. In this case, let\u0026rsquo;s do it with openssl, but it could be done with other multiple software options.\nTo create a certificate signature application, we must first have a private key that will be associated with it, so we will generate a 4096 bit RSA private key, which will be stored in /etc/ssl/private/, running the command for it:\ndebian@javiercrucesCA:~$ sudo openssl genrsa 4096 \u0026gt; javiercd.key debian@javiercrucesCA:~$ sudo mv javiercd.key /etc/ssl/private/ Once generated, we will change the permissions of it to 400, so that only the owner can read the content, as it is a private key. This step is not mandatory but is recommended for safety. Write the command necessary for it.\ndebian@javiercrucesCA:~$ sudo chmod 400 /etc/ssl/private/javiercd.key After that, we will create a .csr file of application for a certificate signature to be signed by the certifying authority (CA) created by our partner. This file does not contain confidential information, so it will not import the route where we store it or the assigned permits. In my case, I will store it in the current directory, running the openssl req command, with the options:\nnew: We indicate that the creation of the application for a certificate is interactive, as it will ask for certain parameters. key: We indicate the private key to associate with this application for a certificate. In this case, the one generated in the previous step, /etc/ssl/private/tunombre.key. out: We specify where the certificate signature application will be stored. In this case, in the current directory, with the name tunombre.csr. During the execution, you will ask us for a series of values to identify the certificate, which we will have to fill in according to the configuration we have made in the certification unit.\nThis information will have to be given to us by the certifying authority, except for the last two values, which in the case of the Common Name, you will put the FQDN of the web on which we want to configure HTTPS. In addition, you will need to enter your email in the Email Address section.\ndebian@javiercrucesCA:/CA$ sudo openssl ca -config openssl.cnf -extensions v3_req -days 3650 -notext -md sha256 -in certreqs/peperc.csr -out certsdb/pepe.csr.pem Using configuration from openssl.cnf Enter pass phrase for /CA/private/cakey.pem: Check that the request matches the signature Signature ok Certificate Details: Serial Number: 74:1e:8a:f8:24:45:14:9e:28:f1:83:04:7c:7d:6c:0f:5f:3b:ac:f3 Validity Not Before: Jan 11 10:01:58 2024 GMT Not After : Jan 8 10:01:58 2034 GMT Subject: countryName = ES stateOrProvinceName = Sevilla organizationName = IES Gonzalo Nazareno commonName = pfoter15 emailAddress = pepepfoter15@gmail.com X509v3 extensions: X509v3 Basic Constraints: CA:FALSE X509v3 Key Usage: Digital Signature, Non Repudiation, Key Encipherment Certificate is to be certified until Jan 8 10:01:58 2034 GMT (3650 days) Sign the certificate? [y/n]:y 1 out of 1 certificate requests certified, commit? [y/n]y Write out database with 1 new entries Database updated To verify that the signature request file has been correctly generated, list the content of the current directory. There must be a file named tunombre.csr that you must send to your partner, so that it is signed by the corresponding certifying authority that you have created.\ndebian@javiercrucesCA:~$ ls -l total 16 -rw-r--r-- 1 root root 1886 Jan 11 09:40 javiercd.csr In my case I\u0026rsquo;ll get it to you using SCP:\ndebian@javiercrucesCA:~$ scp javiercd.csr 172.22.200.113:/home/debian/ javiercd.csr 100% 1886 839.4KB/s 00:00 Once signed, I\u0026rsquo;ll get it from your server.\nStep 2: Certificate storage on the server In addition to that signed certificate, you must send us the public key of the certification authority, that is, the certificate of the certificate, so that you can verify your signature on our certificate. Store both files in /etc/ssl/certs/ and list the contents of that directory.\ndebian@javiercrucesCA:~$ sudo mv javiercd.csr.pem /etc/ssl/certs/ debian@javiercrucesCA:~$ sudo mv pub_pepe.pem /etc/ssl/certs There must be a file of the name tunombre.crt that is the result of the signature of the application for signature of the certificate that we have previously sent you, and another of the name cact.pem, which is the certificate of the certifying authority, with which the signature of the certifying authority on that certificate of the server will then be checked.\ndebian@javiercrucesCA:/CA$ sudo ls -l /etc/ssl/certs | grep javi -rw-r--r-- 1 debian debian 2175 Jan 11 10:05 javiercd.csr.pem debian@javiercrucesCA:/CA$ sudo ls -l /etc/ssl/certs | grep pepe -rw-r--r-- 1 root root 7389 Jan 11 11:24 pub_pepe.pem debian@javiercrucesCA:/CA$ sudo ls -l /etc/ssl/private/ total 8 -r-------- 1 debian debian 3272 Jan 11 09:37 javiercd.key Step 3: Apache configuration As apache2 included a default VirtualHost for incoming requests by port 80 (HTTP), it contains a default one for incoming requests by port 443 (HTTPS), by name default-ssl, which by default is disabled, so we will proceed to modify it taking into account the following directives:\nServerName: As in the previous VirtualHost, we will have to indicate the domain name through which we will access the server. SSLEngine: Activates the SSL engine, necessary to make use of HTTPS, so its value should be on. SSLCertificateFile: We indicate the route of the server certificate signed by the CA. In this case, / etc / ssl / certs / tunombre.crt. SSLCertificateKeyFile: We indicate the route of the private key associated with the server certificate. In this case, / etc / ssl / private / tunombre.key. SSLCACertificateFile: We indicate the route of the CA certificate with which we will check the signature of our certificate. In this case, / etc / ssl / certs / cact.pem. debian@javiercrucesCA:/CA$ sudo a2enmod ssl debian@javiercrucesCA:/CA$ sudo a2ensite default-ssl.conf debian@javiercrucesCA:~$ sudo cat /etc/apache2/sites-available/default-ssl.conf \u0026lt;VirtualHost *:80\u0026gt; ServerName javiercruces.iesgn.org Redirect permanent / https://javiercruces.iesgn.org/ \u0026lt;/VirtualHost\u0026gt; \u0026lt;VirtualHost *:443\u0026gt; ServerAdmin webmaster@localhost ServerName javiercruces.iesgn.org DocumentRoot /var/www/html ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined SSLEngine on SSLCertificateFile /etc/ssl/certs/javiercd.csr.pem SSLCertificateKeyFile /etc/ssl/private/javiercd.key \u0026lt;/VirtualHost\u0026gt; debian@javiercrucesCA:~$ sudo systemctl reload apache2.service Demonstration:\nStep 4: Nginx configuration Let\u0026rsquo;s force the https configuration on Nginx\nHere\u0026rsquo;s the virtualhost configuration:\ndebian@javiercrucesCA:/var/www/sad$ sudo cat /etc/nginx/sites-available/default server { listen 80; listen [::]:80; server_name javiercruces.iesgn.org; # Redirección a HTTPS return 301 https://$host$request_uri; } server { listen 443 ssl; listen [::]:443 ssl; root /var/www/sad; index index.php index.html index.htm; server_name moodle.javiercd.es; ssl_certificate /etc/ssl/certs/javiercd.csr.pem; ssl_certificate_key /etc/ssl/private/javiercd.key; } ","date":"March 28, 2024","hero":"/images/seguridad/certificados_ssl.png","permalink":"https://www.javiercd.es/en/posts/seguridad/https_autofirmado/https_autofirmado/","summary":"\u003cp\u003eAt first a student will establish a Certified Authority and sign a certificate for the other student\u0026rsquo;s page. We will then test it on the Apache and Nginx web servers.\u003c/p\u003e\n\u003ch3 id=\"create-the-certifying-authority\"\u003eCreate the certifying authority\u003c/h3\u003e\n\u003cp\u003eStep 1: Creating directories and files\u003c/p\u003e\n\u003cp\u003eThe first step will be to generate a directory in which you will locate your certification authority, in order to maintain an organization at all times. The directory name will be CA /. In turn, you have to generate several subdirectories within it:\u003c/p\u003e","tags":["LINUX","DEBIAN","HTTPS"],"title":"Create certification authority (CA) and self-signed certificates in Linux"},{"categories":null,"contents":"Forensics is the set of techniques that allows us to obtain as much information as possible after a computer incident or crime. In this practice, you will perform the evidence-taking and analysis phase on one Linux machine and another Windows. We\u0026rsquo;ll assume we caught the criminal \u0026lsquo;in fraganti\u0026rsquo; and the machines were on. Optionally, you can perform an Android device analysis. On each of the machines you must do a memory and a hard drive, taking the necessary measures to certify the chain of custody.\nImage and memory Windows I\u0026rsquo;m going to prepare the disk in which it contains the tools:\njaviercruces@HPOMEN15:~$ sudo guestmount -a /var/lib/libvirt/images/win_foresense-1.qcow2 -m /dev/sda1 /mnt/vdb/ javiercruces@HPOMEN15:~/Descargas$ sudo cp AccessData_FTK_Imager_4.7.1.exe /mnt/vdb This one I will pinch in the machine as I have installed the FTK:\nMemory Flow So let\u0026rsquo;s proceed to get an image out of the memory:\nWe select where we will save it:\nRecord overturn We are going to get the record, for this we select the option to get protected files:\nI will select the password files and all the records, and I will save it on the external disk:\nDisk Flying To do the disk tilt, we will select to create disk image:\nOur source disk is a physical device, so I will select that option:\nWe choose where we will save the image, in my case on the external disk:\nOnce done, check the image created:\nHere are the hash of the disk image:\nWe will also turn the data disk that is encrypted:\nThe hashes of the second album:\nNow I\u0026rsquo;m going to get these files to my host machine, so I\u0026rsquo;ll mount the volume of the mv in which I\u0026rsquo;ve done the data spins:\njaviercruces@HPOMEN15:~$ sudo guestmount -a /var/lib/libvirt/images/win10-2.qcow2 -m /dev/sda2 /mnt/vdb/ To make sure the image of the disks are not manipulated, I\u0026rsquo;m going to take out all the hashes:\njaviercruces@HPOMEN15:~$ sudo find /mnt/vdb -type f -exec sha256sum {} + e1b9ce9b57957b1a0607a72a057d6b7a9b34ea60f3f8aa8f38a3af979bd23066 /mnt/vdb/$RECYCLE.BIN/S-1-5-21-1723251262-3026432737-944335575-1001/desktop.ini 57020f3e585d0f2a7ee783054c50886db4c65af1bbbe5e12e114dbf674326184 /mnt/vdb/AccessData_FTK_Imager_4.7.1.exe 91cbca5b445780e72522d872e0d229000849d6deb464ac707ee378c0c0e1794c /mnt/vdb/discodatos/discodatos.001 44ca1fe875ba863adbb5b2675acb3345122f8dee0ba3ce8e2c4cfb9c523d38b0 /mnt/vdb/discodatos/discodatos.001.txt 5a45f6418924d3eab3ea820b4bdb4a609e7f95a6f4665f043217593eeab5056e /mnt/vdb/discowin/discowin.001 aeb282e38ebe64be765b43e20a6a419ac1aa1ae4d6edd08cae3d8973bc0ac5a9 /mnt/vdb/discowin/discowin.001.txt 372a1157215515100f42e5a73adecc2407a1d8b586fa2c4770d2619d8094baf1 /mnt/vdb/discowin/discowin.002 e06c8472a09f209f23e49fb63195d8c471c86aea67e9587002b884ade22c8b97 /mnt/vdb/discowin/discowin.003 947ce5b6c2d7c8139de359723fecef351b1c6877b09647fb1d3015a4588f95df /mnt/vdb/discowin/discowin.004 7bc813aee24fd973f2c3563c66e92c3becbbe2a40e341e693b5c4c38df3c8eb8 /mnt/vdb/discowin/discowin.005 e7d920807e329ba1f9dfd3b6987a6c12efd7a3b9a0563302509db73d88862909 /mnt/vdb/discowin/discowin.006 94c1cd9d910a39a1df7852c69032d68cdaf8ba59b4849f84963f3728880e53c0 /mnt/vdb/discowin/discowin.007 fa01765ac897aa4c8a1c2e9569cf9b0c50c5aea2c947ae9bf932f0eec89986e3 /mnt/vdb/discowin/discowin.008 095a0b5d4e88826a88427f5a2e64d621f81315bd1307db21b34aa76fad65af84 /mnt/vdb/discowin/discowin.009 a70aa8c7c1c723d97d4845a87a33d47697d48edcacc7b9bc83f2510baee4237e /mnt/vdb/discowin/discowin.010 3e6b92b9764b3786091e5bb67e8ffb8c3271be4c977101da9fa14afa12fea171 /mnt/vdb/discowin/discowin.011 3e6b92b9764b3786091e5bb67e8ffb8c3271be4c977101da9fa14afa12fea171 /mnt/vdb/discowin/discowin.012 3e6b92b9764b3786091e5bb67e8ffb8c3271be4c977101da9fa14afa12fea171 /mnt/vdb/discowin/discowin.013 83954736003d261f58a1ce24f73cba37953df229fdfebd15d00245ba5a700197 /mnt/vdb/discowin/discowin.014 5353e34d4487ae5450be372e5ec37a0ca5dd746b206823abf561cd2af5d0d371 /mnt/vdb/memoria/memdump.mem e8380620a1d5a99c0a39da8a2c5a59af17dd4bff7a4d48d8652ecca9683ef099 /mnt/vdb/memoria/pagefile.sys 9cce8fc11ca271c3e528a48257bb5472c2f4cbdbb809c19895c36b1be51c3d0b /mnt/vdb/registro/default 816ab103521bcb7adcd11b5ac9359fc8f0de945fe10507411d0127bdcc24ff70 /mnt/vdb/registro/SAM cbac2073fe665e11e5d043c5ab054ae58c70687b0b59197559c4077e4fdaa696 /mnt/vdb/registro/SECURITY 7cd909de86fc9e9ecb73e3d432d68aa892053be3848b6c32d3aefffc347140f6 /mnt/vdb/registro/software 4cf3a831081ab8e890b5c297ed5238cecebdfecdb1805a3b2e391489cd48fe5b /mnt/vdb/registro/system 0e2961777eb214825652cc4b35b3b85dcfbdba2a58f5d2c1f586d8800abe9f83 /mnt/vdb/registro/Users/Default/NTUSER.DAT 59ffce3dd25b5f242f425a6dfdc642813f429bc0c19694aad1dcd5d2a9871c1f /mnt/vdb/registro/Users/javiercruces/Crypto/Keys/de7cf8a7901d2ad13e5c67c29e5d1662_42c962d9-bf79-4299-be81-eebad4e81473 ea127864137edff0844c2e5731c51d1d2ef22cb3a8030d413166df1114eae5a5 /mnt/vdb/registro/Users/javiercruces/NTUSER.DAT a564c8fa96557437d4b69e870ff8797a8beee20892a632735ac0a1f838ed453b /mnt/vdb/registro/Users/javiercruces/Protect/CREDHIST fb321d3671cf9f911f933e29fc9a099cd6834838c40d01fe6404b6975990c041 /mnt/vdb/registro/Users/javiercruces/Protect/S-1-5-21-1723251262-3026432737-944335575-1001/e8d02ff1-98d6-4ba4-99a4-1db28276ecda 13150cc91caed3c1d4321e8815afd5fc21eb4831eb1a93b40b4c9c48a4109fa1 /mnt/vdb/registro/Users/javiercruces/Protect/S-1-5-21-1723251262-3026432737-944335575-1001/Preferred 78596ecc21720053b44f78689bb06870bbe4f47029dc3d7e781cfe4d2d7a940f /mnt/vdb/registro/Users/javiercruces/UsrClass.dat Linux Disk Flying javiercruces@debian:~/LiME/src$ lsblk -f NAME FSTYPE FSVER LABEL UUID FSAVAIL FSUSE% MOUNTPOINTS sda └─sda1 crypto 2 9fc1bfa7-9224-4e8e-896a-09516d4fd613 sr0 iso966 Jolie Debian 12.1.0 amd64 n 2023-07-22-10-52-30-00 vda ├─vda1 │ vfat FAT32 DB79-1C75 597,9M 37% /boot ├─vda2 │ ext4 1.0 6666d9d8-9a41-46e5-a370-0730f713d3a7 7,6G 52% / └─vda3 swap 1 e24babe0-340c-4b09-836e-dd5f447bcecc [SWAP] vdb └─vdb1 ext4 1.0 f79f0d79-209b-42b9-9087-5c72ee1595ee 54G 3% /mnt javiercruces@debian:~/LiME/src$ sudo dd if=/dev/vda2 of=/mnt/discoLinux.raw bs=64K 296784+0 records in 296784+0 records out 19450036224 bytes (19 GB, 18 GiB) copied, 27,2778 s, 713 MB/s javiercruces@debian:~/LiME/src$ Memory discharge javiercruces@debian:~$ git clone https://github.com/504ensicsLabs/LiME.git javiercruces@debian:~$ cd LiME/src/ javiercruces@debian:~/LiME/src$ make javiercruces@debian:~/LiME/src$ sudo insmod ./lime-6.1.0-18-amd64.ko \u0026#34;path=/mnt/vdb format=lime\u0026#34; javiercruces@HPOMEN15:~$ sudo guestmount -a /var/lib/libvirt/images/ASO-systemd-boot-1.qcow2 -m /dev/vda1 /mnt/vdb/ javiercruces@HPOMEN15:~$ sudo ls -l /mnt/vdb total 25023392 -rw-r--r-- 1 root root 19450036224 feb 18 12:07 discoLinux.raw drwx------ 2 root root 16384 feb 18 11:25 lost+found -rw-r--r-- 1 root root 1900818432 feb 18 11:47 memdebian.mem -r--r--r-- 1 root root 4273066304 feb 18 12:10 vdb I\u0026rsquo;m going to keep the image hashes:\njaviercruces@HPOMEN15:~$ sudo find /mnt/vdb -type f -exec sha256sum {} + 5f136603c0e34a74a58bc59f1934f5f2850ca8bec9c356a283ee7161a8f39a76 /mnt/vdb/memdebian.mem b63693142f2823a95a11d9f1fcbd845c118b2fc5d0b2508586d0fc6c8fe482af /mnt/vdb/discoLinux.raw b419ec819114f21a10bc5146a0b28183165c8b2cf77b2fe160e3044b1b5e04a0 /mnt/vdb/vdb Analysis of the Windows machine The first thing I will do is create a case in autopsy (This documentation is made in debian, the exercises I have responded to on Windows).\nWe add meta-information to the case, if we consider it necessary:\nWe wait for autopsy to process the disk image:\nVolatility installation javiercruces@HPOMEN15:~$ git clone https://github.com/volatilityfoundation/volatility3.git Clonando en \u0026#39;volatility3\u0026#39;... remote: Enumerating objects: 32373, done. remote: Counting objects: 100% (3665/3665), done. remote: Compressing objects: 100% (771/771), done. remote: Total 32373 (delta 3350), reused 2971 (delta 2894), pack-reused 28708 Recibiendo objetos: 100% (32373/32373), 6.32 MiB | 14.10 MiB/s, listo. Resolviendo deltas: 100% (24696/24696), listo. javiercruces@HPOMEN15:~$ cd volatility3/ javiercruces@HPOMEN15:~/volatility3$ python3 -m venv volatility javiercruces@HPOMEN15:~/volatility3$ source volatility/bin/activate (volatility) javiercruces@HPOMEN15:~/volatility3$ pip3 install -r requirements.txt Windows machine 1. Processes in progress (volatility) javiercruces@HPOMEN15:~/volatility3$ sudo python3 vol.py -f \u0026#34;/mnt/vdb/memoria/memdump.mem\u0026#34; windows.pslist.PsList PID\tPPID\tImageFileName\tOffset(V)\tThreads\tHandles\tSessionId\tWow64\tCreateTime\tExitTime\tFile output 4\t0\tSystem\t0xb088ea4af080\t158\t-\tN/A\tFalse\t2024-02-05 19:30:59.000000 N/A\tDisabled 92\t4\tRegistry\t0xb088ea5b8040\t4\t-\tN/A\tFalse\t2024-02-05 19:30:56.000000 N/A\tDisabled 344\t4\tsmss.exe\t0xb0891a80e040\t2\t-\tN/A\tFalse\t2024-02-05 19:30:59.000000 N/A\tDisabled 448\t440\tcsrss.exe\t0xb088f6093140\t10\t-\t0\tFalse\t2024-02-05 19:31:15.000000 N/A\tDisabled 516\t440\twininit.exe\t0xb088ebd2e080\t1\t-\t0\tFalse\t2024-02-05 19:31:15.000000 N/A\tDisabled 528\t508\tcsrss.exe\t0xb088ebd34080\t11\t-\t1\tFalse\t2024-02-05 19:31:15.000000 N/A\tDisabled 612\t508\twinlogon.exe\t0xb08929ff6080\t3\t-\t1\tFalse\t2024-02-05 19:31:15.000000 N/A\tDisabled 648\t516\tservices.exe\t0xb088eb1b40c0\t10\t-\t0\tFalse\t2024-02-05 19:31:15.000000 N/A\tDisabled 668\t516\tlsass.exe\t0xb088eb1b9080\t10\t-\t0\tFalse\t2024-02-05 19:31:15.000000 N/A\tDisabled 768\t516\tfontdrvhost.ex\t0xb088eb1bd080\t5\t-\t0\tFalse\t2024-02-05 19:31:15.000000 N/A\tDisabled 776\t612\tfontdrvhost.ex\t0xb088f59eb140\t5\t-\t1\tFalse\t2024-02-05 19:31:15.000000 N/A\tDisabled 788\t648\tsvchost.exe\t0xb088f59ee240\t25\t-\t0\tFalse\t2024-02-05 19:31:15.000000 N/A\tDisabled 880\t648\tsvchost.exe\t0xb08919be72c0\t19\t-\t0\tFalse\t2024-02-05 19:31:15.000000 N/A\tDisabled 988\t612\tdwm.exe\t0xb088f5d7e080\t14\t-\t1\tFalse\t2024-02-05 19:31:15.000000 N/A\tDisabled 996\t612\tLogonUI.exe\t0xb088f5d81080\t13\t-\t1\tFalse\t2024-02-05 19:31:15.000000 N/A\tDisabled 400\t648\tsvchost.exe\t0xb088f654c2c0\t42\t-\t0\tFalse\t2024-02-05 19:31:16.000000 N/A\tDisabled 444\t648\tsvchost.exe\t0xb088f654e240\t73\t-\t0\tFalse\t2024-02-05 19:31:16.000000 N/A\tDisabled 584\t648\tsvchost.exe\t0xb088f82052c0\t16\t-\t0\tFalse\t2024-02-05 19:31:16.000000 N/A\tDisabled 1032\t648\tsvchost.exe\t0xb088f8ea62c0\t15\t-\t0\tFalse\t2024-02-05 19:31:16.000000 N/A\tDisabled 1040\t648\tsvchost.exe\t0xb088f8ea8280\t20\t-\t0\tFalse\t2024-02-05 19:31:16.000000 N/A\tDisabled 1244\t648\tsvchost.exe\t0xb088f8e0a2c0\t22\t-\t0\tFalse\t2024-02-05 19:31:16.000000 N/A\tDisabled 1460\t648\tsvchost.exe\t0xb088fa6e62c0\t19\t-\t0\tFalse\t2024-02-05 19:31:16.000000 N/A\tDisabled 1520\t648\tsvchost.exe\t0xb088f9fc4080\t14\t-\t0\tFalse\t2024-02-05 19:31:16.000000 N/A\tDisabled 1572\t648\tsvchost.exe\t0xb088fa6e8300\t3\t-\t0\tFalse\t2024-02-05 19:31:16.000000 N/A\tDisabled 1768\t4\tMemCompression\t0xb088f9fc8040\t42\t-\tN/A\tFalse\t2024-02-05 19:31:16.000000 N/A\tDisabled 1924\t648\tsvchost.exe\t0xb088fbbd42c0\t8\t-\t0\tFalse\t2024-02-05 19:31:16.000000 N/A\tDisabled 1956\t648\tsvchost.exe\t0xb088fc1292c0\t9\t-\t0\tFalse\t2024-02-05 19:31:16.000000 N/A\tDisabled 1052\t648\tsvchost.exe\t0xb088fe704240\t11\t-\t0\tFalse\t2024-02-05 19:31:16.000000 N/A\tDisabled 1068\t648\tsvchost.exe\t0xb088fe7062c0\t5\t-\t0\tFalse\t2024-02-05 19:31:16.000000 N/A\tDisabled 1232\t648\tsvchost.exe\t0xb088fe708080\t4\t-\t0\tFalse\t2024-02-05 19:31:16.000000 N/A\tDisabled 1568\t648\tspoolsv.exe\t0xb088fdbde200\t8\t-\t0\tFalse\t2024-02-05 19:31:16.000000 N/A\tDisabled 2052\t648\tsvchost.exe\t0xb088f67072c0\t14\t-\t0\tFalse\t2024-02-05 19:31:16.000000 N/A\tDisabled 2300\t648\tsvchost.exe\t0xb088f834a240\t12\t-\t0\tFalse\t2024-02-05 19:31:17.000000 N/A\tDisabled 2412\t648\tMsMpEng.exe\t0xb088f5b06280\t28\t-\t0\tFalse\t2024-02-05 19:31:17.000000 N/A\tDisabled 2868\t648\tsvchost.exe\t0xb08919b82240\t27\t-\t0\tFalse\t2024-02-05 19:31:18.000000 N/A\tDisabled 3044\t1040\tdasHost.exe\t0xb088f5c08280\t3\t-\t0\tFalse\t2024-02-05 19:31:18.000000 N/A\tDisabled 664\t648\tsvchost.exe\t0xb088faadd300\t5\t-\t0\tFalse\t2024-02-05 19:31:19.000000 N/A\tDisabled 3792\t3784\tcsrss.exe\t0xb088faaf5080\t11\t-\t2\tFalse\t2024-02-05 19:31:38.000000 N/A\tDisabled 3840\t3784\twinlogon.exe\t0xb08901ded080\t6\t-\t2\tFalse\t2024-02-05 19:31:38.000000 N/A\tDisabled 3868\t648\tWUDFHost.exe\t0xb088f55e5080\t10\t-\t0\tFalse\t2024-02-05 19:31:38.000000 N/A\tDisabled 3960\t3840\tfontdrvhost.ex\t0xb088f0fbb0c0\t5\t-\t2\tFalse\t2024-02-05 19:31:38.000000 N/A\tDisabled 4020\t3840\tdwm.exe\t0xb088f7551340\t16\t-\t2\tFalse\t2024-02-05 19:31:38.000000 N/A\tDisabled 3456\t400\trdpclip.exe\t0xb088eb1ed2c0\t8\t-\t2\tFalse\t2024-02-05 19:31:39.000000 N/A\tDisabled 3616\t444\tsihost.exe\t0xb088eaec5300\t16\t-\t2\tFalse\t2024-02-05 19:31:39.000000 N/A\tDisabled 3400\t648\tsvchost.exe\t0xb088fafee340\t20\t-\t2\tFalse\t2024-02-05 19:31:39.000000 N/A\tDisabled 3188\t444\ttaskhostw.exe\t0xb088f6af1380\t12\t-\t2\tFalse\t2024-02-05 19:31:39.000000 N/A\tDisabled 3068\t648\tNisSrv.exe\t0xb088eadcc300\t7\t-\t0\tFalse\t2024-02-05 19:31:39.000000 N/A\tDisabled 3344\t1040\tctfmon.exe\t0xb088f632d080\t11\t-\t2\tFalse\t2024-02-05 19:31:39.000000 N/A\tDisabled 4208\t3840\tuserinit.exe\t0xb088fc324080\t0\t-\t2\tFalse\t2024-02-05 19:31:40.000000 2024-02-05 19:32:04.000000 Disabled 4236\t4208\texplorer.exe\t0xb088fc332080\t76\t-\t2\tFalse\t2024-02-05 19:31:40.000000 N/A\tDisabled 4388\t648\tsvchost.exe\t0xb088f5430080\t14\t-\t2\tFalse\t2024-02-05 19:31:40.000000 N/A\tDisabled 4452\t648\tSearchIndexer.\t0xb0891ee2a240\t21\t-\t0\tFalse\t2024-02-05 19:31:40.000000 N/A\tDisabled 4876\t788\tStartMenuExper\t0xb088f90130c0\t14\t-\t2\tFalse\t2024-02-05 19:31:41.000000 N/A\tDisabled 5096\t788\tRuntimeBroker.\t0xb088f94ec340\t4\t-\t2\tFalse\t2024-02-05 19:31:42.000000 N/A\tDisabled 4732\t788\tSearchApp.exe\t0xb088f65130c0\t57\t-\t2\tFalse\t2024-02-05 19:31:42.000000 N/A\tDisabled 5184\t788\tRuntimeBroker.\t0xb088fb73e340\t17\t-\t2\tFalse\t2024-02-05 19:31:42.000000 N/A\tDisabled 5828\t788\tWmiPrvSE.exe\t0xb088ead52300\t8\t-\t0\tFalse\t2024-02-05 19:31:44.000000 N/A\tDisabled 6028\t3104\tGoogleCrashHan\t0xb088f871c340\t5\t-\t0\tTrue\t2024-02-05 19:31:45.000000 N/A\tDisabled 6092\t3104\tGoogleCrashHan\t0xb088f870f080\t4\t-\t0\tFalse\t2024-02-05 19:31:45.000000 N/A\tDisabled 3740\t788\tRuntimeBroker.\t0xb0891ee2f080\t9\t-\t2\tFalse\t2024-02-05 19:31:52.000000 N/A\tDisabled 1912\t788\tsmartscreen.ex\t0xb088f901d080\t7\t-\t2\tFalse\t2024-02-05 19:31:54.000000 N/A\tDisabled 3524\t4236\tSecurityHealth\t0xb088f87020c0\t6\t-\t2\tFalse\t2024-02-05 19:31:54.000000 N/A\tDisabled 3236\t648\tSecurityHealth\t0xb088f9c4e340\t15\t-\t0\tFalse\t2024-02-05 19:31:54.000000 N/A\tDisabled 820\t4236\tOneDrive.exe\t0xb088f8ec7080\t23\t-\t2\tTrue\t2024-02-05 19:31:55.000000 N/A\tDisabled 6128\t4236\tchrome.exe\t0xb088f8e61080\t40\t-\t2\tFalse\t2024-02-05 19:31:56.000000 N/A\tDisabled 2040\t6128\tchrome.exe\t0xb088f8732080\t8\t-\t2\tFalse\t2024-02-05 19:31:57.000000 N/A\tDisabled 5404\t6128\tchrome.exe\t0xb088f3cb2080\t14\t-\t2\tFalse\t2024-02-05 19:31:57.000000 N/A\tDisabled 5392\t6128\tchrome.exe\t0xb088f60e8080\t15\t-\t2\tFalse\t2024-02-05 19:31:57.000000 N/A\tDisabled 5348\t6128\tchrome.exe\t0xb088f8fa3080\t8\t-\t2\tFalse\t2024-02-05 19:31:57.000000 N/A\tDisabled 5496\t6128\tchrome.exe\t0xb088f3cc1080\t15\t-\t2\tFalse\t2024-02-05 19:31:57.000000 N/A\tDisabled 6184\t6128\tchrome.exe\t0xb088f44e5080\t14\t-\t2\tFalse\t2024-02-05 19:31:57.000000 N/A\tDisabled 6200\t6128\tchrome.exe\t0xb088f3cf3080\t14\t-\t2\tFalse\t2024-02-05 19:31:57.000000 N/A\tDisabled 6380\t788\tTextInputHost.\t0xb088f8a0e080\t9\t-\t2\tFalse\t2024-02-05 19:31:57.000000 N/A\tDisabled 6556\t788\tdllhost.exe\t0xb0891a1ec080\t11\t-\t2\tFalse\t2024-02-05 19:31:58.000000 N/A\tDisabled 6156\t6128\tchrome.exe\t0xb088f44cc080\t14\t-\t2\tFalse\t2024-02-05 19:33:00.000000 N/A\tDisabled 5284\t6128\tchrome.exe\t0xb088f872c080\t14\t-\t2\tFalse\t2024-02-05 19:33:00.000000 N/A\tDisabled 4036\t6128\tchrome.exe\t0xb088f44e4080\t14\t-\t2\tFalse\t2024-02-05 19:33:05.000000 N/A\tDisabled 6916\t4236\tFTK Imager.exe\t0xb0891a1d9080\t22\t-\t2\tFalse\t2024-02-05 19:33:11.000000 N/A\tDisabled 6044\t788\tApplicationFra\t0xb0890d7dc080\t13\t-\t2\tFalse\t2024-02-05 19:33:14.000000 N/A\tDisabled 6104\t788\tCalculator.exe\t0xb088f9bf1340\t17\t-\t2\tFalse\t2024-02-05 19:33:14.000000 N/A\tDisabled 5864\t788\tRuntimeBroker.\t0xb0890d7d9080\t6\t-\t2\tFalse\t2024-02-05 19:33:14.000000 N/A\tDisabled 7020\t648\tsvchost.exe\t0xb088f8720300\t7\t-\t0\tFalse\t2024-02-05 19:33:17.000000 N/A\tDisabled 4788\t648\tSgrmBroker.exe\t0xb088fbe4c080\t7\t-\t0\tFalse\t2024-02-05 19:33:18.000000 N/A\tDisabled 760\t648\tsvchost.exe\t0xb088fac482c0\t13\t-\t0\tFalse\t2024-02-05 19:33:18.000000 N/A\tDisabled 7348\t788\tHxCalendarAppI\t0xb088f5f5a080\t29\t-\t2\tFalse\t2024-02-05 19:33:20.000000 N/A\tDisabled 7412\t788\tRuntimeBroker.\t0xb088faf61080\t6\t-\t2\tFalse\t2024-02-05 19:33:20.000000 N/A\tDisabled 7476\t788\tHxTsr.exe\t0xb088fc642080\t13\t-\t2\tFalse\t2024-02-05 19:33:20.000000 N/A\tDisabled 7816\t4236\tTaskmgr.exe\t0xb088facb8340\t16\t-\t2\tFalse\t2024-02-05 19:33:22.000000 N/A\tDisabled 8072\t788\texplorer.exe\t0xb088ead54080\t11\t-\t2\tFalse\t2024-02-05 19:33:34.000000 N/A\tDisabled 7256\t3616\tPaintStudio.Vi\t0xb088facbe340\t45\t-\t2\tFalse\t2024-02-05 19:33:39.000000 N/A\tDisabled 7796\t788\tRuntimeBroker.\t0xb088f8e64300\t8\t-\t2\tFalse\t2024-02-05 19:33:40.000000 N/A\tDisabled 900\t788\tTime.exe\t0xb088f9c15080\t16\t-\t2\tFalse\t2024-02-05 19:33:42.000000 N/A\tDisabled 2132\t788\tRuntimeBroker.\t0xb088ead3d080\t7\t-\t2\tFalse\t2024-02-05 19:33:43.000000 N/A\tDisabled 2. Services in progress (volatility) javiercruces@HPOMEN15:~/volatility3$ sudo python3 vol.py -f \u0026#34;/mnt/vdb/memoria/memdump.mem\u0026#34; windows.getservicesids.GetServiceSIDs Volatility 3 Framework 2.5.2 Progress: 100.00\tPDB scanning finished SID\tService S-1-5-80-4151353957-356578678-4163131872-800126167-2037860865\t.NET CLR Networking 4.0.0.0 S-1-5-80-1135273183-3738781202-689480478-891280274-255333391\t.NET Memory Cache 4.0 S-1-5-80-3459415445-2224257447-3423677131-2829651752-4257665947\t3ware S-1-5-80-2917441881-3404282297-3983348447-1829381237-2935805708\tAarSvc S-1-5-80-2345285467-3342891147-82292311-2275197348-1578354944\tAarSvc_50fad S-1-5-80-1975967573-2913356537-819030703-3730719923-1995772179\tAcpiDev S-1-5-80-2670625634-2386107419-4204951937-4094372046-2600379021\tacpiex S-1-5-80-3267050047-1503497915-401953950-2662906978-1179039408\tacpipagr S-1-5-80-772678238-4220935223-620583658-4118486195-1180343772\tacpitime S-1-5-80-1863632671-1375125309-1493738800-1551534981-2387622636\tAcx01000 S-1-5-80-3261807240-4279319092-2126406095-947934052-2578847935\tADOVMPPackage S-1-5-80-2046354688-3987051615-3879164971-215375460-2633017214\tADP80XX S-1-5-80-1535954936-2128305610-2033289386-4003803006-3961564848\tad_driver S-1-5-80-521319896-1227547225-1440366370-1094984824-1952325498\tafunix S-1-5-80-3882103802-2937937445-2149894622-934926057-1088273958\tahcache S-1-5-80-3532809085-2652327567-2620918877-1058261733-582902671\tAJRouter S-1-5-80-3520885947-347258037-358237196-958877718-2177097675\tamdgpio2 S-1-5-80-3034931084-4111837248-3722498124-953434196-229084002\tamdi2c S-1-5-80-940484976-4139584748-3980625906-2403118188-3770008912\tapplockerfltr S-1-5-80-2020831507-1298702824-3288167190-116113825-4190209\tAppReadiness S-1-5-80-3690054487-1922792274-847725564-1425669114-2396631621\tAppVClient S-1-5-80-1981223234-350633043-1452159618-1133528455-2295233572\tAppvStrm S-1-5-80-1995813674-3661462697-784932380-3834207926-917317866\tAppvVemgr S-1-5-80-1543189782-2596160705-3795570588-3168413527-2925017820\tAppvVfs S-1-5-80-1949724575-2387902436-65106593-1201171665-3967308604\tAppXSvc S-1-5-80-689100834-1985168674-2379302174-2224748125-4125308070\tAssignedAccessManagerSvc S-1-5-80-3169285310-278349998-1452333686-3865143136-4212226833\tautotimesvc S-1-5-80-286416697-2074333985-3953926783-2730543180-4207904231\tbam S-1-5-80-2025233850-3714960172-3834018148-2523054830-2209135241\tBasicDisplay S-1-5-80-4178409850-1580268469-397489987-3195816699-129657517\tBasicRender S-1-5-80-3969992995-4113734098-2838120167-1440264772-583281004\tBcastDVRUserService S-1-5-80-1091833278-2140613478-3064603973-1607650773-3857006778\tBcastDVRUserService_50fad S-1-5-80-856979437-3912875207-2720685236-703935298-3759072829\tbcmfn2 S-1-5-80-3451400966-3703281935-2685268016-3285412533-1470843506\tbindflt S-1-5-80-2033999825-3741098712-1851668902-216055579-943193379\tBluetoothUserService S-1-5-80-2602215105-3353301314-225129424-3242260137-2199118732\tBluetoothUserService_50fad S-1-5-80-1988685059-1921232356-378231328-2704142597-890457928\tBrokerInfrastructure S-1-5-80-3316959809-2577409367-488518535-1805171532-1438653141\tBTAGService S-1-5-80-3397485379-1673558126-3852117732-4170930301-4011713027\tBthA2dp S-1-5-80-1264790548-4164306546-4160824920-750804445-3452039388\tBthAvctpSvc S-1-5-80-3742302039-178175996-3312716580-300089339-184318439\tBthEnum S-1-5-80-4190030514-1955060627-1650410980-2059579884-2945205035\tBthHFEnum S-1-5-80-2319449347-3660344761-1621844049-61588942-3837794983\tBthLEEnum S-1-5-80-411364929-2494992265-235336807-3339216277-1376253409\tBthMini S-1-5-80-3533787624-3536623824-1878644040-3113243162-1610647180\tBTHUSB S-1-5-80-1102738-1048517740-3681369803-3100335448-3129350187\tbttflt S-1-5-80-4235005237-3293881321-902755294-2421876860-1688724929\tbuttonconverter S-1-5-80-3988044632-483646655-3689529973-3635425272-2751329168\tCAD S-1-5-80-3369530244-1263555520-1552818992-544823788-1590281562\tcamsvc S-1-5-80-2195691530-3564058219-2185687823-1858318469-3207429352\tCaptureService S-1-5-80-2061916618-2473786339-1209003124-203996862-3865510505\tCaptureService_50fad S-1-5-80-546976454-1426073922-427304975-3694345144-4147405473\tcbdhsvc S-1-5-80-2514868401-1614040450-3339499687-2942524132-3960226468\tcbdhsvc_50fad S-1-5-80-3433512109-503559027-1389316256-1766580070-2256751264\tCDPSvc S-1-5-80-1260278928-804197538-2066346633-4268302704-2216462912\tCDPUserSvc S-1-5-80-1518900912-1420122119-1615577584-34666731-2598493892\tCDPUserSvc_50fad S-1-5-80-1055174906-2416269421-2304048803-1043379310-100576628\tcht4iscsi S-1-5-80-867907225-1838866732-3207111219-3362010221-3938223369\tcht4vbd S-1-5-80-1592074278-3653508928-2768813056-1918619345-1433065180\tCimFS S-1-5-80-1404165011-2000956283-1442398411-3799073753-1383434776\tCldFlt S-1-5-80-65843127-2189646064-2697706863-2125155322-3141006483\tClipSVC S-1-5-80-2119957892-4152124429-3625998117-4006912763-1737903618\tcloudidsvc S-1-5-80-2611951811-1959136347-1062071333-3982815153-2811717512\tclr_optimization_v4.0.30319_32 S-1-5-80-2839768381-3691089589-2614646340-3191585287-3380622033\tclr_optimization_v4.0.30319_64 S-1-5-80-4162882437-1505926369-3203888135-2472178355-2995762856\tcnghwassist S-1-5-80-1796617447-2916456010-10894564-1845345233-3515002435\tcondrv S-1-5-80-3749766068-1582991359-4182444126-1144602875-625653745\tConsentUxUserSvc S-1-5-80-1689245047-2517065848-119126955-928953782-3881496094\tConsentUxUserSvc_50fad S-1-5-80-1021139062-1866602279-1255292388-1008060685-2498416891\tCoreMessagingRegistrar S-1-5-80-109488485-4147369969-3056774085-3969564951-1913080067\tCoreUI S-1-5-80-2720979471-2110640377-1938553337-2954392914-939353058\tCredentialEnrollmentManagerUserSvc S-1-5-80-2870883986-4281173727-708603794-2134363143-2686522016\tCredentialEnrollmentManagerUserSvc_50fad S-1-5-80-3427364867-2348656012-3079877547-1505400018-1601214341\tdam S-1-5-80-2667170245-2239725068-1742831399-533342241-2651120191\tdcsvc S-1-5-80-1692619910-1358769708-3047346990-2477994898-1876611151\tDeviceAssociationBrokerSvc S-1-5-80-933457078-909669165-2371787725-499192611-2576228100\tDeviceAssociationBrokerSvc_50fad S-1-5-80-2536636004-4072673470-1048721469-2703517266-1433793019\tDeviceAssociationService S-1-5-80-2659457741-469498900-3203170401-3149177360-3048467625\tDeviceInstall S-1-5-80-3981010603-2563310902-4138807455-2513867770-1689624316\tDevicePickerUserSvc S-1-5-80-1542622939-2432071804-441627781-2155588311-412164416\tDevicePickerUserSvc_50fad S-1-5-80-1731526583-713188386-1588570932-65458670-665563417\tDevicesFlowUserSvc S-1-5-80-2139216848-1834768328-3639298086-1478984899-2276215200\tDevicesFlowUserSvc_50fad S-1-5-80-1646229720-1474186231-1049421145-3719583575-3014288788\tDevQueryBroker S-1-5-80-3837255464-839197112-3211601036-3795322556-2690640524\tDfsc S-1-5-80-3427281794-3208260282-895156161-4152208786-3156774898\tdiagnosticshub.standardcollector.service S-1-5-80-2291377395-3838044599-2142290114-2473825573-3813973113\tdiagsvc S-1-5-80-2620808479-2171380039-3191355562-2070425692-3097948119\tDiagTrack S-1-5-80-2947989659-52033649-2604989816-125447294-1386081903\tDialogBlockingService S-1-5-80-1827140278-1118305254-4004251663-1512899043-4081885502\tdisk S-1-5-80-4171086659-1617898341-2870161492-1466607281-2109097600\tDispBrokerDesktopSvc S-1-5-80-3914275374-678031271-1603343729-3906112567-2888048264\tDisplayEnhancementService S-1-5-80-538170410-2190149038-799223143-2506663053-4165713448\tDmEnrollmentSvc S-1-5-80-2597136289-665204401-1725106016-1253143166-1853691573\tdmvsc S-1-5-80-3841379657-834162867-3056945855-2577476187-70241904\tdmwappushservice S-1-5-80-3055155277-3816794035-3994065555-2874236192-2193176987\tDoSvc S-1-5-80-286057374-2594772386-1471686342-3682429118-820474675\tDsmSvc S-1-5-80-1551822644-3134808374-1042292604-2865742758-3851661496\tDsSvc S-1-5-80-4071458001-3563271761-1846288968-3700919931-3809667977\tDusmSvc S-1-5-80-1830903284-3590783070-1256105943-1989567323-3273248812\te1i65x64 S-1-5-80-3578261754-285310837-913589462-2834155770-667502746\tEaphost S-1-5-80-263376457-2115425240-177348680-1339839713-3837480443\tedgeupdate S-1-5-80-605514040-344704999-4120406818-2499438505-150840210\tedgeupdatem S-1-5-80-2169634130-1039499152-2857656644-2663134321-2733247747\tEhStorClass S-1-5-80-286318078-2644501994-4034150745-2802514947-3987682007\tEhStorTcgDrv S-1-5-80-197064213-1107091946-1970926662-1288706631-716503202\tembeddedmode S-1-5-80-2744483880-3889877944-846434063-3461941807-3140553215\tEntAppSvc S-1-5-80-880578595-1860270145-482643319-2788375705-1540778122\tEventLog S-1-5-80-2617507558-3328795327-711547822-311560295-1636921165\tfhsvc S-1-5-80-1314638815-3435960472-2727226528-1675998635-1902597435\tFileCrypt S-1-5-80-3915894004-2104103821-3047269622-1811662266-774708259\tFrameServer S-1-5-80-3181391832-1165339916-824804796-1846270512-1987055954\tgencounter S-1-5-80-4137420670-1714900858-4048147207-1486404520-2727663781\tgenericusbfn S-1-5-80-75387917-508843547-2432396020-3132913102-4137377952\tGoogleChromeElevationService S-1-5-80-3892015463-3880225558-716464106-2623782912-3537878324\tGPIOClx0101 S-1-5-80-45206258-3912194098-2707507260-3008220167-2543420661\tGpuEnergyDrv S-1-5-80-1517824832-3405227061-4234718464-3265367437-2784406453\tGraphicsPerfSvc S-1-5-80-1628851891-332911214-942992855-2381080451-357317118\tgupdate S-1-5-80-1391398224-2746689181-3888380295-1755171859-6364376\tgupdatem S-1-5-80-1708301557-710215499-1045718168-382692165-3542596111\tHdAudAddService S-1-5-80-1632474125-2303985310-1465129739-461431387-3339616311\thidi2c S-1-5-80-595487790-2902857704-1637225563-1046489922-3656573765\thidinterrupt S-1-5-80-3338532743-2167017084-2688270890-3351665506-1257551220\thidspi S-1-5-80-2718569444-1738374061-3304332439-3451140840-1824115491\thvcrash S-1-5-80-44780642-2200031541-2427509763-915290973-996987375\tHvHost S-1-5-80-2939390288-356272421-3595829934-3436785230-198171780\thvservice S-1-5-80-2274115272-1034313707-3787864051-261592831-2149061657\tHwNClx0101 S-1-5-80-1636647319-4072889561-245816251-3892323420-125393640\thyperkbd S-1-5-80-1568740187-908130129-1280451789-1901112753-2221687382\tHyperVideo S-1-5-80-2670277838-3947594761-3239889572-3393358898-1622853222\tiagpio S-1-5-80-2158641323-386083531-4194214369-34619318-3813434458\tiai2c S-1-5-80-1751987400-2816258287-31600907-3962047115-1737274117\tiaLPSS2i_GPIO2 S-1-5-80-1111475540-466917029-2679550370-2578483454-692614412\tiaLPSS2i_GPIO2_BXT_P S-1-5-80-1739240851-3621344408-1713079411-1646377490-2636667785\tiaLPSS2i_GPIO2_CNL S-1-5-80-2673509282-3250608688-4161211656-2193043397-2070765280\tiaLPSS2i_GPIO2_GLK S-1-5-80-2560230824-2699639875-2946887507-2809778676-469529665\tiaLPSS2i_I2C S-1-5-80-12980661-1673373748-4127468638-2895847452-4070398594\tiaLPSS2i_I2C_BXT_P S-1-5-80-2145177943-2751001835-2841195933-1950876073-3621000904\tiaLPSS2i_I2C_CNL S-1-5-80-780176066-3721089017-3511631931-2580781662-523231243\tiaLPSS2i_I2C_GLK S-1-5-80-1532184652-4035834151-1950529856-1922329247-3348818483\tiaLPSSi_GPIO S-1-5-80-730113209-3859422966-2743155648-3421359225-3886647409\tiaLPSSi_I2C S-1-5-80-3323158773-131258738-3057376072-3701579410-1953672022\tiaStorAV S-1-5-80-2020084033-1359107645-3278428846-795142582-1815602196\tiaStorAVC S-1-5-80-3391758085-3386442682-1652486205-1841141806-1992729197\tibbus S-1-5-80-3935728946-315639613-922904133-3250794525-491832002\ticssvc S-1-5-80-2392126525-1736915593-2210125632-2563158532-2616938475\tIndirectKmd S-1-5-80-2284069148-621670086-2606570695-3321162879-2563206788\tInstallService S-1-5-80-3327892994-1960904528-3982671949-1654996949-2464229733\tintelpep S-1-5-80-1900340034-3449890540-182776197-3466871519-875942235\tintelpmax S-1-5-80-3964494243-732302783-2234246214-3803256551-723791621\tiorate S-1-5-80-1954766798-2967939946-3605743322-553214224-2296400261\tIPT S-1-5-80-2355113075-3359631449-3346493237-3667020425-1655874352\tIpxlatCfgSvc S-1-5-80-3226934113-1398865432-993897477-3177498405-3382167683\tItSas35i S-1-5-80-2148130874-1768494572-716210-54149643-3932447678\tkbldfltr S-1-5-80-2271880911-1251856977-1706928486-259807789-537220688\tkdnic S-1-5-80-2876499719-392125430-158013367-819050375-2387260967\tksthunk S-1-5-80-3704025948-1094794811-1175534343-2088422159-783153058\tlfsvc S-1-5-80-2168654060-3115992504-1782388893-2584760693-2634250426\tLicenseManager S-1-5-80-828721388-3792639465-1596558500-741975338-1843353865\tLSI_SAS2i S-1-5-80-1292554068-3641467945-3524739894-1349342977-636852090\tLSI_SAS3i S-1-5-80-4045025553-2976580352-2420774707-2188590102-3192113229\tLSI_SSS S-1-5-80-1230977110-1477712667-2747199032-477530733-939374687\tLSM S-1-5-80-1594061079-2000966165-462148798-751814865-2644087104\tLxpSvc S-1-5-80-3028837079-3186095147-955107200-3701964851-1150726376\tMapsBroker S-1-5-80-3114654814-2921064011-1905572160-152804539-1417807178\tmausbhost S-1-5-80-1689786627-2800348145-589537150-160302296-3926153891\tmausbip S-1-5-80-482631164-113973055-3624764966-2186786627-2645029274\tMbbCx S-1-5-80-1346060813-323363712-587550660-3142329655-742851739\tMcpManagementService S-1-5-80-1684110676-2342826027-2954792854-2461032557-4007556361\tmegasas2i S-1-5-80-2869657570-1778740833-83850822-3186679656-2472655231\tmegasas35i S-1-5-80-4024713676-1017792628-381990976-3540878265-1306153904\tmegasr S-1-5-80-3999755614-3418583833-1896887384-2999918798-210212794\tMessagingService S-1-5-80-202946138-985291779-3159394747-43634094-4075641753\tMessagingService_50fad S-1-5-80-450487634-32044177-1119026171-1009345945-1629791242\tMicrosoftEdgeElevationService S-1-5-80-1290887583-3890804311-3227577290-3287571674-2651233138\tMicrosoft_Bluetooth_AvrcpTransport S-1-5-80-1543190384-3367925291-586273452-2558737455-3425399499\tMixedRealityOpenXRSvc S-1-5-80-3755756047-2886117673-2566125725-1838300879-2590056170\tmlx4_bus S-1-5-80-3088073201-1464728630-1879813800-1107566885-823218052\tmpssvc S-1-5-80-766433145-569980108-2081788762-104033110-3841863914\tMsBridge S-1-5-80-61387632-1770052757-913906803-2764154990-1232092381\tMSDTC Bridge 4.0.0.0 S-1-5-80-1709243854-2721926396-509980330-3397245316-2789600492\tmsgpiowin32 S-1-5-80-2335093085-4288963418-862046716-1348633750-1984735259\tmshidumdf S-1-5-80-3719317199-3405270365-2794832041-2304024896-2914089004\tMsKeyboardFilter S-1-5-80-2542081156-3563385132-3937647205-2588572414-2394664210\tMsLldp S-1-5-80-2804434951-625509142-572389148-2638030035-2993097285\tMsQuic S-1-5-80-3977605483-200570079-739940831-2932290302-2649018641\tMsSecCore S-1-5-80-1868534811-1113969215-1254686383-3122237719-2449736172\tMsSecFlt S-1-5-80-3642563950-456203802-1490755371-2601848954-63880797\tMsSecWfp S-1-5-80-4018724706-2388594414-778837249-3759549757-2342992247\tmvumis S-1-5-80-1693791390-661026542-4284378996-1616250691-2477593537\tNaturalAuthentication S-1-5-80-154974075-1852685594-3179713959-2755908004-3936262621\tNcaSvc S-1-5-80-3169048008-2586333165-76651690-3609634147-4147641610\tNcbService S-1-5-80-639065985-1709096039-2702309040-2770678766-2981280942\tNcdAutoSetup S-1-5-80-1929895091-2833432830-2697471735-1135988795-2264472352\tndfltr S-1-5-80-375564701-3513094222-427343084-2529536460-2480510224\tNdisImPlatform S-1-5-80-1856495872-3151408123-1737732000-490184210-1622466692\tNdisVirtualBus S-1-5-80-3687920589-2211470767-2846922358-2300776228-356028302\tndiswanlegacy S-1-5-80-1488665879-159185889-877450046-2151251822-3875779066\tNDKPing S-1-5-80-3999445478-1493703614-491198216-2250085872-3662815299\tndproxy S-1-5-80-1235769596-2241049241-3512080025-3142132805-3400791542\tNdu S-1-5-80-2475926400-260174619-1668875208-528473860-3272058262\tNetAdapterCx S-1-5-80-2038182892-1846284197-1242326240-2615352543-44767121\tNetbiosSmb S-1-5-80-3290392786-819420393-1694314755-3737624005-3552167228\tNetSetupSvc S-1-5-80-3551186791-2451211144-2320551185-397537932-3221552100\tnetvsc S-1-5-80-2381253463-2694003897-3435975801-3559003598-683041300\tNgcCtnrSvc S-1-5-80-1999281942-4196217620-51267815-1628483199-606183737\tNgcSvc S-1-5-80-389868755-419489745-3026704534-2242740522-2006634936\tnpsvctrig S-1-5-80-3903180505-3896017075-4285990333-2375284902-1925993444\tnvdimm S-1-5-80-3753458296-2578515382-296172075-2568624853-485985677\tOneSyncSvc S-1-5-80-3515428-2931623117-804653153-3478930650-257201455\tOneSyncSvc_50fad S-1-5-80-3145084533-2700894668-2078824647-1465192519-3266618331\tpdc S-1-5-80-4215928932-1248355774-1205732377-1093571376-2379325634\tperceptionsimulation S-1-5-80-1046995410-3007147168-922272172-967041193-3794187727\tpercsas2i S-1-5-80-42157666-624349265-169177574-52107575-3728749841\tpercsas3i S-1-5-80-3596911058-2952229928-1888671852-1743692427-614402820\tPerfHost S-1-5-80-2636612206-2079418197-1004231589-1812192203-4197254245\tPhoneSvc S-1-5-80-2428418161-1754247685-758903264-2475084861-4167363882\tPimIndexMaintenanceSvc S-1-5-80-3410280176-3299602888-1332419371-1911054326-2542463980\tPimIndexMaintenanceSvc_50fad S-1-5-80-2785576034-242416339-385417889-2054053173-3638954698\tPktMon S-1-5-80-3355885494-318102177-1313724702-1621550881-803011355\tpmem S-1-5-80-3239442711-4074742016-684152919-2253013163-2274039561\tPNPMEM S-1-5-80-3082810783-1413926421-1831856127-837733229-953361461\tportcfg S-1-5-80-1250897762-2760119941-576021590-2872322938-624617480\tPrintNotify S-1-5-80-3011530997-228986608-3623458339-2361303491-1043592577\tPrintWorkflowUserSvc S-1-5-80-1552224136-2279772909-4069248841-1973210782-3001653797\tPrintWorkflowUserSvc_50fad S-1-5-80-2949785411-1458004381-4011503523-1439849274-3428788682\tPushToInstall S-1-5-80-1681795462-3431334705-92433549-1962541325-160118133\tRamdisk S-1-5-80-2223301817-4248418169-3249847036-321434835-1272792247\tRDMANDK S-1-5-80-1934309797-2043993622-339923705-3871978825-766431271\tRDPUDD S-1-5-80-3072462152-34466603-861212222-1753422877-4071721522\tRdpVideoMiniport S-1-5-80-1596569074-2677311441-962104887-2749517281-2857086053\tReFS S-1-5-80-2316697869-4025289487-468236631-2575080373-2608813053\tReFSv1 S-1-5-80-457603595-166122335-4119162879-888033224-3685571132\tRetailDemo S-1-5-80-2932307366-730193993-4255125875-3321969383-2534286350\tRFCOMM S-1-5-80-3216188369-3897538938-543323431-4144952942-4182718943\trhproxy S-1-5-80-3765985997-1043742756-2756022526-3497566756-2081646175\tRmSvc S-1-5-80-3993802144-2555107232-3516638766-2735499450-3275915967\tScDeviceEnum S-1-5-80-739156932-4202345562-1098723576-2529635932-2179704457\tscmbus S-1-5-80-3730768523-2660761635-2080149804-588026050-2891317352\tsdbus S-1-5-80-2993119251-3416827737-2039089254-2988278179-172925588\tSDFRd S-1-5-80-106427005-851153787-2361826242-1841078065-3276170637\tsdstor S-1-5-80-259296475-4084429506-1152984619-38739575-565535606\tSecurityHealthService S-1-5-80-2226967063-754826275-1661302337-2802353169-2369347280\tSEMgrSvc S-1-5-80-1523878533-411328482-2798077809-3098663872-2604013308\tSense S-1-5-80-3835358604-2805616403-1686431098-2148037164-3679743528\tSensorDataService S-1-5-80-869152694-422618349-3448047118-1397179936-2828741493\tSensorService S-1-5-80-3391662211-1836087953-1525834830-1506885508-682969218\tSerCx S-1-5-80-3290564682-3359114709-1529561987-4148060287-271116923\tSerCx2 S-1-5-80-1582054788-470990004-40152839-730814383-1124151202\tSgrmAgent S-1-5-80-3706850399-3459138796-2835936764-562029542-397710147\tSgrmBroker S-1-5-80-3246321066-2451215914-3422911474-2201726393-166328789\tSharedRealitySvc S-1-5-80-4106268995-3617844033-680706512-3896918354-2380077472\tshpamsvc S-1-5-80-3842628764-1253170212-1172882037-4289227758-4267631040\tSmartSAMD S-1-5-80-1821507682-1115666477-1591553307-1734210999-3312719974\tsmbdirect S-1-5-80-230328282-2568015442-686465752-3474446193-2137307224\tsmphost S-1-5-80-2950457502-2299174248-3328245479-1326271200-3113355612\tSmsRouter S-1-5-80-217413056-3833387362-178569430-1954288181-1272411947\tSMSvcHost 4.0.0.0 S-1-5-80-2030916845-920430783-420616369-4268599728-1745276005\tspaceparser S-1-5-80-3804375463-2979979117-3280645550-3527107762-3022760719\tspaceport S-1-5-80-664203522-3160570195-1635065499-2708521076-3299712393\tSpatialGraphFilter S-1-5-80-3979690135-2752926531-2282419748-2415739691-1066856619\tSpbCx S-1-5-80-2731152606-4244467407-1946816704-3721569673-479255522\tspectrum S-1-5-80-2277354432-2697620045-1656008878-1855416240-261295475\tssh-agent S-1-5-80-4118144674-975173503-976751360-2062754009-4288402176\tStateRepository S-1-5-80-3182985763-1431228038-2757062859-428472846-3914011746\tstisvc S-1-5-80-341174513-3036333638-3617001766-2776055326-2809179524\tstorahci S-1-5-80-4243609067-2923323804-3669886039-3498181113-4202203050\tstornvme S-1-5-80-2198686546-2221861197-1858316108-2015056224-400908585\tstorqosflt S-1-5-80-2019411066-3003329723-2609168412-3625837524-2221108837\tstorufs S-1-5-80-2483706823-3321877870-553300257-593996131-450212729\tsvsvc S-1-5-80-927584136-3246479672-3996289350-2713334021-2098405977\tSynth3dVsc S-1-5-80-1662832393-3268938575-4001313665-1200257238-783911988\tSystemEventsBroker S-1-5-80-842221325-3630721446-2015653073-424833842-1069621030\tTcpip6 S-1-5-80-1003279123-1651757316-1243245493-3539186934-1753552613\tTelemetry S-1-5-80-3141112300-3466319987-880208219-2791244925-2953947883\tterminpt S-1-5-80-427241336-4111990062-2791250970-2845566439-1217505164\tTieringEngineService S-1-5-80-410965207-2550896871-1717734767-2321332215-3755966139\tTimeBrokerSvc S-1-5-80-4077216321-3151206942-641340059-4241647091-1300899357\tTokenBroker S-1-5-80-325036955-4200148024-1479951852-2634116931-2865895459\tTPM S-1-5-80-1139522462-2689595747-457373284-4037083511-4201549542\tTroubleshootingSvc S-1-5-80-3547539953-1452514991-991928397-2821742631-2888215071\tTsUsbFlt S-1-5-80-651631395-3385332028-373277408-2457879084-1955742111\tTsUsbGD S-1-5-80-2292203918-1506848946-3955473809-4024494573-4108135173\ttsusbhub S-1-5-80-3641914668-2724251012-1186334157-2460844255-322272688\ttzautoupdate S-1-5-80-3033002672-3264167506-3374793840-2611327823-1324250788\tUASPStor S-1-5-80-3559279508-480464440-2060053639-2450836018-584673110\tUcmCx0101 S-1-5-80-986347966-4291837576-3105858776-4112886612-1615276934\tUcmTcpciCx0101 S-1-5-80-2946873420-2809826944-3342656785-1798640712-1793966795\tUcmUcsiAcpiClient S-1-5-80-3947455493-1779752151-1865639843-1092346862-2012747891\tUcmUcsiCx0101 S-1-5-80-3476958810-2644384738-2655413726-1639285643-1444265662\tUcx01000 S-1-5-80-227846823-3077342265-3698762170-815164292-2633305508\tUdeCx S-1-5-80-2008930627-2960539461-4086452603-1305618659-1299222103\tUdkUserSvc S-1-5-80-2960622349-2603655608-463014845-353330955-2631882611\tUdkUserSvc_50fad S-1-5-80-259741192-1658403178-390766877-3226735796-603445823\tUEFI S-1-5-80-3429946394-717031342-3915206314-2329540128-2872892288\tUevAgentDriver S-1-5-80-1639943639-1314739636-372181295-777240325-3530900257\tUevAgentService S-1-5-80-1983721769-1446015346-1638820087-833790554-4117195697\tUfx01000 S-1-5-80-2486803200-2786917169-1479676890-818817034-2254858114\tUfxChipidea S-1-5-80-3461039289-3711732118-2967254728-2566641523-4135479736\tufxsynopsys S-1-5-80-951045732-3304998411-4140413591-2375454759-2566081399\tUnistoreSvc S-1-5-80-1232783531-1412289346-3408063018-2430219916-590553325\tUnistoreSvc_50fad S-1-5-80-948646300-214352964-3153699637-3534669071-395810831\tUrsChipidea S-1-5-80-311046983-1549683341-1485789459-3189993376-3259784172\tUrsCx01000 S-1-5-80-3858170093-3095794678-3940928812-3402197675-2417274444\tUrsSynopsys S-1-5-80-1038357558-2508750332-1127516358-2098882773-1571978916\tusbaudio S-1-5-80-3715696977-77976676-2422196092-1701963391-244329408\tusbaudio2 S-1-5-80-2532058633-1854360046-4195713749-973563373-2229526857\tUSBHUB3 S-1-5-80-322830934-407560818-413383929-2953137197-2859522744\tusbser S-1-5-80-811199202-3756583514-1800339595-8156802-767824446\tUSBXHCI S-1-5-80-2995899262-2131376444-1860748247-2210972999-1941275431\tUserDataSvc S-1-5-80-339627148-1085118590-1191147914-145126631-47496027\tUserDataSvc_50fad S-1-5-80-2008603874-3981339663-2468433650-2111681540-3858834245\tUserManager S-1-5-80-223807737-1693445485-119162242-1977420160-1403034029\tUsoSvc S-1-5-80-1989757894-211065159-731672622-1783776043-3948168785\tVacSvc S-1-5-80-2231687835-1975921998-2379643093-1123054981-1892632637\tVerifierExt S-1-5-80-2337629457-4082528419-1990172282-783805348-776062068\tvhf S-1-5-80-4056652736-3832535469-1849010726-800110142-2900318757\tVid S-1-5-80-4005553843-2860153778-2672767370-1614289598-2532660634\tVirtualRender S-1-5-80-3419770058-1088902930-2242902800-2505332296-3985202246\tvmgid S-1-5-80-3074984378-4122987768-2130325677-2031866499-3405430279\tvmicguestinterface S-1-5-80-534935901-3437432317-481271085-1710633381-983106267\tvmicheartbeat S-1-5-80-1877308096-3090306141-3032871208-3115266146-1400827410\tvmickvpexchange S-1-5-80-3076811988-2254870394-2658297454-3934945422-2393138642\tvmicrdv S-1-5-80-3110303136-3426481729-3186938678-1087894076-2178433439\tvmicshutdown S-1-5-80-3098585136-2538892366-1097114017-2832417424-2016953023\tvmictimesync S-1-5-80-235582178-102246843-358262472-4132936818-1867412993\tvmicvmsession S-1-5-80-1752088424-1054500994-3489791022-3310831482-3926524968\tvmicvss S-1-5-80-2476029939-3227366791-4018265514-4032530291-4172793725\tvolume S-1-5-80-1770745653-882454895-2389083440-3735684190-802018898\tvpci S-1-5-80-1072045427-3277916734-2175442256-760694638-1728218837\tVSTXRAID S-1-5-80-3303534547-3920260423-752829696-1552054067-268166277\tvwififlt S-1-5-80-2169053098-454685327-3448947123-3791923320-414336915\tWaaSMedicSvc S-1-5-80-1874328037-1620432936-4113708365-722077214-3851787529\tWalletService S-1-5-80-145391760-3682396335-1395736941-2543690743-1822485816\twanarp S-1-5-80-3957613141-1606606214-622769385-3049525404-2510868034\twanarpv6 S-1-5-80-2145785123-2886438689-3072542501-3020378507-1504386134\tWarpJITSvc S-1-5-80-1468946484-2183346801-2582215073-2203958287-114577455\twcifs S-1-5-80-4155767994-3874329934-3800885181-2130851812-726865888\tWcmsvc S-1-5-80-486657452-3436462838-2743705563-1382716400-3286987141\twcnfs S-1-5-80-3188579509-896559776-1549670742-2760322350-3311614235\tWdBoot S-1-5-80-2003142183-3009844670-3971145999-3073937758-3917121208\tWdFilter S-1-5-80-499275411-3916059529-905482537-4117857359-1999665194\twdiwifi S-1-5-80-2105769960-3462231971-121635667-3410645665-2561607156\tWdmCompanionFilter S-1-5-80-2946744033-2833218566-1164540619-314168540-3391284662\tWdNisDrv S-1-5-80-3668810961-2468724468-4084584310-3029221373-430494444\tWdNisSvc S-1-5-80-1282825935-788281630-359899028-1878232204-2860951615\tWEPHOSTSVC S-1-5-80-1495648203-2503502111-1597754693-3445174711-1316708627\tWFDSConMgrSvc S-1-5-80-2768376765-85268660-951480638-2317617532-3422828864\tWFPLWFS S-1-5-80-533360197-2630880149-807505739-2151714924-2570839994\tWiaRpc S-1-5-80-3488966095-3237316714-2152248236-3202922946-3275547626\tWindows Workflow Foundation 4.0.0.0 S-1-5-80-1314485122-3970895080-1653179290-3214604197-56682579\tWindowsTrustedRT S-1-5-80-2899914805-2506168806-919368875-2051509565-976885860\tWindowsTrustedRTProxy S-1-5-80-350045039-4213533676-3741949053-609707664-895491048\tWinMad S-1-5-80-4015764710-1917268369-2628323210-1820452808-4095801055\tWinNat S-1-5-80-2971715461-3208067863-1422018366-770925591-1162363329\tWINUSB S-1-5-80-1409370327-2262994431-3181734005-3492817815-127119016\tWinVerbs S-1-5-80-2429767553-128593128-2427591838-1778256749-2155598187\twisvc S-1-5-80-1428027539-3309602793-2678353003-1498846795-3763184142\tWlanSvc S-1-5-80-2952724807-2252311773-3412998076-2712868122-780978283\twlidsvc S-1-5-80-3916113136-2435487254-2535488001-4050622930-2364918814\twlpasvc S-1-5-80-3577588319-513283748-931039988-2701962192-2148388740\tWManSvc S-1-5-80-1635442456-4231674260-3066288937-1147435026-1365933032\tWof S-1-5-80-3413159032-3694667005-1396569551-1250786377-1429361823\tworkerdd S-1-5-80-3006764832-2469330069-4024865495-2754276538-3243839463\tworkfolderssvc S-1-5-80-2657955583-569354589-921901904-1883788092-850583853\tWpcMonSvc S-1-5-80-358856340-4190185137-1150018170-4132368399-2594611401\tWpdUpFltr S-1-5-80-1938892561-4120931771-3580170924-3403102300-2651602529\tWpnService S-1-5-80-951620777-1059631183-2804607755-3010024351-809615488\tWpnUserService S-1-5-80-1069300804-2231982870-930986846-425802403-2676852813\tWpnUserService_50fad S-1-5-80-1803441692-2341117941-3526855333-3767870088-2684717574\tWUDFWpdFs S-1-5-80-472864980-3821642676-709327584-2321888604-4243627364\tXblAuthManager S-1-5-80-2649222292-2060825207-2866066902-505902355-282187514\tXblGameSave S-1-5-80-794853676-1269112726-2386671565-1760138502-3367587780\txboxgip S-1-5-80-3605394182-687838168-1441221562-1662690741-4241567093\tXboxGipSvc S-1-5-80-1352715831-1104254428-97934242-2131353953-1898040052\tXboxNetApiSvc S-1-5-80-1281037624-1782002805-990284447-3522102690-2853398433\txinputhid 3. Open ports Volatility seems to have no support for this functionality for Windows 10 / 11, so I will do it from the machine\u0026rsquo;s own powershell:\n(volatility) javiercruces@HPOMEN15:~/volatility3$ sudo python3 vol.py -f \u0026#34;/mnt/vdb/memoria/memdump.mem\u0026#34; windows.netstat Volatility 3 Framework 2.5.2 PS C:\\Windows\\system32\u0026gt; Get-NetTCPConnection | Where-Object {$_.State -eq \u0026#39;Listen\u0026#39;} | Select-Object LocalAddress, LocalPort LocalAddress LocalPort ------------ --------- :: 49670 :: 49669 :: 49668 :: 49667 :: 49666 :: 49665 :: 49664 :: 7680 :: 5357 :: 3389 :: 445 :: 135 0.0.0.0 49670 0.0.0.0 49669 0.0.0.0 49668 0.0.0.0 49667 0.0.0.0 49666 0.0.0.0 49665 0.0.0.0 49664 0.0.0.0 5040 0.0.0.0 3389 192.168.122.203 139 0.0.0.0 135 4. Connections established by the machine Like the above point, it seems that volatility has no support for the current versions of windows:\n(volatility) javiercruces@HPOMEN15:~/volatility3$ sudo python3 vol.py -f \u0026#34;/mnt/vdb/memoria/memdump.mem\u0026#34; windows.netscan.NetScan PS C:\\Windows\\system32\u0026gt; Get-NetTCPConnection | Where-Object {$_.State -eq \u0026#39;Established\u0026#39; -and $_.LocalAddress -ne \u0026#39;127.0.0.1\u0026#39;} | Select-Object LocalAddress, LocalPort, RemoteAddress, RemotePort, State LocalAddress : 192.168.122.203 LocalPort : 49855 RemoteAddress : 142.250.200.138 RemotePort : 443 State : Established LocalAddress : 192.168.122.203 LocalPort : 49853 RemoteAddress : 184.28.177.55 RemotePort : 80 State : Established LocalAddress : 192.168.122.203 LocalPort : 49846 RemoteAddress : 2.20.253.149 RemotePort : 443 State : Established LocalAddress : 192.168.122.203 LocalPort : 49845 RemoteAddress : 184.28.177.9 RemotePort : 443 State : Established 5. User sessions set remotely (volatility) javiercruces@HPOMEN15:~/volatility3$ sudo python3 vol.py -f \u0026#34;/mnt/vdb/memoria/memdump.mem\u0026#34; windows.sessions.Sessions Volatility 3 Framework 2.5.2 Progress: 100.00\tPDB scanning finished Session ID\tSession Type\tProcess ID\tProcess\tUser Name\tCreate Time N/A\t-\t4\tSystem\t-\t2024-02-05 19:30:59.000000 N/A\t-\t92\tRegistry\t-\t2024-02-05 19:30:56.000000 N/A\t-\t344\tsmss.exe\t-\t2024-02-05 19:30:59.000000 0\t-\t448\tcsrss.exe\t/SYSTEM\t2024-02-05 19:31:15.000000 0\t-\t516\twininit.exe\t/SYSTEM\t2024-02-05 19:31:15.000000 0\t-\t648\tservices.exe\t/SYSTEM\t2024-02-05 19:31:15.000000 0\t-\t668\tlsass.exe\t/SYSTEM\t2024-02-05 19:31:15.000000 0\t-\t768\tfontdrvhost.ex\tFont Driver Host/UMFD-0\t2024-02-05 19:31:15.000000 0\t-\t788\tsvchost.exe\tWORKGROUP/DESKTOP-KG80ESU$\t2024-02-05 19:31:15.000000 0\t-\t880\tsvchost.exe\tWORKGROUP/DESKTOP-KG80ESU$\t2024-02-05 19:31:15.000000 0\t-\t400\tsvchost.exe\tWORKGROUP/DESKTOP-KG80ESU$\t2024-02-05 19:31:16.000000 0\t-\t444\tsvchost.exe\tWORKGROUP/DESKTOP-KG80ESU$\t2024-02-05 19:31:16.000000 0\t-\t584\tsvchost.exe\tNT AUTHORITY/SERVICIO LOCAL\t2024-02-05 19:31:16.000000 0\t-\t1032\tsvchost.exe\tNT AUTHORITY/SERVICIO LOCAL\t2024-02-05 19:31:16.000000 0\t-\t1040\tsvchost.exe\tWORKGROUP/DESKTOP-KG80ESU$\t2024-02-05 19:31:16.000000 0\t-\t1244\tsvchost.exe\tNT AUTHORITY/SERVICIO LOCAL\t2024-02-05 19:31:16.000000 0\t-\t1460\tsvchost.exe\tWORKGROUP/DESKTOP-KG80ESU$\t2024-02-05 19:31:16.000000 0\t-\t1520\tsvchost.exe\tWORKGROUP/DESKTOP-KG80ESU$\t2024-02-05 19:31:16.000000 0\t-\t1572\tsvchost.exe\tNT AUTHORITY/SERVICIO LOCAL\t2024-02-05 19:31:16.000000 0\t-\t1924\tsvchost.exe\tNT AUTHORITY/SERVICIO LOCAL\t2024-02-05 19:31:16.000000 0\t-\t1956\tsvchost.exe\tNT AUTHORITY/SERVICIO LOCAL\t2024-02-05 19:31:16.000000 0\t-\t1052\tsvchost.exe\tWORKGROUP/DESKTOP-KG80ESU$\t2024-02-05 19:31:16.000000 0\t-\t1068\tsvchost.exe\tNT AUTHORITY/SERVICIO LOCAL\t2024-02-05 19:31:16.000000 0\t-\t1232\tsvchost.exe\tNT AUTHORITY/SERVICIO LOCAL\t2024-02-05 19:31:16.000000 0\t-\t1568\tspoolsv.exe\tWORKGROUP/DESKTOP-KG80ESU$\t2024-02-05 19:31:16.000000 0\t-\t2052\tsvchost.exe\tNT AUTHORITY/SERVICIO LOCAL\t2024-02-05 19:31:16.000000 0\t-\t2300\tsvchost.exe\tWORKGROUP/DESKTOP-KG80ESU$\t2024-02-05 19:31:17.000000 0\t-\t2412\tMsMpEng.exe\tWORKGROUP/DESKTOP-KG80ESU$\t2024-02-05 19:31:17.000000 0\t-\t2868\tsvchost.exe\tWORKGROUP/DESKTOP-KG80ESU$\t2024-02-05 19:31:18.000000 0\t-\t3044\tdasHost.exe\tNT AUTHORITY/SERVICIO LOCAL\t2024-02-05 19:31:18.000000 0\t-\t664\tsvchost.exe\tNT AUTHORITY/SERVICIO LOCAL\t2024-02-05 19:31:19.000000 0\t-\t3868\tWUDFHost.exe\t/SYSTEM\t2024-02-05 19:31:38.000000 0\t-\t3068\tNisSrv.exe\tNT AUTHORITY/SERVICIO LOCAL\t2024-02-05 19:31:39.000000 0\t-\t4452\tSearchIndexer.\tWORKGROUP/DESKTOP-KG80ESU$\t2024-02-05 19:31:40.000000 0\t-\t5828\tWmiPrvSE.exe\tWORKGROUP/DESKTOP-KG80ESU$\t2024-02-05 19:31:44.000000 0\t-\t6028\tGoogleCrashHan\t-\t2024-02-05 19:31:45.000000 0\t-\t6092\tGoogleCrashHan\tWORKGROUP/DESKTOP-KG80ESU$\t2024-02-05 19:31:45.000000 0\t-\t3236\tSecurityHealth\tWORKGROUP/DESKTOP-KG80ESU$\t2024-02-05 19:31:54.000000 0\t-\t7020\tsvchost.exe\tWORKGROUP/DESKTOP-KG80ESU$\t2024-02-05 19:33:17.000000 0\t-\t4788\tSgrmBroker.exe\t-\t2024-02-05 19:33:18.000000 0\t-\t760\tsvchost.exe\tNT AUTHORITY/SERVICIO LOCAL\t2024-02-05 19:33:18.000000 1\t-\t528\tcsrss.exe\t/SYSTEM\t2024-02-05 19:31:15.000000 1\t-\t612\twinlogon.exe\t/SYSTEM\t2024-02-05 19:31:15.000000 1\t-\t776\tfontdrvhost.ex\tFont Driver Host/UMFD-1\t2024-02-05 19:31:15.000000 1\t-\t988\tdwm.exe\t/SYSTEM\t2024-02-05 19:31:15.000000 1\t-\t996\tLogonUI.exe\t/SYSTEM\t2024-02-05 19:31:15.000000 N/A\t-\t1768\tMemCompression\t-\t2024-02-05 19:31:16.000000 2\t-\t3792\tcsrss.exe\t/SYSTEM\t2024-02-05 19:31:38.000000 2\t-\t3840\twinlogon.exe\t/SYSTEM\t2024-02-05 19:31:38.000000 2\t-\t3960\tfontdrvhost.ex\tFont Driver Host/UMFD-2\t2024-02-05 19:31:38.000000 2\t-\t4020\tdwm.exe\t/SYSTEM\t2024-02-05 19:31:38.000000 2\t-\t3456\trdpclip.exe\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:31:39.000000 2\t-\t3616\tsihost.exe\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:31:39.000000 2\t-\t3400\tsvchost.exe\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:31:39.000000 2\t-\t3188\ttaskhostw.exe\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:31:39.000000 2\t-\t3344\tctfmon.exe\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:31:39.000000 2\t-\t4208\tuserinit.exe\t-\t2024-02-05 19:31:40.000000 2\tRDP-Tcp#1\t4236\texplorer.exe\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:31:40.000000 2\t-\t4388\tsvchost.exe\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:31:40.000000 2\t-\t4876\tStartMenuExper\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:31:41.000000 2\t-\t5096\tRuntimeBroker.\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:31:42.000000 2\t-\t4732\tSearchApp.exe\t-\t2024-02-05 19:31:42.000000 2\t-\t5184\tRuntimeBroker.\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:31:42.000000 2\t-\t3740\tRuntimeBroker.\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:31:52.000000 2\t-\t1912\tsmartscreen.ex\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:31:54.000000 2\tRDP-Tcp#1\t3524\tSecurityHealth\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:31:54.000000 2\tRDP-Tcp#1\t820\tOneDrive.exe\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:31:55.000000 2\tRDP-Tcp#1\t6128\tchrome.exe\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:31:56.000000 2\t-\t2040\tchrome.exe\t-\t2024-02-05 19:31:57.000000 2\tRDP-Tcp#1\t5404\tchrome.exe\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:31:57.000000 2\tRDP-Tcp#1\t5392\tchrome.exe\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:31:57.000000 2\tRDP-Tcp#1\t5348\tchrome.exe\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:31:57.000000 2\t-\t5496\tchrome.exe\t-\t2024-02-05 19:31:57.000000 2\t-\t6184\tchrome.exe\t-\t2024-02-05 19:31:57.000000 2\t-\t6200\tchrome.exe\t-\t2024-02-05 19:31:57.000000 2\t-\t6380\tTextInputHost.\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:31:57.000000 2\t-\t6556\tdllhost.exe\t-\t2024-02-05 19:31:58.000000 2\t-\t6156\tchrome.exe\t-\t2024-02-05 19:33:00.000000 2\t-\t5284\tchrome.exe\t-\t2024-02-05 19:33:00.000000 2\t-\t4036\tchrome.exe\t-\t2024-02-05 19:33:05.000000 2\t-\t6916\tFTK Imager.exe\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:33:11.000000 2\t-\t6044\tApplicationFra\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:33:14.000000 2\t-\t6104\tCalculator.exe\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:33:14.000000 2\t-\t5864\tRuntimeBroker.\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:33:14.000000 2\t-\t7348\tHxCalendarAppI\t-\t2024-02-05 19:33:20.000000 2\t-\t7412\tRuntimeBroker.\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:33:20.000000 2\t-\t7476\tHxTsr.exe\t-\t2024-02-05 19:33:20.000000 2\t-\t7816\tTaskmgr.exe\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:33:22.000000 2\t-\t8072\texplorer.exe\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:33:34.000000 2\t-\t7256\tPaintStudio.Vi\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:33:39.000000 2\t-\t7796\tRuntimeBroker.\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:33:40.000000 2\t-\t900\tTime.exe\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:33:42.000000 2\t-\t2132\tRuntimeBroker.\tDESKTOP-KG80ESU/javiercruces\t2024-02-05 19:33:43.000000 6. Ficheros recently transferred by NetBios Volatility has no support for this function:\nBeing in an isolated network without any other Windows, files have not been transferred using this protocol\nPS C:\\Windows\\system32\u0026gt; Get-WinEvent -LogName Security | Where-Object {$_.Message -match \u0026#34;EventID: 5140\u0026#34;} | Select-Object TimeCreated, @{Name=\u0026#34;File\u0026#34;;Expression={$_.Properties[8].Value}} PS C:\\Users\\javiercruces\u0026gt; NBTSTAT -n Ethernet: Dirección IP del nodo: [192.168.122.203] Id. de ámbito : [] Tabla de nombres locales NetBIOS Nombre Tipo Estado --------------------------------------------- DESKTOP-KG80ESU\u0026lt;20\u0026gt; Único Registrado DESKTOP-KG80ESU\u0026lt;00\u0026gt; Único Registrado WORKGROUP \u0026lt;00\u0026gt; Grupo Registrado 7. DNS cache content Volatility has no support for this function:\nPS C:\\Windows\\system32\u0026gt; ipconfig /displaydns Configuración IP de Windows edgedl.me.gvt1.com ---------------------------------------- Nombre de registro . : edgedl.me.gvt1.com Tipo de registro . . : 1 Período de vida . . . : 897 Longitud de datos . . : 4 Sección . . . . . . . : respuesta Un registro (host). . : 34.104.35.123 msedge.b.tlu.dl.delivery.mp.microsoft.com ---------------------------------------- Nombre de registro . : msedge.b.tlu.dl.delivery.mp.microsoft.com Tipo de registro . . : 5 Período de vida . . . : 44 Longitud de datos . . : 8 Sección . . . . . . . : respuesta Registro CNAME. . . . : cdp-tlu-shim.trafficmanager.net 8. Environment variables (volatility) javiercruces@HPOMEN15:~/volatility3$ sudo python3 vol.py -f \u0026#34;/mnt/vdb/memoria/memdump.mem\u0026#34; windows.envars 2132\tRuntimeBroker.\t0x1ae8f803400\tUSERDOMAIN\tDESKTOP-KG80ESU 2132\tRuntimeBroker.\t0x1ae8f803400\tUSERDOMAIN_ROAMINGPROFILE\tDESKTOP-KG80ESU 2132\tRuntimeBroker.\t0x1ae8f803400\tUSERNAME\tjaviercruces 2132\tRuntimeBroker.\t0x1ae8f803400\tUSERPROFILE\tC:\\Users\\javiercruces 2132\tRuntimeBroker.\t0x1ae8f803400\twindir\tC:\\Windows Analyzing the Windows Registry For this we download the Registry Viewer 2.0.0 https: / / www.exteriro.com / ftk-product-download / registry-viewer-2-0-0\nWe open the system file that is the Windows registry:\n9. USB devices connected Autopsy:\n10. Wifi networks used recently. We can find it in \u0026ndash; \u0026gt; system / ControlSet001 / Control / Network / Connections\n11. Node firewall configuration. system\\ ControlSet001\\ Services\\ SharedAccess\\ Parameters\\ FirewallPolicy\n12. Programs that run at the Start. software\\ Microsoft\\ Windows\\ Performance\\ Run\n13. Association of file and application extensions. It\u0026rsquo;s under this directory \u0026ndash; \u0026gt; software\\ Classes\n14. Applications used recently. 15. Ficheros open recently. 16. Software Installed. 17. Passwords kept. 18. User Accounts We can see the answers to the security questions:\nWith third-party applications: 19. History of navigation and downloads. Cookies. History: Downloads:\nCookies:\n20. Encryption volumes It shows you the encrypted FICHERS:\nOn the image of the disk: 21. Files with changed extension We will see that the MIME type matches the extension: There is also an artifact that allows us to see the files that are with another extension:\n22. Deleted files You have a specific section that tells you the deleted files: But if you browse the directories, you will be informed if there are any deleted files in it:\n23. Hidden Files 24. Files containing a given chain 25. Search for images by location. The location of autopsy doesn\u0026rsquo;t locate my image, so I\u0026rsquo;ll use an external tool.\n26. File search by author. Box B Linux Machine. Try to perform the same operations on a Linux machine for those sections that make sense and are not performed in an identical way to Windows.\nBy using volatility for this part, I do not recognize the plugins for the specific version of Debian, I have generated them following this tutorial: https: / / markuta.com / live-memory-acquisition -on-linux-systems /\nHowever I do not recognize them and have used both volatility 2 and version 3. I will connect to the machine and indicate you with commands how to show each exercise, I have no other. What I will do is redirect the output of the commands to a file on the device in which I have stored the spins.\n1. Processes in progress root@debian:~# ps aux \u0026gt; /mnt/procesos root@debian:~# cat /mnt/procesos USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 1 0.3 0.6 102660 12616 ? Ss 16:44 0:00 /sbin/init root 2 0.0 0.0 0 0 ? S 16:44 0:00 [kthreadd] root 3 0.0 0.0 0 0 ? I\u0026lt; 16:44 0:00 [rcu_gp] 2. Services in progress root@debian:~# systemctl list-units --type=service --state=running \u0026gt; /mnt/servicios_corriendo root@debian:~# systemctl list-units --type=service --state=running UNIT LOAD ACTIVE SUB DESCRIPTION accounts-daemon.service loaded active running Accounts Service avahi-daemon.service loaded active running Avahi mDNS/DNS-SD Stack colord.service loaded active running Manage, Install and Generate Color Profiles 3. Open ports root@debian:~# ss -tuln \u0026gt; /mnt/puertos_abiertos root@debian:~# ss -tuln Netid State Recv-Q Send-Q Local Address:Port Peer Address:Port Process udp UNCONN 0 0 0.0.0.0:631 0.0.0.0:* udp UNCONN 0 0 0.0.0.0:42925 0.0.0.0:* 4. Connections established by the machine root@debian:~# ss -an \u0026gt; /mnt/conexiones_establecidas root@debian:~# ss -an u_dgr ESTAB 0 0 * 19629 * 19630 u_str ESTAB 0 0 /run/user/112/pipewire-0 19262 * 19261 u_str ESTAB 0 0 * 18971 * 18972 u_str ESTAB 0 0 * 18439 * 18440 5. User sessions set remotely root@debian:~# who javiercruces pts/0 2024-02-18 16:44 (192.168.122.1) javiercruces pts/1 2024-02-18 16:46 (192.168.122.1) root@debian:~# who \u0026gt; /mnt/conexiones_remtoas #7. DNS cache content\nroot@debian:~# sudo journalctl -u systemd-resolved \u0026gt; /mnt/cachedns 8. Environment variables root@debian:~# env \u0026gt; /mnt/variables_entorno 9. USB devices connected root@debian:~# lsusb Bus 002 Device 002: ID 46f4:0001 QEMU QEMU USB HARDDRIVE Bus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub Bus 001 Device 002: ID 0627:0001 Adomax Technology Co., Ltd QEMU Tablet Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub root@debian:~# lsusb \u0026gt; /mnt/usb_conectados 10. recently used wifi networks Al ser un MV no tenemos historial de redes wifi 11. Node firewall configuration root@debian:~# sudo iptables -L Chain INPUT (policy ACCEPT) target prot opt source destination Chain FORWARD (policy ACCEPT) target prot opt source destination Chain OUTPUT (policy ACCEPT) target prot opt source destination DROP tcp -- anywhere anywhere tcp dpt:9999 root@debian:~# sudo iptables -L \u0026gt; /mnt/firewall_nodo 12. Programs being implemented at Home root@debian:~# systemctl list-unit-files --type=service \u0026gt; /mnt/servicios_incio netfilter-persistent.service enabled enabled networking.service enabled enabled 13. Association of file and application extensions root@debian:~# cat /usr/share/applications/mimeinfo.cache \u0026gt; /mnt/asosiacion_ficheros_ext 14. Newly used applications The closest thing to this, in Linux is to see what every user has done, so I\u0026rsquo;ll get all the records:\nroot@debian:~# sudo cat /home/*/.bash_history \u0026gt; /mnt/historial_usuarios root@debian:~# sudo cat /root/.bash_history \u0026gt; /mnt/historial_root 15. Recently opened records It will depend on the route of the files, I will set an example for the home root@debian:~# ls -lu /home/*/ \u0026gt; /mnt/ficheros_recientes 16. Installed Software root@debian:~# dpkg --get-selections \u0026gt; /mnt/paquetes_instalados 17. Passwords saved Some configuration passwords are saved within our user\u0026rsquo;s home directory, if we want to see the browser\u0026rsquo;s, we will find it in the same place as autopsy.\n18. User Accounts root@debian:~# cat /etc/passwd | cut -d \u0026#34;:\u0026#34; -f 1 \u0026gt; /mnt/lista_usuarios sshd debian user1 19. History of navigation, downloads and Cookies History:\nCookies:\nDownloads:\nroot@debian:~# ls -l /home/*/Descargas \u0026gt; /mnt/descargas_usuarios 20 Encryption volumes root@debian:~# lsblk -f | grep crypt └─sda1 crypto_LUKS 2 9fc1bfa7-9224-4e8e-896a-09516d4fd613 21 Files with changed extension The Mismatch Detector device does not charge me, but we can see it by looking at the metadata: 22. Deleted files 23. Hidden Files In Linux, everyone who starts with.\nroot@debian:~# find / -type f -name \u0026#34;.*\u0026#34; \u0026gt; /mnt/ficheros_ocultos 24. Files containing a given chain root@debian:~# grep -rnw / -e \u0026#39;File\u0026#39; \u0026gt; /mnt/FicherosContienenFile 26. File search by author I have already tried that I have not been able to use volatility for these exercises, to use commands to perform the checks manually. To give the exercises more seriousness, I\u0026rsquo;m going to take the hashes out of the different commands to make sure they don\u0026rsquo;t change:\nroot@debian:~# find /mnt/* -type f -exec sha256sum {} + 5b46470021e68c2f5b517fa0bf3daeea665e525d3fa427326c53f93f09968d32 /mnt/asosiacion_ficheros_ext d9ed5ccc5da76e64a158605065f9bdccbb42dfa889d1b66d8c1660a4511065b4 /mnt/conexiones_establecidas 8c65702fe0e26bf57cb2138a618a3cd023be45a23c46e50c77fc191b36c842ca /mnt/conexiones_remtoas bf22d9341614e23448d92045f9ada00f2d62b00491261ec5843adca20e5a4b3a /mnt/descargas_usuarios b63693142f2823a95a11d9f1fcbd845c118b2fc5d0b2508586d0fc6c8fe482af /mnt/discoLinux.raw f5f82603dc58e22f0e38c70321ca1b28524b565b4a85264b07e06a5f9c967024 /mnt/FicherosContienenFile faf7aa5603cb456e86c320549a4b34c12f3167260cb0e8cbfc94ec3ebd42f1ab /mnt/ficheros_ocultos f767cd7a3d0802ebaebb3f18be2d188eb4c16f6a53444e9669f153a304cdb027 /mnt/ficheros_recientes cb910e861a19148c6249fa53cc5b957fb0ae2e0f37ef4081c77aa90e7dde7eb0 /mnt/firewall_nodo 61f44639402d823b9452ad6eaf66eff0ed078fe1cf512c0fdebc9bba9fb58fb1 /mnt/historial_root fed8854df34d3687edcd85697fda768ba58b88fa1b8d788bdd0d033b29209f85 /mnt/historial_usuarios 0a2c590ff6773acf9f601586cb4b013fb65bc32070019acb7368ae4212c07f8d /mnt/lista_usuarios 5f136603c0e34a74a58bc59f1934f5f2850ca8bec9c356a283ee7161a8f39a76 /mnt/memdebian.mem 1b503447d038a0ace6b81aaaf1390ac82ce6e08838a32e0b18b7656048794ebb /mnt/paquetes_instalados 8e29c5c098b2a664c23deb84abe943b666ca0dc05ce8020d0bb110b17e12d60a /mnt/procesos 9b889a5d5a59e615dc8fbbc4de9c5dbeaac1ae97990bab3dda39c3ef18c5dd72 /mnt/puertos_abiertos cf7776ea7ca74f27b5a650ad14b074d3ac400df1b2729bca2e6a9f74696e94c3 /mnt/servicios_corriendo b83d26c9829478eac7c19ff60eecc83b3d139fda26b5e057e882aefdaaeda7da /mnt/servicios_incio 17a519d6c20c48bd9cb39c4fd39dd107ee23c909712fada41cb75ba0d5cb703d /mnt/usb_conectados 575f849aed774bef68eb9cb85823030432afc6bfa3242ef4e1efe5cf14a98a0c /mnt/variables_entorno b419ec819114f21a10bc5146a0b28183165c8b2cf77b2fe160e3044b1b5e04a0 /mnt/vdb Bibliography Guía de Adquisición de Memoria en Sistemas Linux Adquisición de Memoria en Vivo en Linux Análisis Forense en Linux usando Volatility 3 Repositorio Oficial de Volatility 3 Generador de Perfiles DWARF para Volatility (dwarf2json) ISF Server - Entorno para Análisis Forense ","date":"March 28, 2024","hero":"/images/seguridad/informatica_forense.png","permalink":"https://www.javiercd.es/en/posts/seguridad/forense/forense/","summary":"\u003cp\u003eForensics is the set of techniques that allows us to obtain as much information as possible after a computer incident or crime.\nIn this practice, you will perform the evidence-taking and analysis phase on one Linux machine and another Windows. We\u0026rsquo;ll assume we caught the criminal \u0026lsquo;in fraganti\u0026rsquo; and the machines were on. Optionally, you can perform an Android device analysis.\nOn each of the machines you must do a memory and a hard drive, taking the necessary measures to certify the chain of custody.\u003c/p\u003e","tags":["LINUX","DEBIAN","WINDOWS","FORENSE"],"title":"Forensic computer"},{"categories":null,"contents":"Equivalence from GUI to CLI Initially, I started the practice using the command line (CLI), however, I found it more comfortable to do it from the graphic interface. Therefore, I decided to establish an equivalence between the different actions I have carried out during practice and to compare them with their counterpart in the terminal.\n[NOTE] In this post I do a small summary of the equivalencies between the GUI and the CLI of Fortinet that I have used in the 2 Fortinet firewall posts.\nConfigure an interface As we already have the set-up firewall we have 2 options when viewing the configuration of a particular interface.\nSee the configuration of all interfaces:\nshow system interface Or specify a particular one:\nshow system interface port1 If we look at the configuration of the three interfaces I have established during practice, we can note that the syntax is very simple. Virtually, even without prior knowledge of the subject, it is easy to understand.\nFTG # show system interface config system interface edit \u0026#34;port1\u0026#34; set vdom \u0026#34;root\u0026#34; set ip 192.168.122.77 255.255.255.0 set allowaccess https http fgfm set type physical set alias \u0026#34;WAN\u0026#34; set lldp-reception enable set role wan set snmp-index 1 next edit \u0026#34;port2\u0026#34; set vdom \u0026#34;root\u0026#34; set ip 192.168.100.1 255.255.255.0 set allowaccess ping https ssh http fgfm set type physical set alias \u0026#34;LAN\u0026#34; set device-identification enable set lldp-transmission enable set monitor-bandwidth enable set role lan set snmp-index 2 next edit \u0026#34;port3\u0026#34; set vdom \u0026#34;root\u0026#34; set ip 192.168.200.1 255.255.255.0 set type physical set alias \u0026#34;DMZ\u0026#34; set device-identification enable set lldp-transmission enable set role lan set snmp-index 3 next As you can see in the port 1 interface that corresponds to the WAN, previously disable the access to configure it from this interface, but for comfort I have left it enabled to use my laptop\u0026rsquo;s browser.\nA configuration that may interest us is to set up a DHCP interface, in my case I will do it in port 4:\n#Accedemos al modo de configuración FTG # config system interface #Seleccionamos la interfaz 4 FTG (interface) # edit \u0026#34;port4\u0026#34; #La ponemos en modo DHCP FTG (port4) # set mode dhcp #Salimos del modo de configuración FTG (port4) # end Now if we list the interface configuration, the change will have been applied:\nFTG # show system interface port4 config system interface edit \u0026#34;port4\u0026#34; set vdom \u0026#34;root\u0026#34; set mode dhcp set type physical set snmp-index 4 next end At this point, we note that the commands we have used match those that the system shows when listing the configuration.\nNow, what we\u0026rsquo;re interested in is knowing the IP address of our interface. If we want to list all the assigned IP addresses, we simply do not specify the interface name. In my case, I am interested to know the IP address of the port interface 4:\nFTG # get system interface physical port4 == [onboard] ==[port4] mode: dhcp ip: 192.168.122.121 255.255.255.0 ipv6: ::/0 status: up speed: 1000Mbps (Duplex: full) FEC: none FEC_cap: none This is the basic thing we need to start setting up the interfaces. I leave you a [link] (https: / / docs.fortinet.com / document / fortigate / 7.0.0 / cli-reference / 10620 / config-system-interface) to the official documentation where it explains all the details.\nPolicies The next thing we have done in practice is to create rules from the CLI, so I will start by listing the existing rules, remember that in the test version we have a limit of 10 simultaneous rules so I have removed some rules during the performance of it.\nTo make the output more legible we will see a \u0026ldquo;normal\u0026rdquo; rule and a DNAT rule to compare them:\nFTG # show firewall policy config firewall policy edit 1 set name \u0026#34;LAN_WAN_SSH\u0026#34; set uuid 57bba290-e881-51ee-3bbe-3ba5903773ed set srcintf \u0026#34;port2\u0026#34; set dstintf \u0026#34;port1\u0026#34; set action accept set srcaddr \u0026#34;all\u0026#34; set dstaddr \u0026#34;all\u0026#34; set schedule \u0026#34;always\u0026#34; set service \u0026#34;SSH\u0026#34; set nat enable next edit 5 set name \u0026#34;WAN_LAN_DNAT_SSH\u0026#34; set uuid bdd84292-e884-51ee-a5d3-20eabb2fd433 set srcintf \u0026#34;port1\u0026#34; set dstintf \u0026#34;port2\u0026#34; set action accept set srcaddr \u0026#34;all\u0026#34; set dstaddr \u0026#34;DNAT_SSH\u0026#34; set schedule \u0026#34;always\u0026#34; set service \u0026#34;SSH\u0026#34; set utm-status enable set ssl-ssh-profile \u0026#34;certificate-inspection\u0026#34; set ips-sensor \u0026#34;block_xmas\u0026#34; set nat enable next We see that the output is quite clear, if we stop to see the common parameters:\nname: Name we want to give to the rule. UUID: A unique identifier that automatically assigns the FW to each rule. srcintf: Home interface (The way the traffic enters) dstantf: Home interface (From where the traffic enters) action: What action we want you to make the rule accept - 124; deny. srcaddr: address of origin dstaddr: Address of destination schedule: Regulation programming, in case it is a temporary rule this will only be active for a certain time. service: Service name (assigned to a port number) nat: If we want the rule to make SNAT. This would be the basic syntax of each rule as you see between a \u0026ldquo;normal\u0026rdquo; rule and one of DNAT the only thing that changes is the traffic address and the target IP that on this device is a virtual IP.\nIf we want to delete a rule, we will do the following:\n#Accedemos al modo de configuracion de las politicas de seguridad FTG # config firewall policy #Borraremos la regla segun el id de la misma FTG (policy) # delete 2 #Salimos de la configuracion FTG (policy) # end To add a new rule, the syntax is similar to when we list the rules, but we need to specify an ID number when creating it. You should know the number of the last rule you added. If you don\u0026rsquo;t indicate a number, a new rule will not be created.\nFTG#config firewall policy FTG (policy) # edit 12 new entry \u0026#39;12\u0026#39; added FTG (12) # set name \u0026#34;LAN_WAN_DNS\u0026#34; FTG (12) # set srcintf \u0026#34;port2\u0026#34; FTG (12) # set dstintf \u0026#34;port1\u0026#34; FTG (12) # set action accept FTG (12) # set srcaddr \u0026#34;all\u0026#34; FTG (12) # set dstaddr \u0026#34;Google_DNS\u0026#34; FTG (12) # set schedule \u0026#34;always\u0026#34; FTG (12) # set service \u0026#34;DNS\u0026#34; FTG (12) # set nat enable FTG (12) # next FTG (policy) # end There are many more options that I ignore that have not been necessary to use in practice, I leave you a link to the official documentation where details all the different options.\nServices Services are objects that store a number or set of ports that you will later use when creating rules. Although these devices come with the most common manufacturing services, it is often necessary that we create a new one according to our needs.\nAs with the previous listing commands, we can list all the services or one in particular:\nFTG # show firewall service custom config firewall service custom edit \u0026#34;DNS\u0026#34; set category \u0026#34;Network Services\u0026#34; set tcp-portrange 53 set udp-portrange 53 next edit \u0026#34;HTTP\u0026#34; set category \u0026#34;Web Access\u0026#34; set tcp-portrange 80 next edit \u0026#34;HTTPS\u0026#34; set category \u0026#34;Web Access\u0026#34; set tcp-portrange 443 next FTG # show firewall service custom SSH_2222 config firewall service custom edit \u0026#34;SSH_2222\u0026#34; set category \u0026#34;Remote Access\u0026#34; set tcp-portrange 2222 next end To delete a service, we will follow the following steps:\n#Accedemos a la configuración de los servicios FTG # config firewall service custom #Borramos el servicio indicando el nombre FTG (custom) # delete SSH_2222 #Salimos del modo de configuración FTG (custom) # end If we want to create it, we will follow the following steps:\n#Accedemos a la configuración de los servicios FTG # config firewall service custom #Le asignamos un nombre FTG (custom) # edit SSH_2222 #Opcionalmente lo añadimos a una categoria FTG (SSH_2222) # set category \u0026#34;Remote Access\u0026#34; #Indicamos los puertos que hace referencia al mismo FTG (SSH_2222) # set tcp-portrange 2222 #Guardamos y salimos del modo de confuguración FTG (SSH_2222) # next FTG (custom) # end I leave you a [link] (https: / / docs.fortinet.com / document / fortigate / 7.0.0 / ngfw-deployment / 546227 / creating-service-objects) to the official documentation concerning the services where you explain in detail all the options of the services.\nVirtual PIs The VIPs are used to map external IP addresses to internal IP addresses. This is also called DNAT, where the destination of a package is being sent to a different address.\nStatic VIP are commonly used to map public IP addresses to resources behind the FortiGate that use private IP addresses. A static VIP one by one is when the entire range of ports is mapped. A port forwarding VIP is when the mapping is set up in a specific port or port range.\nIf we want to list the different virtual PIs we have we will use the following command, if we only want to list one in particular we will indicate its name:\nFTG # show firewall vip config firewall vip edit \u0026#34;DNAT_POSTFIX\u0026#34; set uuid a343ec4a-e881-51ee-0ec1-ad73db3ff299 set service \u0026#34;SMTP\u0026#34; set extip 192.168.100.1 set mappedip \u0026#34;192.168.200.2\u0026#34; set extintf \u0026#34;port2\u0026#34; next edit \u0026#34;DNAT_SSH\u0026#34; set uuid a2b62344-e884-51ee-1a11-8946fda2bd91 set service \u0026#34;SSH_2222\u0026#34; set extip 192.168.122.77 set mappedip \u0026#34;192.168.100.2\u0026#34; set extintf \u0026#34;port1\u0026#34; set portforward enable set mappedport 22 next FTG # show firewall vip DNAT_HELA_WEB config firewall vip edit \u0026#34;DNAT_HELA_WEB\u0026#34; set uuid a417a8f8-edf6-51ee-f601-43829c174966 set service \u0026#34;HTTP\u0026#34; set extip 192.168.122.77 set mappedip \u0026#34;192.168.200.2\u0026#34; set extintf \u0026#34;port1\u0026#34; next end In case we want to remove one of these virtual PIs, we will follow the following steps:\n#Accedemos al modo de configuración FTG # config firewall vip #Borramos la IP virtual indicando su nombre FTG (vip) # delete DNAT_HELA_WEB #Salimos del modo de configuración FTG (vip) # end On the other hand to create one of these, as we have done from the GUI we will follow the following steps:\n#Accedemos al modo de configuración FTG # config firewall vip #Le asignamos el nombre que deseemos FTG (vip) # edit DNAT_HELA_WEB #Indicamos opcionalmente sobre el servicio que sera usado esta IP virtual FTG (DNAT_HELA_WEB) # set service \u0026#34;HTTP\u0026#34; #Indicamos la Ip externa FTG (DNAT_HELA_WEB) # set extip 192.168.122.77 #Indicamos la Ip interna FTG (DNAT_HELA_WEB) # set mappedip \u0026#34;192.168.200.2\u0026#34; #Indicamos la interfaz externa FTG (DNAT_HELA_WEB) # set extintf \u0026#34;port1\u0026#34; #Guardamos y salimos FTG (DNAT_HELA_WEB) # next FTG (vip) # end Virtual IP have more configuration parameters that I have not used in practice, I leave you a [link] (https: / / docs.fortinet.com / document / fortigate / 7.0.9 / administration-guide / 510402 / static-virtual-ips) to the official documentation where you detail all the settings that we can access with them.\nStatic routes Our device needs to know where to send the traffic, for this there are static routes.\nTo list the routes that our firewall has set up, we will use the following command:\nFTG # show router static config router static edit 1 set gateway 192.168.122.1 set device \u0026#34;port1\u0026#34; next end As we have done before, if we want to remove this default route we will follow the following steps:\nFTG # config router static FTG (static) # delete 1 FTG (static) # end If we want to add a route, you can use this example:\nFTG # config router static FTG (static) # edit 1 #El siguiete salto o puerta de enlace FTG (1) # set gateway 192.168.122.1 #La interfaz por donde saldra el trafico FTG (1) # set device \u0026#34;port1\u0026#34; FTG (1) # next FTG (static) # end ","date":"March 28, 2024","hero":"/images/cortafuegos/fortinet_cli.png","permalink":"https://www.javiercd.es/en/posts/cortafuegos/fortinet_cli/fortinet_cli/","summary":"\u003ch2 id=\"equivalence-from-gui-to-cli\"\u003eEquivalence from GUI to CLI\u003c/h2\u003e\n\u003cp\u003eInitially, I started the practice using the command line (CLI), however, I found it more comfortable to do it from the graphic interface. Therefore, I decided to establish an equivalence between the different actions I have carried out during practice and to compare them with their counterpart in the terminal.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e[NOTE]\nIn this post I do a small summary of the equivalencies between the GUI and the CLI of Fortinet that I have used in the 2 Fortinet firewall posts.\u003c/p\u003e","tags":["FIREWALL","FORTINET"],"title":"Fortinet CLI"},{"categories":null,"contents":"Before you start the practice, the scenario you see in the practice is as similar as I can ride to the original practice. I have used version 7.0.9-1 of FortiGate, as the higher versions bring some restrictions. You can download the image from this [link](https://drive.google.com/drive/folders/ 1VGmeLN5inkWNNNUsIvq9ewGUzJLTLkiM).\nFirewall start-up FortiGate devices are made with the IP 192.168.1.99 / 24, as I am from GNS3 do not need to connect to this interface with a device and change the configuration. Since I can do it from the console.\nBy default through that port is enabled the administration by http, https, ssh and telnet.\nIn my case I will connect from the console, change your hostname and configure port 1 to take IP for DHCP.\nThe default user is admin and the blank password. When we first log in, it will force us to change it:\nFortiGate-VM64-KVM login: admin Password: You are forced to change your password. Please input a new password. New Password: Confirm Password: Welcome! The first thing I\u0026rsquo;ll do is change your hostname, as you see it is similar to swan as we have a configuration mode:\nFortiGate-VM64-KVM # conf sys global FortiGate-VM64-KVM (global) # set hostname FGT FortiGate-VM64-KVM (global) # end Now we\u0026rsquo;re going to set up port 1 by DHCP so that from client 2 you can set it up without having to manually change the IP of it. In addition I will set up the access by http and https to be able to configure it from a browser:\nFGT # show system interface port1 config system interface edit \u0026#34;port1\u0026#34; set vdom \u0026#34;root\u0026#34; set mode dhcp set allowaccess ping https ssh http fgfm set type physical set snmp-index 1 next end Now let\u0026rsquo;s see the IP that the DHCP has assigned you with the following command:\nFGT # get system interface == [ port1 ] name: port1 mode: dhcp ip: 192.168.122.77 255.255.255.0 status: up netbios-forward: disable type: physical ring-rx: 0 ring-tx: 0 netflow-sampler: disable sflow-sampler: disable src-check: enable explicit-web-proxy: disable explicit-ftp-proxy: disable proxy-captive-portal: disable mtu-override: disable wccp: disable drop-overlapped-fragment: disable drop-fragment: disable Now from any machine that has access to the \u0026rsquo;external\u0026rsquo; network we can connect to the FW:\nWhen you log in you will see a panel with general information about the device status:\nLAN Network Configuration\nAs you have seen in the topology image, the LAN network is connected to port 2. We will therefore proceed to set it up.\nLet\u0026rsquo;s go to Network \u0026gt; Interfaces, select port 2 and click to edit in the top bar:\nOnce inside the interface configuration screen, you can customize the port by assigning an alias. In addition, to facilitate future management, I have assigned the LAN role to the port2, indicating that it will be used for a local network. I have subsequently configured the IP address of it, assigning it to the 192.168.100.1 / 24. In addition, I have created an object with that IP, which will facilitate the reference to this IP address in future settings, eliminating the need to remember the IP.\nLet\u0026rsquo;s continue with the interface configuration. From the LAN network, where we will be most of the time, I will allow access via HTTPS and SSH to configure the FortiGate. I\u0026rsquo;ll also let you respond to the pings to ensure connectivity with it. In addition, each interface can be a DHCP server, so I will set you one for the LAN. Finally, I will activate the option to detect devices, so I will have control over who is connected to the network.\nOnce you set up the administrative access from the LAN, I will remove the administrative access from the port 1 interface as this serious Internet (WAN).\nSo I\u0026rsquo;ll change the ROL to WAN and take away administrative access:\nIf you remember earlier we marked the Device connection box in the LAN interface, if we want to see the devices connected to this network we access Security Fabric \u0026gt; Asset Identify Center:\nFor later sections, as I will perform the practice of node firewall, it is interesting to create an object with that host. So you don\u0026rsquo;t need to remember your IP:\nAlthough I have not mentioned anything above, the default policy of these devices is DROP in all directions:\nNow we are going to create a new policy that allows for the traffic from the LAN to the Internet (WAN) in any direction. This policy would be similar to those we have at home, where we can access any website. In addition, from here we can say that you do SNAT, which will allow us to navigate the Internet. We can also configure to which interface this SNAT will be made.\nTo end the initial configuration, we will create the default route to get out on the Internet. For this we will go to Network \u0026gt; Static Routes:\nOnce this policy has been implemented, we can start the practice, we can also access the Internet from customer 1:\nFirewall rules To begin with, I will deactivate the previous policy, and at the end of it will remove the tic that activates it:\nIt is thus inactive:\nLocal network equipment should be able to have an external connection. To configure the SNAT on FortiGate devices, it is a little different since in every rule we will allow we will have to mark the box if we want to do NAT.\nWe can also specify all possible options that we can think of, in my case I will leave this section unactivated and I will do it in the following rules. The image you see below is to indicate where it would be activated. We can also indicate why we want the traffic out. This is useful if we have two or more Internet outputs to make a load rocker.\nOnce here within the interface configuration we tell you that the interface is NAT type, we can also tell you not to do PAT.\nWe allowed to do ping from the LAN to the firewall machine. In these devices it would not be a rule as such, but this particular option is indicated from the administrative access option of the interface:\nOnce applied, if we go to client 1 we can do ping to the firewall:\nAllows to make ssh connections from LAN equipment We will create the rule that allows SSH traffic, here at the source we can put either the cliente1 (we create the object in the preparation of the stage) or directly put all at the origin:\nAlthough I currently have only one client in my scheme, stick to the statement if I want ALL LAN customers to make ssh at source I have to allow all:\nAs I explained in paragraph a of the practice, in this type of device we have to tell you whether we want the rule to be NAT-type to do SNAT or not.\nOnce the rule is applied, we can connect by ssh from the cliente1:\nLet\u0026rsquo;s make sure the rule has hits:\nAllows navigation on LAN network For this we will create 2 rules for the LAN network. One that allows DNS and another to allow HTTPS and HTTP traffic, in addition to both rules it will be necessary to indicate that it is done NAT.\nAs you have fixed, I have not indicated the port number, but that these devices have objects called services in which the port numbers of these are stored. We can create the objects we want and customize the existing ones according to our needs.\nLet\u0026rsquo;s check that we can navigate on client 1:\nNeedless to say, of course we can do a dig, with the current rule we can do it to any DNS server:\nLet\u0026rsquo;s check that we have hits in the rules:\nInstall a post server on the LAN machine. It allows access from the outside and from the firewall to the post server. To prove it you can run a telnet to port 25 tcp. As we are currently allowed to navigation only by https it is essential that the machine repositories are configured we can install packages on our client, so we will install postfix:\nsudo apt update \u0026amp;\u0026amp; sudo apt install postfix -y Now we\u0026rsquo;re gonna set up the first DNAT rule we\u0026rsquo;re gonna have on stage. To do this we will have to create a virtual IP and tell you which is the external IP (WAN) and the IP where we are going to do the DNAT (LAN).\nNow let\u0026rsquo;s add the rule in our policy, in the destination of the rule we will indicate the virtual IP that we just created and we indicate the SMTP service that has the 25 TCP port configured:\nAnd let\u0026rsquo;s check that from an external client, as is Client 2 we can access Customer 1:\nLet\u0026rsquo;s check that the rule we just created has hits:\nAllows to make ssh connections from outside to the LAN To do this, we will have to recreate a new virtual IP as it previously specified that this IP was only used for the SMTP protocol. So I\u0026rsquo;m gonna create a new one:\nOnce the new virtual IP is created for the ssh, we will create the DNAT rule:\nLet\u0026rsquo;s try our new rule from client 2:\nLet\u0026rsquo;s check the hits of our new rule:\n# # Modifies the previous rule, so that when we access from the outside by ssh we have to connect to port 2222, although the ssh server is configured to access by port 22. To do this we will have to generate a new service that is in port 2222:\nNow we are going to modify our virtual IP by modifying the service by the new one we have created with the 2222 port and we will make a port forweding to the 22 port:\nOnce this has been done, we can access ssh using the 2222 port and redirect us to 22. We don\u0026rsquo;t need to change the rules, only with this we can access:\nWe will check the hits of the rules, plus in the Virtual IP section we also have a hit counter:\nIt allows DNS queries from the LAN only to the 8.8.8.8 server. Check that you can\u0026rsquo;t make a dig @ 1.1.1.1. For this we will modify the rule that allows DNS queries and we will indicate that the destination is only 8.8.8.8.\nFirst we will need to create a new object with the Google DNS server IP:\nNow we change the rule and put this object as a destination:\nLet\u0026rsquo;s check the change of the rule, so we can only do dns consultations at 8.8.8.8:\nWe can check that the hits have gone up:\nAllows LAN equipment to browse the Internet, except for the www.realbetisbalompie.es page These new generation firewalls bring a series of services that filter us at the application level that allows us to detect key words to filter the content (drugs, pornography, weapons\u0026hellip;), in this firewall the filtering by key words is a payment service, you have to pay a license. It also allows us to create filters to block certain web pages, which in this case is free.\nThe first thing is to create our web _ filter policy:\nAnd we add in it a new filter per URL:\nWe now turn to the rule that allows us to traffic https and in security we add the web filter we have just created:\nTo the left I will access from the browser of my physical machine and I can access the page of the evil one, however if I access from client 1 the firewall does not let us access:\nIf we access FortiView Destinations we can see the pages that our filter has blocked:\n","date":"March 28, 2024","hero":"/images/cortafuegos/fortinet1.png","permalink":"https://www.javiercd.es/en/posts/cortafuegos/fortinet_uno/fortinet_uno/","summary":"\u003cp\u003eBefore you start the practice, the scenario you see in the practice is as similar as I can ride to the original practice. I have used version 7.0.9-1 of FortiGate, as the higher versions bring some restrictions. You can download the image from this [link](\u003ca href=\"https://drive.google.com/drive/folders/\" target=\"_blank\" rel=\"noopener\"\u003ehttps://drive.google.com/drive/folders/\u003c/a\u003e 1VGmeLN5inkWNNNUsIvq9ewGUzJLTLkiM).\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/cortafuegos/fortinet_uno/img/Pastedimage20240320223139.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003ch3 id=\"firewall-start-up\"\u003eFirewall start-up\u003c/h3\u003e\n\u003cp\u003eFortiGate devices are made with the IP 192.168.1.99 / 24, as I am from GNS3 do not need to connect to this interface with a device and change the configuration. Since I can do it from the console.\u003c/p\u003e","tags":["FIREWALL","LINUX","DEBIAN","FORTINET"],"title":"Implementation of a perimeter firewall with Fortinet I"},{"categories":null,"contents":"Now let\u0026rsquo;s emulate firewall practice II, but on GNS3. To this end, I have transformed client 1 into Odin, and added Thor and Loki as virtual machines instead of containers on the LAN network. I have also created a new network called DMZ, in which will be the Hela machine.\nSince I have transformed the previous scenario into this new one, we have some rules created earlier. Therefore, I will remove from the statement those that are already created, such as making SSH to Odin from port 2222, but with the service listening in the 22.\nIn addition, we are now going to make DHCP reservations to have the IP of the new machines controlled.\nIn addition to not counting on the services mounted on the old stage in Opsentack and for the rules of the enunciation I will mount the minimum to make the rules work.\nThroughout this practice I will explain to you that by how the topology of the network is mounted, all of the LAN network can communicate with each other without the need to pass through the firewall. So in some exercises I\u0026rsquo;ll skip the part about making Loki and Thor communicate with Odin. In addition I will not mount the DNS or LDAP server as the rules of DNAT are quite simple and along the practice several exercises of doing DNAT between the different networks appear. Instead I will add VPN at the end of it as I see it more interesting than repeating the same rules by changing the service.\nStage preparation The first thing I will do is create a new network in port 3, which corresponds to the DMZ network.\nAs you will see in the image below I have selected the role to be LAN, to allow me to have a DHCP server on that network. As it is a network in which the services are housed, I don\u0026rsquo;t want you to be able to access the firewall from this one, so I\u0026rsquo;ll leave the administration off.\nNow I\u0026rsquo;ll go access the new customers and change their machine name and set them up by DHCP.\nOdin machine, this was previously client machine 1, you just need to change the FQDN and the hostel:\nosboxes@odin:~$ hostname -f odin.javiercd.gonzalonazareno.org osboxes@odin:~$ ip -4 a 1: lo: \u0026lt;LOOPBACK,UP,LOWER_UP\u0026gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever 2: ens3: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000 altname enp0s3 inet 192.168.100.2/24 brd 192.168.100.255 scope global dynamic noprefixroute ens3 valid_lft 604790sec preferred_lft 604790sec Thor machine:\ndebian@thor:~$ hostname -f thor.javiercd.gonzalonazareno.org debian@thor:~$ ip -4 a 1: lo: \u0026lt;LOOPBACK,UP,LOWER_UP\u0026gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever 2: ens3: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000 altname enp0s3 inet 192.168.100.4/24 brd 192.168.100.255 scope global dynamic ens3 valid_lft 604791sec preferred_lft 604791sec debian@thor:~$ Loki machine:\ndebian@loki:~$ hostname -f loki.javiercd.gonzalonazareno.org debian@loki:~$ ip -4 a 1: lo: \u0026lt;LOOPBACK,UP,LOWER_UP\u0026gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever 2: ens3: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000 altname enp0s3 inet 192.168.100.3/24 brd 192.168.100.255 scope global dynamic ens3 valid_lft 604724sec preferred_lft 604724sec Hela machine:\ndebian@hela:~$ hostname -f hela.javiercd.gonzalonazareno.org debian@hela:~$ ip -4 a 1: lo: \u0026lt;LOOPBACK,UP,LOWER_UP\u0026gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever 2: ens3: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000 altname enp0s3 inet 192.168.200.2/24 brd 192.168.200.255 scope global dynamic ens3 valid_lft 604795sec preferred_lft 604795sec Now we will make a reservation on the DHCP server, we will access Dashborad \u0026gt; Networks \u0026gt; DHCP, once here we will right click on each client of the 4 we have on the stage and create a reservation:\nWe will have a similar menu to this to link the MAC address to the IP:\nOnce we do this with our customers will tell us that we have the reservation made:\nFirewall rules We\u0026rsquo;re going to start creating the rules, as I said earlier we started from the previous stage, so some rules for the minimum operation of the network are created.\nI\u0026rsquo;ll leave you a capture of how the rules stayed, so you can see the state we\u0026rsquo;re going to:\nSome of the following rules are already set from the previous exercise, such as the following rule \u0026ndash; \u0026gt; * The Odin machine has a ssh server listening to port 22, but when you access from the outside you will have to connect to port 2222 *\njaviercruces@HPOMEN15:~$ ssh osboxes@192.168.122.77 -p 2222 osboxes@192.168.122.77\u0026#39;s password: Welcome to Ubuntu 22.04 LTS (GNU/Linux 5.15.0-25-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage 560 updates can be applied immediately. 339 of these updates are standard security updates. To see these additional updates run: apt list --upgradable Last login: Fri Mar 29 11:23:44 2024 from 192.168.100.1 osboxes@odin:~$ hostname -f odin.javiercd.gonzalonazareno.org Next you will see that there are some rules that I have removed or modified, as in the current scenario they cannot be done either by topology or because previously the Odin machine was the firewall. In any case I have maintained and explained some additional things.\nFrom Thor and Hela you should allow the ssh connection by port 22 to the Odin machine. This rule cannot be realized because by having a switch by interconnecting the devices, the traffic does not pass through the firewall so we cannot apply rules in the firewall to prevent local traffic.\nYou see, even if he believes the rule, in the firewall, this one will not be immutated:\nYou see that for example if I connect from loki or thor I can get to odin:\ndebian@loki:~$ ssh osboxes@192.168.100.2 osboxes@192.168.100.2\u0026#39;s password: Welcome to Ubuntu 22.04 LTS (GNU/Linux 5.15.0-25-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage 560 updates can be applied immediately. 339 of these updates are standard security updates. To see these additional updates run: apt list --upgradable Last login: Fri Mar 29 11:42:43 2024 from 192.168.100.3 osboxes@odin:~$ But I don\u0026rsquo;t get it by the rule I\u0026rsquo;ve created if not by the topology of the network itself, the rule has no hits:\nThe whole traffic is in charge of redirecting the swicht.\nThe Odin machine can be ping from the DMZ, but from the LAN the connection (REJECT) must be rejected and from the outside will be rejected silently. To allow the DMZ network to do ping to Odin we will create the following rule:\nLet\u0026rsquo;s check that from the DMZ we can do the ping to Odin:\ndebian@hela:~$ ping 192.168.100.2 -c 1 PING 192.168.100.2 (192.168.100.2) 56(84) bytes of data. 64 bytes from 192.168.100.2: icmp_seq=1 ttl=63 time=2.38 ms --- 192.168.100.2 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 2.379/2.379/2.379/0.000 ms As we see the rule is working, so let\u0026rsquo;s check the hits:\nFor the same reason as in the previous exercise, from the LAN network we cannot limit the ping to Odin as it does not pass through the firewall but through the switch.\nSomething similar happened to us from the WAN, as it is a ping directed to the IP of the interface this is disabled from the configuration of the interface, it is always rejected silently but does not give choice to choose it:\nOnce removed\njaviercruces@HPOMEN15:~$ ping 192.168.122.77 -c 1 PING 192.168.122.77 (192.168.122.77) 56(84) bytes of data. --- 192.168.122.77 ping statistics --- 1 packets transmitted, 0 received, 100% packet loss, time 0ms The Odin machine can do ping to the LAN, the DMZ and the outside. The Odin machine by the topology itself can do ping to all the machines on the LAN as the traffic to this network passes through the swicht.\nSo that I can do ping to the DMZ and the WAN we\u0026rsquo;ll create two rules:\nThe rule for the WAN:\nThe rule for DMZ:\n#LAN --\u0026gt; WAN osboxes@odin:~$ ping 8.8.8.8 -c 1 PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data. 64 bytes from 8.8.8.8: icmp_seq=1 ttl=114 time=10.1 ms --- 8.8.8.8 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 10.088/10.088/10.088/0.000 ms #LAN --\u0026gt; DMZ osboxes@odin:~$ ping 192.168.200.2 -c 1 PING 192.168.200.2 (192.168.200.2) 56(84) bytes of data. 64 bytes from 192.168.200.2: icmp_seq=1 ttl=63 time=0.804 ms --- 192.168.200.2 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 0.804/0.804/0.804/0.000 ms #LAN --\u0026gt; LAN (No interviene el cortafuegos) osboxes@odin:~$ ping 192.168.100.3 -c 1 PING 192.168.100.3 (192.168.100.3) 56(84) bytes of data. 64 bytes from 192.168.100.3: icmp_seq=1 ttl=64 time=0.503 ms --- 192.168.100.3 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 0.503/0.503/0.503/0.000 ms Let\u0026rsquo;s check the hits of the two rules we just created:\nFrom the Hela machine you can make ping and ssh connection to LAN machines. To achieve this I will create the following rule. We could separate it into 2 separate rules to have the counters separately, but in this case it is not important to distinguish traffic.\nWe will check the rule, doing a ping to the different machines of the LAN network, since previously there was a rule to allow all pings to Odin:\n#HELA --\u0026gt; ODIN debian@hela:~$ ping 192.168.100.2 -c 1 PING 192.168.100.2 (192.168.100.2) 56(84) bytes of data. 64 bytes from 192.168.100.2: icmp_seq=1 ttl=63 time=1.10 ms --- 192.168.100.2 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 1.101/1.101/1.101/0.000 ms #HELA --\u0026gt; LOKI debian@hela:~$ ping 192.168.100.3 -c 1 PING 192.168.100.3 (192.168.100.3) 56(84) bytes of data. 64 bytes from 192.168.100.3: icmp_seq=1 ttl=63 time=1.73 ms --- 192.168.100.3 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 1.730/1.730/1.730/0.000 ms #HELA --\u0026gt; THOR debian@hela:~$ ping 192.168.100.4 -c 1 PING 192.168.100.4 (192.168.100.4) 56(84) bytes of data. 64 bytes from 192.168.100.4: icmp_seq=1 ttl=63 time=0.998 ms --- 192.168.100.4 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 0.998/0.998/0.998/0.000 ms Now let\u0026rsquo;s check that we can connect by ssh from Hela to the LAN:\ndebian@hela:~$ ssh osboxes@192.168.100.2 \u0026#39;hostname -f\u0026#39; osboxes@192.168.100.2\u0026#39;s password: odin.javiercd.gonzalonazareno.org debian@hela:~$ ssh 192.168.100.3 \u0026#39;hostname -f\u0026#39; debian@192.168.100.3\u0026#39;s password: loki.javiercd.gonzalonazareno.org debian@hela:~$ ssh 192.168.100.4 \u0026#39;hostname -f\u0026#39; debian@192.168.100.4\u0026#39;s password: thor.javiercd.gonzalonazareno.org The rule works properly, let\u0026rsquo;s check that you\u0026rsquo;ve uploaded the hits:\nFrom any LAN machine you can connect ssh to the hela machine. For this we will create the following rule:\nNow let\u0026rsquo;s check the rule we just created:\nosboxes@odin:~$ ssh debian@192.168.200.2 \u0026#39;hostname -f\u0026#39; debian@192.168.200.2\u0026#39;s password: hela.javiercd.gonzalonazareno.org debian@loki:~$ ssh 192.168.200.2 \u0026#39;hostname -f\u0026#39; debian@192.168.200.2\u0026#39;s password: hela.javiercd.gonzalonazareno.org debian@thor:~$ ssh 192.168.200.2 \u0026#39;hostname -f\u0026#39; debian@192.168.200.2\u0026#39;s password: hela.javiercd.gonzalonazareno.org Let\u0026rsquo;s check that the rule hits have gone up:\nConfigure the Odin machine so that LAN and DMZ machines can access the outside. The SNAT on this device can choose to activate it for each rule and not in general. If you have noticed throughout the practice all the rules that involve taking an interface jump I have marked the NAT box:\nSo this section is going to be done throughout practice as we create the rules.\nLAN machines can do ping outside and navigate. We\u0026rsquo;re gonna have to create 3 rules:\nAllow HTTP / HTTPS traffic Allow DNS queries Allow to do ping Of these three rules the first two are previously created:\nSo we only have to add the ping rule, which would be the following:\nSince I have a trial version I can have at most 10 entries, so I\u0026rsquo;m going to remove the one that just lets Odin go outside.\nLet\u0026rsquo;s check the rules, from a LAN client:\nosboxes@odin:~$ dig @8.8.8.8 www.javiercd.es ; \u0026lt;\u0026lt;\u0026gt;\u0026gt; DiG 9.18.1-1ubuntu1-Ubuntu \u0026lt;\u0026lt;\u0026gt;\u0026gt; @8.8.8.8 www.javiercd.es ; (1 server found) ;; global options: +cmd ;; Got answer: ;; -\u0026gt;\u0026gt;HEADER\u0026lt;\u0026lt;- opcode: QUERY, status: NOERROR, id: 25764 ;; flags: qr rd ra; QUERY: 1, ANSWER: 5, AUTHORITY: 0, ADDITIONAL: 1 ;; OPT PSEUDOSECTION: ; EDNS: version: 0, flags:; udp: 512 ;; QUESTION SECTION: ;www.javiercd.es.\tIN\tA ;; ANSWER SECTION: www.javiercd.es.\t3600\tIN\tCNAME\tjavierasping.github.io. javierasping.github.io.\t3600\tIN\tA\t185.199.108.153 javierasping.github.io.\t3600\tIN\tA\t185.199.109.153 javierasping.github.io.\t3600\tIN\tA\t185.199.110.153 javierasping.github.io.\t3600\tIN\tA\t185.199.111.153 ;; Query time: 60 msec ;; SERVER: 8.8.8.8#53(8.8.8.8) (UDP) ;; WHEN: Fri Mar 29 13:44:50 EDT 2024 ;; MSG SIZE rcvd: 144 osboxes@odin:~$ ping -c 1 www.javiercd.es PING javierasping.github.io (185.199.108.153) 56(84) bytes of data. 64 bytes from cdn-185-199-108-153.github.com (185.199.108.153): icmp_seq=1 ttl=55 time=11.1 ms --- javierasping.github.io ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 11.111/11.111/11.111/0.000 ms osboxes@odin:~$ curl -I https://www.javiercd.es/ HTTP/2 200 server: GitHub.com content-type: text/html; charset=utf-8 last-modified: Mon, 11 Mar 2024 23:21:37 GMT access-control-allow-origin: * strict-transport-security: max-age=31556952 etag: \u0026#34;65ef9201-6878\u0026#34; expires: Fri, 29 Mar 2024 17:56:01 GMT cache-control: max-age=600 x-proxy-cache: MISS x-github-request-id: AE88:3308D5:438AA74:448F970:6606FE58 accept-ranges: bytes date: Fri, 29 Mar 2024 17:46:01 GMT via: 1.1 varnish age: 0 x-served-by: cache-mad2200143-MAD x-cache: MISS x-cache-hits: 0 x-timer: S1711734362.862201,VS0,VE134 vary: Accept-Encoding x-fastly-request-id: 16b6048f2b032ef4b4293c52f0ae36d19b0e0da0 content-length: 26744 So would our three rules, we\u0026rsquo;ll see that we have hits on them:\nThe hela machine can sail. Install a web server, a ftp server and a post server if you don\u0026rsquo;t have them yet. To do this it is necessary to have allowed DNS and navigation. To this end, I have created the following rule:\nI have created it in a single rule to save on the number of them, I have deleted those that allowed ping from DMZ to LAN from previous exercises.\ndebian@hela:~$ sudo apt install proftpd postfix apache2 -y Configure the Odin machine to make web and ftp services accessible from the outside. To do the DNAT we must create 2 virtual PIs, as we did in firewalls I.\nOne for every service we want to do a DNAT. For the web server:\nAnd for the FTP server:\nNow we are going to create the very DNAT rule for the web server, in which as a destination we indicate the virtual IP that we just created:\nWe will see that if we access the WAN firewall IP we will access the Hela Apache:\nWe will also create the DNAT rule for the FTP server:\nLet\u0026rsquo;s check access to the ftp server:\njaviercruces@HPOMEN15:~$ ftp debian@192.168.122.77 Connected to 192.168.122.77. 220 ProFTPD Server (Debian) [::ffff:192.168.200.2] 331 Password required for debian Password: 230 User debian logged in Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; If we check the rules\u0026rsquo; hits, we\u0026rsquo;ll see that both of them have gone up:\nThe web server and the ftp server must be accessible from the LAN and from the outside. To perform this exercise we will have to regenerate the 2 virtual IPs but now we will indicate the IP of the LAN card of the firewall.\nFor the DNAT of the web server:\nWe will repeat the same for the FTP service, changing the service:\nWe will now create the two DNAT rules to allow access from the LAN.\nFor the web server:\nFor the FTP server:\nLet\u0026rsquo;s check that we can access both services:\nosboxes@odin:~$ curl -I http://192.168.100.1 HTTP/1.1 200 OK Date: Fri, 29 Mar 2024 18:31:59 GMT Server: Apache/2.4.57 (Debian) Last-Modified: Fri, 29 Mar 2024 17:53:38 GMT ETag: \u0026#34;29cd-614d051d4d640\u0026#34; Accept-Ranges: bytes Content-Length: 10701 Vary: Accept-Encoding Content-Type: text/html osboxes@odin:~$ ftp debian@192.168.100.1 Connected to 192.168.100.1. 220 ProFTPD Server (Debian) [::ffff:192.168.200.2] 331 Password required for debian Password: 230 User debian logged in Remote system type is UNIX. Using binary mode to transfer files. Let\u0026rsquo;s check that the hits are up in the rules:\nThe post server should only be accessible from the LAN. We repeat the same steps, we will create a virtual IP to make the DNAT rule:\nNow let\u0026rsquo;s create the DNAT rule:\nAnd we\u0026rsquo;ll check that from a LAN PC doing a telnet we get to the post server:\nosboxes@odin:~$ telnet 192.168.100.1 25 Trying 192.168.100.1... Connected to 192.168.100.1. Escape character is \u0026#39;^]\u0026#39;. 220 hela.javiercd.gonzalonazareno.org ESMTP Postfix (Debian/GNU) quit 221 2.0.0 Bye Connection closed by foreign host. We\u0026rsquo;ll see that the hit of the rule has gone up:\nIn the Loki machine you install a Postgres server if you don\u0026rsquo;t have it yet. This server can be accessed from the DMZ, but not from the outside. We will repeat the process of creating a new virtual IP for this service. In addition in this case I have had to create the service as it did not exist.\nLet\u0026rsquo;s create the DNAT rule:\nLet\u0026rsquo;s check that we have access to the pgsql server from the DMZ network:\ndebian@hela:~$ psql -h 192.168.200.1 -U postgres -W Password: psql (15.6 (Debian 15.6-0+deb12u1)) SSL connection (protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, compression: off) Type \u0026#34;help\u0026#34; for help. postgres=# \\q We\u0026rsquo;ll check that the rule has hits:\n# Avoid DoS attacks by ICMP Flood, limiting the number of requests per second to 4 from the same IP. Within the policy and object section, we find a section to create policies for DoS. In my case I have created one with the recommended values given by the manufacturer. And I\u0026rsquo;ve changed the ICMP Flood limit to 4 packages per second.\nLet\u0026rsquo;s check that traffic blocks us if we get over that limit. With this command we are sending 3 packages per second that is less than the established limit so do not cut any packages:\ndebian@loki:~$ sudo hping3 --icmp -i u333333 -V 192.168.100.1 --- 192.168.100.1 hping statistic --- 124 packets transmitted, 124 packets received, 0% packet loss round-trip min/avg/max = 0.7/5.3/9.9 ms If we increase the packages per second, it will block all the packages that exceed 4 per second, so it will pass the first 4 of each second:\ndebian@loki:~$ sudo hping3 --icmp -i u200000 -V 192.168.100.1 --- 192.168.100.1 hping statistic --- 44 packets transmitted, 10 packets received, 78% packet loss round-trip min/avg/max = 4.6/5.5/6.5 ms The firewall has recorded as an anomaly the traffic that has dropped:\nAvoid DoS attacks by SYN Flood.\nWith the filter we have activated in the previous exercise we have limited TCP requests to 2000 per minute from the same IP to avoid this type of attack. We see that the filter eliminates malicious requests and does not allow the attack to have effect:\ndebian@loki:~$ sudo hping3 --flood --rand-source -V 192.168.100.1 using ens3, addr: 192.168.100.3, MTU: 1500 HPING 192.168.100.1 (ens3 192.168.100.1): NO FLAGS are set, 40 headers + 0 data bytes hping in flood mode, no replies will be shown ^C --- 192.168.100.1 hping statistic --- 930716 packets transmitted, 0 packets received, 100% packet loss round-trip min/avg/max = 0.0/0.0/0.0 ms It prevents them from doing port scans to Odin. Instead of doing it to Odin by the topology itself, we\u0026rsquo;re going to do it to avoid scanning from the WAN.\nFor this we open a terminal and what we are going to do is create a signature of IPS to avoid packages with a certain flag using a given scan. In this case we will avoid scanning NMAP XMAS.\nFTG # config ips custom FTG (custom) # edit \u0026#34;Block_xmas\u0026#34; new entry \u0026#39;Block_xmas\u0026#39; added FTG (Block_xmas) # set signature \u0026#34;F-SBID(--name \u0026#39;Block_xmas\u0026#39;; --protocol tcp; --flow from_client; --tcp_flags *FUP; )\u0026#34; FTG (Block_xmas) # set action block FTG (Block_xmas) # end Once configured, we will see the rule that we have created in PIs signs:\nNow we\u0026rsquo;re going to create an IPS rule to associate it with this signature policy:\nWe will add in IPS signs and filters, the new filter we have created before:\nNext in the DNAT rules where we want to control that do not know which ports we have open, we will assign the new IPS policy:\nIn my case we\u0026rsquo;re going to try it for the DNAT rule of ssh:\nIf I launch the NMAP from my host that is on the WAN network, we see that the 2222 port that this rule has open does not detect it:\njaviercruces@HPOMEN15:~$ sudo nmap -sX 192.168.122.77 Starting Nmap 7.93 ( https://nmap.org ) at 2024-03-30 19:05 CET Nmap scan report for 192.168.122.77 Host is up (0.00059s latency). All 1000 scanned ports on 192.168.122.77 are in ignored states. Not shown: 1000 open|filtered tcp ports (no-response) MAC Address: 0C:18:45:93:00:00 (Unknown) Nmap done: 1 IP address (1 host up) scanned in 21.28 seconds And the firewall itself will warn us that there has been a port scan that has blocked, to see this go to Log \u0026amp; Report \u0026gt; Intrusion prevention:\nWe can select it for more details:\n","date":"March 28, 2024","hero":"/images/cortafuegos/fortinet2.png","permalink":"https://www.javiercd.es/en/posts/cortafuegos/fortinet_dos/fortinet_dos/","summary":"\u003cp\u003eNow let\u0026rsquo;s emulate firewall practice II, but on GNS3. To this end, I have transformed client 1 into Odin, and added Thor and Loki as virtual machines instead of containers on the LAN network. I have also created a new network called DMZ, in which will be the Hela machine.\u003c/p\u003e\n\u003cp\u003eSince I have transformed the previous scenario into this new one, we have some rules created earlier. Therefore, I will remove from the statement those that are already created, such as making SSH to Odin from port 2222, but with the service listening in the 22.\u003c/p\u003e","tags":["FIREWALL","LINUX","DEBIAN","FORTINET"],"title":"Implementation of a perimeter firewall with Fortinet II"},{"categories":null,"contents":"In this post on a Debian machine scenario, we will apply rules with Nfables to match the traffic that goes into and out of our network, trying to imitate a scenario.\n[NOTE] To deploy the stage to perform these exercises you will need to deploy the .yaml file you will find in the link to the next paragraph. This will be in charge of deploying 2 machines one that will make firewall and one that will simulate a client that will be connected to the first machine to simulate a local network.\nWith NFTABLES it does the exercise of the https://fp.josedomingo.org/seguridad/u03/perimetral_iptables.html by documenting the operating tests performed.\nStage preparation The first thing we\u0026rsquo;ll do is activate the forwarding bit. To do this, we will edit the file \u0026lsquo;/ etc / sysctl.conf\u0026rsquo; using the following command:\njaviercruces@router-fw:~$ sudo nano /etc/sysctl.conf #Descomentamos la linea net.ipv4.ip_forward=1 Then we will apply the changes using the following command:\njaviercruces@router-fw:~$ sudo sysctl -p net.ipv4.ip_forward = 1 Now we\u0026rsquo;ll add the filter table:\njaviercruces@router-fw:~$ sudo nft add table inet filter We can see the tables created:\njaviercruces@router-fw:~$ sudo nft list tables table inet filter Create the chains for the input and output:\n#Cadena de \u0026#34;entrada\u0026#34; javiercruces@router-fw:~$ sudo nft add chain inet filter input { type filter hook input priority 0 \\; counter \\; policy accept \\; } #Cadena de \u0026#34;salida\u0026#34; javiercruces@router-fw:~$ sudo nft add chain inet filter output { type filter hook output priority 0 \\; counter \\; policy accept \\; } #Cadena forward , peticiones que atraviesen : javiercruces@router-fw:~$ sudo nft add chain inet filter forward { type filter hook forward priority 0 \\; counter \\; policy drop \\; } We will now see that these three chains have been created:\njaviercruces@router-fw:~$ sudo nft list chains table inet filter { chain input { type filter hook input priority filter; policy accept; } chain output { type filter hook output priority filter; policy accept; } chain forward { type filter hook forward priority filter; policy accept; } } Firewall rules Allow ssh to the firewall Now let\u0026rsquo;s allow the ssh to the router-fw machine:\njaviercruces@router-fw:~$ sudo nft add rule inet filter input iif ens3 tcp dport 22 ct state new,established counter accept javiercruces@router-fw:~$ sudo nft add rule inet filter output oif ens3 tcp sport 22 ct state established counter accept Default policy DROP Now let\u0026rsquo;s put the default DROP policy:\njaviercruces@router-fw:~$ sudo nft chain inet filter input { policy drop \\; } javiercruces@router-fw:~$ sudo nft chain inet filter output { policy drop \\; } javiercruces@router-fw:~$ sudo nft chain inet filter forward { policy drop \\; } We will check that with the new policy we can connect by ssh and we have not lost the connection, seeing that we have hits in the rules.\njaviercruces@router-fw:~$ sudo nft list ruleset table inet filter { chain input { type filter hook input priority filter; policy drop; counter packets 174 bytes 11824 iif \u0026#34;ens3\u0026#34; tcp dport 22 ct state established,new counter packets 129 bytes 8252 accept } chain output { type filter hook output priority filter; policy drop; counter packets 169 bytes 31232 oif \u0026#34;ens3\u0026#34; tcp sport 22 ct state established counter packets 85 bytes 22632 accept } } SNAT We make SNAT so LAN teams can access the outside.\nThis will require us to create the NAT table and its chains. As we can see, we have indicated less priority in the posttrouting chain (the lower the number, the higher the priority) for the rules of that chain to be executed after the pre-routing rules.\n#Creamos la tabla NAT javiercruces@router-fw:~$ sudo nft add table nat #Cadena para el DNAT javiercruces@router-fw:~$ sudo nft add chain nat prerouting { type nat hook prerouting priority 0 \\; } #Cadena para el SNAT javiercruces@router-fw:~$ sudo nft add chain nat postrouting { type nat hook postrouting priority 100 \\; } Now let\u0026rsquo;s let SNAT do to the LAN network:\njaviercruces@router-fw:~$ sudo nft add rule ip nat postrouting oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 counter masquerade We allowed the ssh from the firecut to the LAN javiercruces@router-fw:~$ sudo nft add rule inet filter output oifname \u0026#34;ens4\u0026#34; ip daddr 192.168.100.0/24 tcp dport 22 ct state new,established counter accept javiercruces@router-fw:~$ sudo nft add rule inet filter input iifname \u0026#34;ens4\u0026#34; ip saddr 192.168.100.0/24 tcp sport 22 ct state established counter accept Now that we can connect by ssh to our LAN machine, let\u0026rsquo;s check the two above rules.\njaviercruces@router-fw:~$ ssh debian@192.168.100.10 Linux lan 6.1.0-12-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.1.52-1 (2023-09-07) x86_64 The programs included with the Debian GNU/Linux system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. Last login: Tue Feb 27 18:31:10 2024 from 192.168.100.2 debian@lan:~$ ping 1.1.1.1 PING 1.1.1.1 (1.1.1.1) 56(84) bytes of data. ^C --- 1.1.1.1 ping statistics --- 2 packets transmitted, 0 received, 100% packet loss, time 1002ms We will see that we can connect by ssh, however the ping is not allowed but I have done so that the SNAT rule has hits.\nLet\u0026rsquo;s see that the rules have hits:\njaviercruces@router-fw:~$ sudo nft list ruleset table inet filter { chain input { type filter hook input priority filter; policy drop; counter packets 621 bytes 63636 iif \u0026#34;ens3\u0026#34; tcp dport 22 ct state established,new counter packets 493 bytes 41948 accept iifname \u0026#34;ens4\u0026#34; ip saddr 192.168.100.0/24 tcp sport 22 ct state established counter packets 81 bytes 17628 accept } chain output { type filter hook output priority filter; policy drop; counter packets 1231 bytes 141120 oif \u0026#34;ens3\u0026#34; tcp sport 22 ct state established counter packets 349 bytes 68222 accept oifname \u0026#34;ens4\u0026#34; ip daddr 192.168.100.0/24 tcp dport 22 ct state established,new counter packets 103 bytes 17420 accept } chain forward { type filter hook forward priority filter; policy drop; counter packets 4 bytes 336 } } table ip nat { chain prerouting { type nat hook prerouting priority filter; policy accept; } chain postrouting { type nat hook postrouting priority srcnat; policy accept; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 counter packets 1 bytes 84 masquerade } } As we can see the SNAT has hits, so the rule is working, but since we don\u0026rsquo;t let it through the firewall these won\u0026rsquo;t go out.\nWe allow traffic for the loopback interface We add the rules, to allow traffic to the loopback interface:\njaviercruces@router-fw:~$ sudo nft add rule inet filter input iifname \u0026#34;lo\u0026#34; counter accept javiercruces@router-fw:~$ sudo nft add rule inet filter output oifname \u0026#34;lo\u0026#34; counter accept We check that we have connectivity:\njaviercruces@router-fw:~$ ping 127.0.0.1 PING 127.0.0.1 (127.0.0.1) 56(84) bytes of data. 64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.205 ms Let\u0026rsquo;s see the rule hits:\njaviercruces@router-fw:~$ sudo nft list ruleset | grep lo iifname \u0026#34;lo\u0026#34; counter packets 2 bytes 168 accept oifname \u0026#34;lo\u0026#34; counter packets 2 bytes 168 accept Petitions and responses protocol ICMP We will allow the router-fw machine to accept ICMP requests and that I sent the answer:\njaviercruces@router-fw:~$ sudo nft add rule inet filter output oifname \u0026#34;ens3\u0026#34; icmp type echo-reply counter accept javiercruces@router-fw:~$ sudo nft add rule inet filter input iifname \u0026#34;ens3\u0026#34; icmp type echo-request counter accept I do ping from my machine:\njaviercruces@HPOMEN15:~/Documentos/2ºASIR/SAD/cortafuegos1$ ping 172.22.201.120 -c 1 PING 172.22.201.120 (172.22.201.120) 56(84) bytes of data. 64 bytes from 172.22.201.120: icmp_seq=1 ttl=61 time=85.4 ms --- 172.22.201.120 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 85.403/85.403/85.403/0.000 ms Allow to do ping from the LAN Let\u0026rsquo;s let you do ping from the LAN:\njaviercruces@router-fw:~$ sudo nft add rule inet filter forward iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 icmp type echo-request counter accept javiercruces@router-fw:~$ sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip daddr 192.168.100.0/24 icmp type echo-reply counter accept Let\u0026rsquo;s check it out:\ndebian@lan:~$ ping 1.1.1.1 PING 1.1.1.1 (1.1.1.1) 56(84) bytes of data. 64 bytes from 1.1.1.1: icmp_seq=1 ttl=50 time=40.8 ms 64 bytes from 1.1.1.1: icmp_seq=2 ttl=50 time=40.8 ms ^C --- 1.1.1.1 ping statistics --- 2 packets transmitted, 2 received, 0% packet loss, time 1002ms rtt min/avg/max/mdev = 40.821/40.834/40.848/0.013 ms Let\u0026rsquo;s see the rule hits, plus with this we can check the SNAT rule:\njaviercruces@router-fw:~$ sudo nft list ruleset table inet filter { chain input { type filter hook input priority filter; policy drop; counter packets 2637 bytes 213636 iif \u0026#34;ens3\u0026#34; tcp dport 22 ct state established,new counter packets 2346 bytes 172928 accept iifname \u0026#34;ens4\u0026#34; ip saddr 192.168.100.0/24 tcp sport 22 ct state established counter packets 225 bytes 32812 accept iifname \u0026#34;lo\u0026#34; counter packets 2 bytes 168 accept iifname \u0026#34;ens3\u0026#34; icmp type echo-request counter packets 1 bytes 84 accept } chain output { type filter hook output priority filter; policy drop; counter packets 4656 bytes 697080 oif \u0026#34;ens3\u0026#34; tcp sport 22 ct state established counter packets 1618 bytes 477018 accept oifname \u0026#34;ens4\u0026#34; ip daddr 192.168.100.0/24 tcp dport 22 ct state established,new counter packets 291 bytes 30252 accept oifname \u0026#34;lo\u0026#34; counter packets 2 bytes 168 accept oifname \u0026#34;ens3\u0026#34; icmp type echo-reply counter packets 1 bytes 84 accept } chain forward { type filter hook forward priority filter; policy drop; counter packets 31 bytes 2604 iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 icmp type echo-request counter packets 12 bytes 1008 accept iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip daddr 192.168.100.0/24 icmp type echo-reply counter packets 2 bytes 168 accept } } table ip nat { chain prerouting { type nat hook prerouting priority filter; policy accept; } chain postrouting { type nat hook postrouting priority srcnat; policy accept; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 counter packets 4 bytes 336 masquerade } } DNS consultations and responses from the LAN javiercruces@router-fw:~$ sudo nft add rule inet filter forward iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 udp dport 53 ct state new,established counter accept javiercruces@router-fw:~$ sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip daddr 192.168.100.0/24 udp sport 53 ct state established counter accept We will do a query using the host command, as I do not have another tool installed to do dns consultations:\ndebian@lan:~$ host www.javiercd.es www.javiercd.es is an alias for javierasping.github.io. javierasping.github.io has address 185.199.111.153 javierasping.github.io has address 185.199.108.153 javierasping.github.io has address 185.199.109.153 javierasping.github.io has address 185.199.110.153 javierasping.github.io has IPv6 address 2606:50c0:8000::153 javierasping.github.io has IPv6 address 2606:50c0:8001::153 javierasping.github.io has IPv6 address 2606:50c0:8003::153 javierasping.github.io has IPv6 address 2606:50c0:8002::153 Let\u0026rsquo;s check the hits of the rules:\njaviercruces@router-fw:~$ sudo nft list ruleset iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 udp dport 53 ct state established,new counter packets 10 bytes 643 accept iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip daddr 192.168.100.0/24 udp sport 53 ct state established counter packets 10 bytes 2644 accept We allow web navigation from the LAN javiercruces@router-fw:~$ sudo nft add rule inet filter forward iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip protocol tcp ip saddr 192.168.100.0/24 tcp dport { 80,443} ct state new,established counter accept javiercruces@router-fw:~$ sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip protocol tcp ip daddr 192.168.100.0/24 tcp sport { 80,443} ct state established counter accept To verify this point, we will need to modify the / etc / nsSwitch.conf file, which determines the priority of DNS resolution. We will make this modification to prioritize DNS consultation to the system DNS service, which is included in Debian and Ubuntu. This will allow the queries to be carried out first on the machine itself and, if necessary, will be sent to the configured DNS server as in this scenario the applications do not solve us if we do not make this modification.\ndebian@lan:~$ sudo nano /etc/nsswitch.conf hosts: files dns resolve [!UNAVAIL=return] We\u0026rsquo;ll also change the machine\u0026rsquo;s dns server and instead of us, we\u0026rsquo;ll put the high school server:\ndebian@lan:~$ sudo cat /etc/resolv.conf nameserver 172.22.0.1 Once the changes are applied, we will order a web by the domain name, so we will check the operation of the two above points. I\u0026rsquo;ll just order the headers to make the output more legible, a code 200 would be correct. In the part of http gives us a redirection as the server redirects you to https:\ndebian@lan:~$ curl -I https://www.javiercd.es/ HTTP/2 200 server: GitHub.com content-type: text/html; charset=utf-8 last-modified: Sun, 25 Feb 2024 23:03:49 GMT access-control-allow-origin: * strict-transport-security: max-age=31556952 etag: \u0026#34;65dbc755-675b\u0026#34; expires: Wed, 28 Feb 2024 10:10:17 GMT cache-control: max-age=600 x-proxy-cache: MISS x-github-request-id: 5CD4:0E10:CBDBE5:CFBAEA:65DF0430 accept-ranges: bytes date: Wed, 28 Feb 2024 10:00:17 GMT via: 1.1 varnish age: 0 x-served-by: cache-mad2200123-MAD x-cache: MISS x-cache-hits: 0 x-timer: S1709114417.014922,VS0,VE167 vary: Accept-Encoding x-fastly-request-id: e15d291bbff90bf9de58991f0f6477e4398c415d content-length: 26459 debian@lan:~$ curl -I http://www.javiercd.es/ HTTP/1.1 301 Moved Permanently Content-Length: 162 Server: GitHub.com Content-Type: text/html Location: https://www.javiercd.es/ X-GitHub-Request-Id: 9870:0E7F:37400AD:3848DF5:65DF0425 Accept-Ranges: bytes Date: Wed, 28 Feb 2024 10:00:27 GMT Age: 21 X-Served-By: cache-mad2200100-MAD X-Cache: HIT X-Cache-Hits: 1 X-Timer: S1709114427.468002,VS0,VE1 Vary: Accept-Encoding X-Fastly-Request-ID: e321e34041a049f6f7c99e0693be994990da6da3 X-Cache: MISS from f0 X-Cache-Lookup: HIT from f0:3128 Via: 1.1 varnish, 1.1 f0 (squid/4.6) Connection: close We allow access to our LAN web server from the outside As we already have dns resolution and web navigation, we can update our repositories and install packages:\ndebian@lan:~$ sudo apt update -y \u0026amp;\u0026amp; sudo apt install apache2 -y Once apache is installed we will perform the DNAT rule:\njaviercruces@router-fw:~$ sudo nft add rule ip nat prerouting iifname \u0026#34;ens3\u0026#34; tcp dport 80 counter dnat to 192.168.100.10 Now we have to allow on the forward chain the traffic to allow the DNAT. Requests to the web server and answers\njaviercruces@router-fw:~$ sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip daddr 192.168.100.0/24 tcp dport 80 ct state new,established counter accept javiercruces@router-fw:~$ sudo nft add rule inet filter forward iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 tcp sport 80 ct state established counter accept Now let\u0026rsquo;s check that we can access the web server:\njaviercruces@HPOMEN15:~/Documentos/2ºASIR/SAD/cortafuegos1$ curl -I 172.22.201.120 HTTP/1.1 200 OK Date: Wed, 28 Feb 2024 10:24:26 GMT Server: Apache/2.4.57 (Debian) Last-Modified: Wed, 28 Feb 2024 10:17:20 GMT ETag: \u0026#34;29cd-6126e72b03120\u0026#34; Accept-Ranges: bytes Content-Length: 10701 Vary: Accept-Encoding Content-Type: text/html From a browser:\nFinally let\u0026rsquo;s check that the rules involved have hits and I\u0026rsquo;ll leave you the full list to see the rules up to this point:\njaviercruces@router-fw:~$ sudo nft list ruleset table inet filter { chain input { type filter hook input priority filter; policy drop; counter packets 20313 bytes 2212299 iif \u0026#34;ens3\u0026#34; tcp dport 22 ct state established,new counter packets 11896 bytes 827728 accept iifname \u0026#34;ens4\u0026#34; ip saddr 192.168.100.0/24 tcp sport 22 ct state established counter packets 8093 bytes 1321072 accept iifname \u0026#34;lo\u0026#34; counter packets 92 bytes 17660 accept iifname \u0026#34;ens3\u0026#34; icmp type echo-request counter packets 1 bytes 84 accept } chain output { type filter hook output priority filter; policy drop; counter packets 69191 bytes 6011531 oif \u0026#34;ens3\u0026#34; tcp sport 22 ct state established counter packets 8461 bytes 1953220 accept oifname \u0026#34;ens4\u0026#34; ip daddr 192.168.100.0/24 tcp dport 22 ct state established,new counter packets 9482 bytes 623484 accept oifname \u0026#34;lo\u0026#34; counter packets 92 bytes 17660 accept oifname \u0026#34;ens3\u0026#34; icmp type echo-reply counter packets 1 bytes 84 accept } chain forward { type filter hook forward priority filter; policy drop; counter packets 42155 bytes 145465374 iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 icmp type echo-request counter packets 32 bytes 2688 accept iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip daddr 192.168.100.0/24 icmp type echo-reply counter packets 18 bytes 1512 accept iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 udp dport 53 ct state established,new counter packets 273 bytes 17860 accept iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip daddr 192.168.100.0/24 udp sport 53 ct state established counter packets 273 bytes 52163 accept iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip protocol tcp ip saddr 192.168.100.0/24 tcp dport { 80, 443 } ct state established,new counter packets 33973 bytes 1794576 accept iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip protocol tcp ip daddr 192.168.100.0/24 tcp sport { 80, 443 } ct state established counter packets 7119 bytes 143533481 accept iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip daddr 192.168.100.0/24 tcp dport 80 ct state established,new counter packets 47 bytes 3905 accept iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 tcp sport 80 ct state established counter packets 32 bytes 24161 accept } } table ip nat { chain prerouting { type nat hook prerouting priority filter; policy accept; iifname \u0026#34;ens3\u0026#34; tcp dport 80 counter packets 4 bytes 240 dnat to 192.168.100.10 } chain postrouting { type nat hook postrouting priority srcnat; policy accept; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 counter packets 547 bytes 38852 masquerade } } Additional exercises You must then add the necessary rules to allow the following operations:\nIt allows to make ssh connections to the outside from the firewall machine. javiercruces@router-fw:~$ sudo nft add rule inet filter output oifname \u0026#34;ens3\u0026#34; tcp dport 22 ct state new,established counter accept javiercruces@router-fw:~$ sudo nft add rule inet filter input iifname \u0026#34;ens3\u0026#34; tcp sport 22 ct state established counter accept We\u0026rsquo;re gonna connect by ssh from the firewall machine to another to check this out:\njaviercruces@router-fw:~$ ssh 172.22.200.47 Linux odin.javiercd.gonzalonazareno.org 6.1.0-18-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.1.76-1 (2024-02-01) x86_64 The programs included with the Debian GNU/Linux system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. Last login: Wed Feb 28 10:35:56 2024 from 172.22.201.120 javiercruces@odin:~$ Let\u0026rsquo;s check the hits in the rules:\njaviercruces@router-fw:~$ sudo nft list ruleset iifname \u0026#34;ens3\u0026#34; tcp sport 22 ct state established counter packets 66 bytes 18624 accept oifname \u0026#34;ens3\u0026#34; tcp dport 22 ct state established,new counter packets 89 bytes 16572 accept It allows DNS queries from the firewall machine only to the 8.8.8.8 server. Check that you can\u0026rsquo;t make a dig @ 1.1.1.1. Let\u0026rsquo;s add this rule:\njaviercruces@router-fw:~$ sudo nft add rule inet filter output oifname \u0026#34;ens3\u0026#34; ip daddr 8.8.8.8 udp dport 53 ct state new,established counter accept javiercruces@router-fw:~$ sudo nft add rule inet filter input iifname \u0026#34;ens3\u0026#34; ip saddr 8.8.8.8 udp sport 53 ct state established counter accept Now let\u0026rsquo;s check that through 1.1.1.1 we can\u0026rsquo;t solve names but with 8.8.8.8 if:\njaviercruces@router-fw:~$ dig @1.1.1.1 www.javiercd.es ;; communications error to 1.1.1.1#53: timed out ;; communications error to 1.1.1.1#53: timed out ;; communications error to 1.1.1.1#53: timed out ; \u0026lt;\u0026lt;\u0026gt;\u0026gt; DiG 9.18.24-1-Debian \u0026lt;\u0026lt;\u0026gt;\u0026gt; @1.1.1.1 www.javiercd.es ; (1 server found) ;; global options: +cmd ;; no servers could be reached javiercruces@router-fw:~$ dig @8.8.8.8 www.javiercd.es ; \u0026lt;\u0026lt;\u0026gt;\u0026gt; DiG 9.18.24-1-Debian \u0026lt;\u0026lt;\u0026gt;\u0026gt; @8.8.8.8 www.javiercd.es ; (1 server found) ;; global options: +cmd ;; Got answer: ;; -\u0026gt;\u0026gt;HEADER\u0026lt;\u0026lt;- opcode: QUERY, status: NOERROR, id: 4046 ;; flags: qr rd ra; QUERY: 1, ANSWER: 5, AUTHORITY: 0, ADDITIONAL: 1 ;; OPT PSEUDOSECTION: ; EDNS: version: 0, flags:; udp: 512 ;; QUESTION SECTION: ;www.javiercd.es.\tIN\tA ;; ANSWER SECTION: www.javiercd.es.\t3600\tIN\tCNAME\tjavierasping.github.io. javierasping.github.io.\t3600\tIN\tA\t185.199.108.153 javierasping.github.io.\t3600\tIN\tA\t185.199.109.153 javierasping.github.io.\t3600\tIN\tA\t185.199.110.153 javierasping.github.io.\t3600\tIN\tA\t185.199.111.153 ;; Query time: 68 msec ;; SERVER: 8.8.8.8#53(8.8.8.8) (UDP) ;; WHEN: Wed Feb 28 11:09:05 UTC 2024 ;; MSG SIZE rcvd: 144 Let\u0026rsquo;s see the hits of the rules:\njaviercruces@router-fw:~$ sudo nft list ruleset iifname \u0026#34;ens3\u0026#34; ip saddr 8.8.8.8 udp sport 53 ct state established counter packets 314 bytes 36448 accept oifname \u0026#34;ens3\u0026#34; ip daddr 8.8.8.8 udp dport 53 ct state established,new counter packets 314 bytes 21912 accept It allows the firewall machine to navigate through https. Let\u0026rsquo;s add the rule:\njaviercruces@router-fw:~$ sudo nft add rule inet filter output oifname \u0026#34;ens3\u0026#34; ip protocol tcp tcp dport 443 ct state new,established counter accept javiercruces@router-fw:~$ sudo nft add rule inet filter input iifname \u0026#34;ens3\u0026#34; ip protocol tcp tcp sport 443 ct state established counter accept Let\u0026rsquo;s check that by asking the headers, which is similar to browsing we can see a code 200 in https:\njaviercruces@router-fw:~$ curl -I https://www.javiercd.es/ HTTP/2 200 server: GitHub.com content-type: text/html; charset=utf-8 last-modified: Sun, 25 Feb 2024 23:03:49 GMT access-control-allow-origin: * strict-transport-security: max-age=31556952 etag: \u0026#34;65dbc755-675b\u0026#34; expires: Wed, 28 Feb 2024 10:10:17 GMT cache-control: max-age=600 x-proxy-cache: MISS x-github-request-id: 5CD4:0E10:CBDBE5:CFBAEA:65DF0430 accept-ranges: bytes date: Wed, 28 Feb 2024 11:10:32 GMT via: 1.1 varnish age: 0 x-served-by: cache-mad22033-MAD x-cache: HIT x-cache-hits: 1 x-timer: S1709118632.338441,VS0,VE131 vary: Accept-Encoding x-fastly-request-id: 01056938385ca0e465882fa75fd0b19d0973df62 content-length: 26459 Local network equipment should be able to have an external connection. previously performed SNAT\nWe allowed the ssh from the firewall to the LAN Permitted by previous rule\nWe allowed to do ping from the LAN to the firewall machine. javiercruces@router-fw:~$ sudo nft add rule inet filter output oifname \u0026#34;ens4\u0026#34; icmp type echo-reply counter accept javiercruces@router-fw:~$ sudo nft add rule inet filter input iifname \u0026#34;ens4\u0026#34; icmp type echo-request counter accept We do the ping from LAN to firewall\ndebian@lan:~$ ping 192.168.100.2 PING 192.168.100.2 (192.168.100.2) 56(84) bytes of data. 64 bytes from 192.168.100.2: icmp_seq=1 ttl=64 time=1.09 ms 64 bytes from 192.168.100.2: icmp_seq=2 ttl=64 time=1.75 ms ^C --- 192.168.100.2 ping statistics --- 2 packets transmitted, 2 received, 0% packet loss, time 1002ms rtt min/avg/max/mdev = 1.091/1.419/1.748/0.328 ms We\u0026rsquo;ll see the hits for this particular rule:\njaviercruces@router-fw:~$ sudo nft list ruleset iifname \u0026#34;ens4\u0026#34; icmp type echo-request counter packets 2 bytes 168 accept oifname \u0026#34;ens4\u0026#34; icmp type echo-reply counter packets 2 bytes 168 accept Allows to make ssh connections from LAN equipment Let\u0026rsquo;s make the rules:\njaviercruces@router-fw:~$ sudo nft add rule inet filter forward iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip protocol tcp ip saddr 192.168.100.0/24 tcp dport 22 ct state new,established counter accept javiercruces@router-fw:~$ sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip protocol tcp ip daddr 192.168.100.0/24 tcp sport 22 ct state established counter accept We\u0026rsquo;re going to connect by ssh to a machine outside the lan:\ndebian@lan:~$ ssh javiercruces@172.22.200.47 Linux odin.javiercd.gonzalonazareno.org 6.1.0-18-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.1.76-1 (2024-02-01) x86_64 The programs included with the Debian GNU/Linux system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. Last login: Wed Feb 28 10:36:26 2024 from 172.22.201.120 javiercruces@odin:~$ Let\u0026rsquo;s see the hits of these rules:\njaviercruces@router-fw:~$ sudo nft -a list table inet filter iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip protocol tcp ip saddr 192.168.100.0/24 tcp dport 22 ct state established,new counter packets 10 bytes 3312 accept # handle 44 iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip protocol tcp ip daddr 192.168.100.0/24 tcp sport 22 ct state established counter packets 7 bytes 3088 accept # handle 45 Install a post server on the LAN machine. It allows access from the outside and from the firewall to the post server. To prove it you can run a telnet to port 25 tcp. With these rules we allow to connect from outside the network to the post server:\njaviercruces@router-fw:~$ sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip daddr 192.168.100.0/24 tcp dport 25 ct state new,established counter accept javiercruces@router-fw:~$ sudo nft add rule inet filter forward iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 tcp sport 25 ct state established counter accept #Regla DNAT puerto 25 javiercruces@router-fw:~$ sudo nft add rule ip nat prerouting iifname \u0026#34;ens3\u0026#34; tcp dport 25 counter dnat to 192.168.100.10 Let\u0026rsquo;s check it out:\njaviercruces@HPOMEN15:~/Documentos/2ºASIR/SAD/cortafuegos1$ telnet 172.22.201.120 25 Trying 172.22.201.120... Connected to 172.22.201.120. Escape character is \u0026#39;^]\u0026#39;. 220 lan.openstacklocal ESMTP Postfix (Debian/GNU) Connection closed by foreign host. Let\u0026rsquo;s see the hits in the rules:\njaviercruces@router-fw:~$ sudo nft list ruleset #Reglas para permitir el trafico iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip daddr 192.168.100.0/24 tcp dport 25 ct state established,new counter packets 10 bytes 544 accept # handle 46 iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 tcp sport 25 ct state established counter packets 9 bytes 613 accept #Regla DNAT iifname \u0026#34;ens3\u0026#34; tcp dport 25 counter packets 1 bytes 60 dnat to 192.168.100.10 Allows to make ssh connections from outside to the LAN For this I will do a DNAT to port 2222 and allow that traffic\n#Reglas para permitir el trafico del DNAT javiercruces@router-fw:~$ sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip daddr 192.168.100.0/24 tcp dport 2222 ct state new,established counter accept javiercruces@router-fw:~$ sudo nft add rule inet filter forward iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 tcp sport 2222 ct state established counter accept #Regla DNAT puerto 2222 para ssh sudo nft add rule ip nat prerouting iifname \u0026#34;ens3\u0026#34; tcp dport 2222 counter dnat to 192.168.100.10 I have changed the port of the service ssh of lan to 2222, I will connect from outside to the LAN by ssh:\njaviercruces@HPOMEN15:~/Documentos/2ºASIR/SAD/cortafuegos1$ ssh -p 2222 debian@172.22.201.120 Linux lan 6.1.0-12-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.1.52-1 (2023-09-07) x86_64 The programs included with the Debian GNU/Linux system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. Last login: Wed Feb 28 14:12:18 2024 from 192.168.100.2 debian@lan:~$ Let\u0026rsquo;s check the hits of the rules:\n#Reglas para permitir el ssh 2222 desde fuera hacia la LAN iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip daddr 192.168.100.0/24 tcp dport 2222 ct state established,new counter packets 54 bytes 9784 accept iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 tcp sport 2222 ct state established counter packets 44 bytes 10494 accept #Regla DNAT iifname \u0026#34;ens3\u0026#34; tcp dport 2222 counter packets 5 bytes 300 dnat to 192.168.100.10 Modifies the above rule, so that when we access from the outside by ssh we have to connect to port 2222, although the ssh server is configured to access by port 22. For this we will remove the 3 above rules and add the following:\n#Permitimos el trafico que ahora \u0026#34;cambiamos\u0026#34; el puerto con la regla DNAT de 2222 a 22 javiercruces@router-fw:~$ sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip daddr 192.168.100.0/24 tcp dport 22 ct state new,established counter accept javiercruces@router-fw:~$ sudo nft add rule inet filter forward iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 tcp sport 22 ct state established counter accept #Regla DNAT javiercruces@router-fw:~$ sudo nft add rule ip nat prerouting iifname \u0026#34;ens3\u0026#34; tcp dport 2222 counter dnat to 192.168.100.10 Now let\u0026rsquo;s check that we can connect from the outside to the LAN although we have now changed the LAN ssh server to listen in port 22:\njaviercruces@router-fw:~$ sudo nft list ruleset iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip daddr 192.168.100.0/24 tcp dport 22 ct state established,new counter packets 34 bytes 7868 accept iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 tcp sport 22 ct state established counter packets 32 bytes 9066 accept iifname \u0026#34;ens3\u0026#34; tcp dport 2222 counter packets 7 bytes 420 dnat to 192.168.100.10:22 It allows DNS queries from the LAN only to the 8.8.8.8 server. Check that you can\u0026rsquo;t make a dig @ 1.1.1.1. We will delete the previous rule that allows DNS queries:\njaviercruces@router-fw:~$ sudo nft -a list table inet filter iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 udp dport 53 ct state established,new counter packets 285 bytes 17036 accept # handle 35 javiercruces@router-fw:~$ sudo nft delete rule inet filter forward handle 35 We add the new rule to allow only consultations to 8.8.8:\njaviercruces@router-fw:~$ sudo nft add rule inet filter forward iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 udp dport 53 ip daddr 8.8.8.8 counter accept Let\u0026rsquo;s check it out:\ndebian@lan:~$ dig @1.1.1.1 www.javiercd.es ;; communications error to 1.1.1.1#53: timed out ;; communications error to 1.1.1.1#53: timed out ;; communications error to 1.1.1.1#53: timed out ; \u0026lt;\u0026lt;\u0026gt;\u0026gt; DiG 9.18.24-1-Debian \u0026lt;\u0026lt;\u0026gt;\u0026gt; @1.1.1.1 www.javiercd.es ; (1 server found) ;; global options: +cmd ;; no servers could be reached debian@lan:~$ dig @8.8.8.8 www.javiercd.es ; \u0026lt;\u0026lt;\u0026gt;\u0026gt; DiG 9.18.24-1-Debian \u0026lt;\u0026lt;\u0026gt;\u0026gt; @8.8.8.8 www.javiercd.es ; (1 server found) ;; global options: +cmd ;; Got answer: ;; -\u0026gt;\u0026gt;HEADER\u0026lt;\u0026lt;- opcode: QUERY, status: NOERROR, id: 59302 ;; flags: qr rd ra; QUERY: 1, ANSWER: 5, AUTHORITY: 0, ADDITIONAL: 1 ;; OPT PSEUDOSECTION: ; EDNS: version: 0, flags:; udp: 512 ;; QUESTION SECTION: ;www.javiercd.es.\tIN\tA ;; ANSWER SECTION: www.javiercd.es.\t3600\tIN\tCNAME\tjavierasping.github.io. javierasping.github.io.\t3600\tIN\tA\t185.199.108.153 javierasping.github.io.\t3600\tIN\tA\t185.199.109.153 javierasping.github.io.\t3600\tIN\tA\t185.199.110.153 javierasping.github.io.\t3600\tIN\tA\t185.199.111.153 ;; Query time: 72 msec ;; SERVER: 8.8.8.8#53(8.8.8.8) (UDP) ;; WHEN: Wed Feb 28 14:44:29 UTC 2024 ;; MSG SIZE rcvd: 144 Let\u0026rsquo;s see the hits of the rules:\njaviercruces@router-fw:~$ sudo nft -a list table inet filter iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 udp dport 53 ip daddr 8.8.8.8 counter packets 3 bytes 218 accept # handle 53 Allows LAN equipment to browse the Internet, except for the www.realbetisbalompie.es page We have a problem and it is that nfables only filters up to the level of transport, that is by port. So we can\u0026rsquo;t read the domain as it travels in a header of the application level.\nTo ban it, we will have to block that IP in its entirety for a given port, in my case it will be 80 and 443.\nLet\u0026rsquo;s find out the domain IPS we want to block:\njaviercruces@router-fw:~$ dig +short www.realbetisbalompie.es realbetisbalompie.es. 51.255.76.196 We will add it to the beginning of the chain instead of add the word insert:\njaviercruces@router-fw:~$ sudo nft insert rule inet filter forward ip daddr 51.255.76.196 tcp dport {80, 443} iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; counter drop And now we won\u0026rsquo;t be able to navigate the evil one\u0026rsquo;s page:\ndebian@lan:~$ curl -I https://www.realbetisbalompie.es/ curl: (28) Failed to connect to www.realbetisbalompie.es port 443 after 129885 ms: Couldn\u0026#39;t connect to server Let\u0026rsquo;s see the hits of the rule that protects us from evil:\njaviercruces@router-fw:~$ sudo nft list ruleset ip daddr 51.255.76.196 tcp dport { 80, 443 } iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; counter packets 7 bytes 420 drop Make the rules persistent Let\u0026rsquo;s save the rules with:\nrott@router-fw:/home/javiercruces# nft list ruleset \u0026gt; /etc/nftables.conf If we want to restore them:\njaviercruces@router-fw:~$ sudo nft -f /etc/nftables.conf To make the rules restart alone:\n#Creamos la unidad de systemd javiercruces@router-fw:~$ sudo cat /etc/systemd/system/nftables-persistent.service [Unit] Description=Cargar reglas de nftables al iniciar el sistema [Service] Type=oneshot ExecStart=/usr/sbin/nft -f /etc/nftables/nftables.rules [Install] WantedBy=multi-user.target #Activa el servicio para que al reiniciar se apliquen los cambios javiercruces@router-fw:~$ sudo systemctl enable nftables-persistent.service Rules at the end of the year I\u0026rsquo;ll leave you the list of rules in the state of last exercise:\njaviercruces@router-fw:~$ sudo nft list ruleset table inet filter { chain input { type filter hook input priority filter; policy drop; counter packets 34414 bytes 6500685 iif \u0026#34;ens3\u0026#34; tcp dport 22 ct state established,new counter packets 21235 bytes 1526616 accept iifname \u0026#34;ens4\u0026#34; ip saddr 192.168.100.0/24 tcp sport 22 ct state established counter packets 11648 bytes 1793088 accept iifname \u0026#34;lo\u0026#34; counter packets 92 bytes 17660 accept iifname \u0026#34;ens3\u0026#34; icmp type echo-request counter packets 1 bytes 84 accept iifname \u0026#34;ens3\u0026#34; tcp sport 22 ct state established counter packets 66 bytes 18624 accept iifname \u0026#34;ens3\u0026#34; ip protocol tcp tcp sport 443 ct state established counter packets 519 bytes 3016033 accept iifname \u0026#34;ens3\u0026#34; ip saddr 8.8.8.8 udp sport 53 ct state established counter packets 557 bytes 68077 accept iifname \u0026#34;ens4\u0026#34; icmp type echo-request counter packets 2 bytes 168 accept } chain output { type filter hook output priority filter; policy drop; counter packets 86303 bytes 8331992 oif \u0026#34;ens3\u0026#34; tcp sport 22 ct state established counter packets 15004 bytes 3534878 accept oifname \u0026#34;ens4\u0026#34; ip daddr 192.168.100.0/24 tcp dport 22 ct state established,new counter packets 14125 bytes 950568 accept oifname \u0026#34;lo\u0026#34; counter packets 92 bytes 17660 accept oifname \u0026#34;ens3\u0026#34; icmp type echo-reply counter packets 1 bytes 84 accept oifname \u0026#34;ens3\u0026#34; tcp dport 22 ct state established,new counter packets 89 bytes 16572 accept oifname \u0026#34;ens3\u0026#34; ip daddr 8.8.8.8 udp dport 53 ct state established,new counter packets 557 bytes 36254 accept oifname \u0026#34;ens3\u0026#34; ip protocol tcp tcp dport 443 ct state established,new counter packets 367 bytes 25011 accept oifname \u0026#34;ens4\u0026#34; icmp type echo-reply counter packets 2 bytes 168 accept } chain forward { type filter hook forward priority filter; policy drop; ip daddr 51.255.76.196 tcp dport { 80, 443 } iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; counter packets 7 bytes 420 drop counter packets 45573 bytes 149083811 iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 icmp type echo-request counter packets 32 bytes 2688 accept iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip daddr 192.168.100.0/24 icmp type echo-reply counter packets 18 bytes 1512 accept iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip daddr 192.168.100.0/24 udp sport 53 ct state established counter packets 664 bytes 101857 accept iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip protocol tcp ip saddr 192.168.100.0/24 tcp dport { 80, 443 } ct state established,new counter packets 34813 bytes 1843071 accept iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip protocol tcp ip daddr 192.168.100.0/24 tcp sport { 80, 443 } ct state established counter packets 7583 bytes 146852066 accept iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip daddr 192.168.100.0/24 tcp dport 80 ct state established,new counter packets 47 bytes 3905 accept iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 tcp sport 80 ct state established counter packets 32 bytes 24161 accept iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip protocol tcp ip saddr 192.168.100.0/24 tcp dport 22 ct state established,new counter packets 72 bytes 18540 accept iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip protocol tcp ip daddr 192.168.100.0/24 tcp sport 22 ct state established counter packets 56 bytes 17296 accept iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip daddr 192.168.100.0/24 tcp dport 25 ct state established,new counter packets 10 bytes 544 accept iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 tcp sport 25 ct state established counter packets 9 bytes 613 accept iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip daddr 192.168.100.0/24 tcp dport 22 ct state established,new counter packets 90 bytes 17200 accept iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 tcp sport 22 ct state established counter packets 77 bytes 19296 accept iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 udp dport 53 ip daddr 8.8.8.8 counter packets 81 bytes 5250 accept } } table ip nat { chain prerouting { type nat hook prerouting priority filter; policy accept; iifname \u0026#34;ens3\u0026#34; tcp dport 80 counter packets 4 bytes 240 dnat to 192.168.100.10 iifname \u0026#34;ens3\u0026#34; tcp dport 25 counter packets 1 bytes 60 dnat to 192.168.100.10 iifname \u0026#34;ens3\u0026#34; tcp dport 2222 counter packets 8 bytes 480 dnat to 192.168.100.10:22 } chain postrouting { type nat hook postrouting priority srcnat; policy accept; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.100.0/24 counter packets 916 bytes 61536 masquerade } } ","date":"March 28, 2024","hero":"/images/cortafuegos/nftables1.png","permalink":"https://www.javiercd.es/en/posts/cortafuegos/nftables_uno/cortafuegos_uno/","summary":"\u003cp\u003eIn this post on a Debian machine scenario, we will apply rules with Nfables to match the traffic that goes into and out of our network, trying to imitate a scenario.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e[NOTE]\nTo deploy the stage to perform these exercises you will need to deploy the .yaml file you will find in the link to the next paragraph. This will be in charge of deploying 2 machines one that will make firewall and one that will simulate a client that will be connected to the first machine to simulate a local network.\u003c/p\u003e","tags":["FIREWALL","LINUX","DEBIAN","NFTABLES"],"title":"Implementation of a perimeter firewall with Nftables I"},{"categories":null,"contents":"On the stage created in the service module with the Odin (Router), Hela (DMZ), Loki and Thor (LAN) machines and using nftables, it sets up a perimeter firewall on the Odin machine so that the stage continues to function completely taking into account the following points:\n• The creation of different chains for each traffic flow (from LAN to the outside, from LAN to DMZ, etc.) will be valued. • Default DROP policy for all chains. • You can use the extensions that we create appropriate, but at least you should follow the connection when necessary. • We must implement the firewall to work after a machine reboot. • You must show proof of operation of all rules.\nIn order not to make the practice too long, I will show you the hits of the rules at the end, as well as the complete script of the rules. Since I will only put in every exercise the rules that intervene and a check of it.\nRide the stage with Nftables I\u0026rsquo;m gonna remove iptables and we\u0026rsquo;re gonna move on to Nfables so we don\u0026rsquo;t lose any stage functionality.\nThe first thing is to create the tables and chains:\njaviercruces@odin:~$ sudo nft add table inet filter javiercruces@odin:~$ sudo nft add chain inet filter input { type filter hook input priority 0 \\; counter \\; policy accept \\; } javiercruces@odin:~$ sudo nft add chain inet filter output { type filter hook output priority 0 \\; counter \\; policy accept \\; } javiercruces@odin:~$ sudo nft add chain inet filter WAN_LAN { type filter hook forward priority 0\\; counter \\; policy accept \\;} javiercruces@odin:~$ sudo nft add chain inet filter WAN_DMZ { type filter hook forward priority 0\\; counter \\; policy accept \\;} javiercruces@odin:~$ sudo nft add chain inet filter LAN_WAN { type filter hook forward priority 0\\; counter \\; policy accept \\;} javiercruces@odin:~$ sudo nft add chain inet filter LAN_DMZ { type filter hook forward priority 0\\; counter \\; policy accept \\;} javiercruces@odin:~$ sudo nft add chain inet filter DMZ_LAN { type filter hook forward priority 0\\; counter \\; policy accept \\;} javiercruces@odin:~$ sudo nft add chain inet filter DMZ_WAN { type filter hook forward priority 0\\; counter \\; policy accept \\;} So would our chains created:\njaviercruces@odin:~$ sudo nft list chains table inet filter { chain input { type filter hook input priority filter; policy accept; } chain output { type filter hook output priority filter; policy accept; } chain WAN_LAN { type filter hook forward priority filter; policy accept; } chain WAN_DMZ { type filter hook forward priority filter; policy accept; } chain LAN_WAN { type filter hook forward priority filter; policy accept; } chain DMZ_LAN { type filter hook forward priority filter; policy accept; } chain LAN_DMZ { type filter hook forward priority filter; policy accept; } chain DMZ_WAN { type filter hook forward priority filter; policy accept; } } The LAN network corresponds to the network of the containers 192.168.0.0 / 24. The DMZ network corresponds to the helium network 172.16.0.0 / 16.\nWe continue to create the NAT table to be able to configure the SNAT and the DNAT, since these are usually a small number of rules I will not create different chains:\n#Creamos la tabla NAT javiercruces@odin:~$ sudo nft add table nat #Cadena para el DNAT javiercruces@odin:~$ sudo nft add chain nat prerouting { type nat hook prerouting priority 0 \\; } #Cadena para el SNAT javiercruces@odin:~$ sudo nft add chain nat postrouting { type nat hook postrouting priority 100 \\; } # SNAT rules Once this is done I will create the rules of SNAT so that our customers can go online on the LAN and DMZ network:\nMy network card that\u0026rsquo;s facing the outside is the ens4.\n#Regla SNAT para LAN sudo nft add rule ip nat postrouting oifname \u0026#34;ens4\u0026#34; ip saddr 192.168.0.0/24 counter masquerade #Regla SNAT para DMZ sudo nft add rule ip nat postrouting oifname \u0026#34;ens4\u0026#34; iffname \u0026#34;ens3\u0026#34; ip saddr 172.16.0.0/16 counter masquerade sudo nft add rule ip nat postrouting oifname \u0026#34;ens4\u0026#34; ip saddr 192.168.0.0/24 counter snat to 172.22.200.47 sudo nft add rule ip nat postrouting oifname \u0026#34;ens4\u0026#34; ip saddr 172.16.0.0/16 counter snat to 172.22.200.47 Let\u0026rsquo;s check that customers already have access to the Internet, currently the default policy is ACCEPT.\nCheck for SNAT in Hela:\n[javiercruces@hela ~]$ ping www.javiercd.es -c 1 PING javierasping.github.io (185.199.109.153) 56(84) bytes of data. 64 bytes from cdn-185-199-109-153.github.com (185.199.109.153): icmp_seq=1 ttl=51 time=39.4 ms --- javierasping.github.io ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 39.439/39.439/39.439/0.000 ms Verification of SNAT in Thor:\njaviercruces@thor:~$ ping www.javiercd.es -c 1 PING javierasping.github.io (185.199.108.153) 56(84) bytes of data. 64 bytes from cdn-185-199-108-153.github.com (185.199.108.153): icmp_seq=1 ttl=51 time=38.1 ms --- javierasping.github.io ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 38.138/38.138/38.138/0.000 ms Verification of SNAT in Loki:\njaviercruces@loki:~$ ping www.javiercd.es -c 1 PING javierasping.github.io (185.199.111.153) 56(84) bytes of data. 64 bytes from cdn-185-199-111-153.github.com (185.199.111.153): icmp_seq=1 ttl=51 time=37.7 ms --- javierasping.github.io ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 37.667/37.667/37.667/0.000 ms Finally we will make sure that the rule receives hits:\njaviercruces@odin:~$ sudo nft list ruleset #Salida del comando recortada chain postrouting { type nat hook postrouting priority srcnat; policy accept; oifname \u0026#34;ens4\u0026#34; ip saddr 172.16.0.0/16 counter packets 11 bytes 868 masquerade oifname \u0026#34;ens4\u0026#34; ip saddr 192.168.0.0/24 counter packets 122 bytes 10594 masquerade } } # DNAT rules The previous rules we had were as follows:\njaviercruces@odin:~$ sudo iptables -L -t nat Chain PREROUTING (policy ACCEPT) target prot opt source destination DNAT tcp -- anywhere anywhere tcp dpt:http to:172.16.0.200 DNAT udp -- anywhere anywhere udp dpt:domain to:192.168.0.2 DNAT tcp -- anywhere anywhere tcp dpt:smtp to:192.168.0.3 DNAT tcp -- anywhere anywhere tcp dpt:mysql to:192.168.0.3 So let\u0026rsquo;s move them to nftables:\n#Para un wordpress que hay en hela sudo nft add rule ip nat prerouting tcp dport 80 counter dnat to 172.16.0.200 #Para hacer consultas DNS a thor sudo nft add rule ip nat prerouting udp dport 53 counter dnat to 192.168.0.2 #Para poder recibir correos en loki sudo nft add rule ip nat prerouting tcp dport 25 counter dnat to 192.168.0.3 #Para acceder desde fuera a un mysql que hay en loki sudo nft add rule ip nat prerouting tcp dport 3306 counter dnat to 192.168.0.3 Now let\u0026rsquo;s add a series of rules to allow the previous traffic and the rest of the stage preparation:\n#PERMITIR USO DE ODIN ##Permitir consultas DNS de odin a thor (DNSSERVER) sudo nft add rule inet filter output oifname \u0026#34;br-intra2\u0026#34; udp dport 53 counter accept sudo nft add rule inet filter input iifname \u0026#34;br-intra2\u0026#34; udp sport 53 counter accept ##Permitir tráfico HTTP y HTTPS en odin sudo nft add rule inet filter output oifname \u0026#34;ens4\u0026#34; ip protocol tcp tcp dport { 80,443 } ct state new,established counter accept sudo nft add rule inet filter input iifname \u0026#34;ens4\u0026#34; ip protocol tcp tcp sport { 80,443 } ct state established counter accept #Permitir conexiones SSH por el puerto 2222 sudo nft add rule ip nat prerouting iifname \u0026#34;ens4\u0026#34; tcp dport 2222 counter dnat to 192.168.0.1:22 sudo nft add rule inet filter output oifname \u0026#34;ens4\u0026#34; tcp sport 22 ct state established counter accept sudo nft add rule inet filter input iifname \u0026#34;ens4\u0026#34; tcp dport 22 ct state new,established counter accept #Permitir conexiones SSH de odin a hela sudo nft add rule inet filter output oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.0/16 tcp dport 22 counter accept sudo nft add rule inet filter input iifname \u0026#34;ens3\u0026#34; ip saddr 172.16.0.0/16 tcp sport 22 ct state established,related counter accept #Permitir conexiones ssh de odin a thor y loki sudo nft add rule inet filter output oifname \u0026#34;br-intra2\u0026#34; ip daddr 192.168.0.0/24 tcp dport 22 counter accept sudo nft add rule inet filter input iifname \u0026#34;br-intra2\u0026#34; ip saddr 192.168.0.0/24 tcp sport 22 ct state established,related counter accept #Reglas perimetrales ##Permitir consultas DNS desde br-intra hacia ens4 , necesario para el forward del dns (ESTA REGLA SOLO ME FUNCIONA SI ESTA EN LA MISMA CADENA) #sudo nft add rule inet filter DMZ_WAN iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens4\u0026#34; udp dport 53 counter accept #sudo nft add rule inet filter WAN_DMZ iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;br-intra2\u0026#34; udp sport 53 counter accept sudo nft add rule inet filter forward iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens4\u0026#34; udp dport 53 counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;br-intra2\u0026#34; udp sport 53 counter accept ##Permitir consultas dns desde LAN a DMZ (hela --\u0026gt; thor) (ESTA REGLA SOLO ME FUNCIONA SI ESTA EN LA MISMA CADENA) #sudo nft add rule inet filter LAN_DMZ iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; udp dport 53 counter accept #sudo nft add rule inet filter DMZ_LAN iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; udp sport 53 counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; udp dport 53 counter accept sudo nft add rule inet filter forward iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; udp sport 53 counter accept ##Reglas para permitir trafico a wordpress en hela sudo nft add rule inet filter WAN_DMZ iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp dport 80 ct state { new, established } counter accept sudo nft add rule inet filter DMZ_WAN iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip saddr 172.16.0.200 tcp sport 80 ct state established,related counter accept #Regla para hacer consultas DNS a thor (Permitir DNAT) sudo nft add rule inet filter WAN_DMZ iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip daddr 192.168.0.2 udp dport 53 ct state new,established counter accept sudo nft add rule inet filter DMZ_WAN iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens4\u0026#34; ip saddr 192.168.0.2 udp sport 53 ct state established,related counter accept #Regla para recibir e enviar correos en loki sudo nft add rule inet filter WAN_DMZ iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip daddr 192.168.0.3 tcp dport 25 ct state new,established counter accept sudo nft add rule inet filter DMZ_WAN iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens4\u0026#34; ip saddr 192.168.0.3 tcp sport 25 ct state established,related counter accept #Permitir a hela usar el servidor LDAP sudo nft add rule inet filter LAN_DMZ iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; tcp dport 389 counter accept sudo nft add rule inet filter DMZ_LAN iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; tcp sport 389 counter accept Exercises The firewall must meet at least these rules:\nThe Odin machine has a ssh server listening to port 22, but when you access from the outside you will have to connect to port 2222. To perform this exercise I will do a DNAT to the DMZ interface of odin which is the 192.168.0.1, so I will connect to that interface by ssh. After that we must allow this traffic that goes from the ens4 to the ens3.\n#Permitimos el trafico que ahora \u0026#34;cambiamos\u0026#34; el puerto con la regla DNAT de 2222 a 22 hacia odin sudo nft add rule inet filter output oifname \u0026#34;ens4\u0026#34; tcp sport 22 ct state established counter accept sudo nft add rule inet filter input iifname \u0026#34;ens4\u0026#34; tcp dport 22 ct state new,established counter accept #Regla DNAT sudo nft add rule ip nat prerouting iifname \u0026#34;ens4\u0026#34; tcp dport 2222 counter dnat to 192.168.0.1:22 I will put the default DROP policy once I reach this point:\nsudo nft chain inet filter input { policy drop \\; } sudo nft chain inet filter output { policy drop \\; } sudo nft chain inet filter WAN_LAN { policy drop \\; } sudo nft chain inet filter WAN_DMZ { policy drop \\; } sudo nft chain inet filter LAN_WAN { policy drop \\; } sudo nft chain inet filter DMZ_LAN { policy drop \\; } sudo nft chain inet filter LAN_DMZ { policy drop \\; } sudo nft chain inet filter DMZ_WAN { policy drop \\; } And let\u0026rsquo;s check that the connection works by port 2222:\njaviercruces@HPOMEN15:~$ ssh 172.22.200.47 -p 2222 Linux odin.javiercd.gonzalonazareno.org 6.1.0-18-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.1.76-1 (2024-02-01) x86_64 The programs included with the Debian GNU/Linux system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. Last login: Sat Mar 9 13:49:09 2024 from 172.29.0.58 javiercruces@odin:~$ We checked the hits in the rules:\njaviercruces@odin:~$ sudo nft list ruleset #IMPUT iifname \u0026#34;ens4\u0026#34; tcp dport 22 ct state established,new counter packets 241918 bytes 13788652 accept #OUTPUT oifname \u0026#34;ens4\u0026#34; tcp sport 22 ct state established counter packets 355383 bytes 210012030 accept #DNAT iifname \u0026#34;ens4\u0026#34; tcp dport 2222 counter packets 5 bytes 300 dnat to 192.168.0.1:22 From Thor and Hela you should allow the ssh connection by port 22 to the Odin machine. To be able to check these rules I will allow ssh connections from Odin to both DMZ and LAN networks\n#Permitir conexiones ssh de odin a hela sudo nft add rule inet filter output oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.0/16 tcp dport 22 counter accept sudo nft add rule inet filter input iifname \u0026#34;ens3\u0026#34; ip saddr 172.16.0.0/16 tcp sport 22 ct state established,related counter accept #Permitir conexiones ssh de odin a thor y loki sudo nft add rule inet filter output oifname \u0026#34;br-intra2\u0026#34; ip daddr 192.168.0.0/24 tcp dport 22 counter accept sudo nft add rule inet filter input iifname \u0026#34;br-intra2\u0026#34; ip saddr 192.168.0.0/24 tcp sport 22 ct state established,related counter accept #Permitir conexion ssh desde hela a odin sudo nft add rule inet filter input iifname \u0026#34;ens3\u0026#34; ip saddr 172.16.0.200 tcp dport 22 ct state new,established counter accept sudo nft add rule inet filter output oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp sport 22 ct state established counter accept #Permitir conexion ssh desde thor a odin sudo nft add rule inet filter input iifname \u0026#34;br-intra2\u0026#34; ip saddr 192.168.0.2 tcp dport 22 ct state new,established counter accept sudo nft add rule inet filter output oifname \u0026#34;br-intra2\u0026#34; ip daddr 192.168.0.2 tcp sport 22 ct state established counter accept Let\u0026rsquo;s check the two above rules by connecting to Odin by ssh from these two customers:\n#Hela --\u0026gt; Odin javiercruces@odin:~$ ssh 172.16.0.200 -A Last login: Sat Mar 9 19:02:49 2024 from 172.16.0.1 [javiercruces@hela ~]$ ssh 172.16.0.1 Linux odin.javiercd.gonzalonazareno.org 6.1.0-18-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.1.76-1 (2024-02-01) x86_64 The programs included with the Debian GNU/Linux system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. Last login: Sat Mar 9 19:49:28 2024 from 192.168.0.2 javiercruces@odin:~$ #Thor --\u0026gt; Odin javiercruces@thor:~$ ssh 192.168.0.1 Linux odin.javiercd.gonzalonazareno.org 6.1.0-18-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.1.76-1 (2024-02-01) x86_64 The programs included with the Debian GNU/Linux system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. Last login: Sat Mar 9 19:46:12 2024 from 192.168.0.2 javiercruces@odin:~$ I\u0026rsquo;ll leave you the rule hits at the end of practice.\nThe Odin machine must be allowed traffic for the loopback interface. sudo nft add rule inet filter input iifname \u0026#34;lo\u0026#34; counter accept sudo nft add rule inet filter output oifname \u0026#34;lo\u0026#34; counter accept Check:\njaviercruces@odin:~$ ping 127.0.0.1 -c 1 PING 127.0.0.1 (127.0.0.1) 56(84) bytes of data. 64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.100 ms --- 127.0.0.1 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 0.100/0.100/0.100/0.000 ms The Odin machine can be ping from the DMZ, but from the LAN the connection (REJECT) must be rejected and from the outside will be rejected silently. #DMZ sudo nft add rule inet filter input iifname \u0026#34;ens4\u0026#34; ip protocol icmp icmp type echo-request counter accept sudo nft add rule inet filter output oifname \u0026#34;ens4\u0026#34; ip protocol icmp icmp type echo-reply counter accept #Las siguientes 2 reglas , no funcionaran como esperamos ya que hacen lo mismo que la politica por defecto , ademas no se permite este trafico . #LAN sudo nft add rule inet filter input iifname \u0026#34;br-intra2\u0026#34; ip protocol icmp counter reject #Exterior sudo nft add rule inet filter input iifname \u0026#34;ens3\u0026#34; ip protocol icmp counter drop Let\u0026rsquo;s check these rules:\n#LAN Thor a odin javiercruces@thor:~$ ping 192.168.0.1 PING 192.168.0.1 (192.168.0.1) 56(84) bytes of data. From 192.168.0.1 icmp_seq=1 Destination Port Unreachable #DMZ , Hela --\u0026gt; Odin [javiercruces@hela ~]$ ping 172.16.0.1 -c 1 PING 172.16.0.1 (172.16.0.1) 56(84) bytes of data. 64 bytes from 172.16.0.1: icmp_seq=1 ttl=64 time=0.471 ms --- 172.16.0.1 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 0.471/0.471/0.471/0.000 ms #Exterior a odin javiercruces@HPOMEN15:~$ ping 172.22.200.47 PING 172.22.200.47 (172.22.200.47) 56(84) bytes of data. ^C --- 172.22.200.47 ping statistics --- 419 packets transmitted, 0 received, 100% packet loss, time 428036ms At the end of the practice I\u0026rsquo;ll leave you all the hits of the rules.\nThe Odin machine can do ping to the LAN, the DMZ and the outside. #PERMITIR PING A DMZ sudo nft insert rule inet filter output oifname \u0026#34;ens3\u0026#34; icmp type echo-request counter accept sudo nft insert rule inet filter input iifname \u0026#34;ens3\u0026#34; icmp type echo-reply counter accept #PERMITIR PING A EXTERIOR sudo nft insert rule inet filter output oifname \u0026#34;ens4\u0026#34; icmp type echo-request counter accept sudo nft insert rule inet filter input iifname \u0026#34;ens4\u0026#34; icmp type echo-reply counter accept #PERMITIR PING A LAN sudo nft insert rule inet filter output oifname \u0026#34;br-intra2\u0026#34; icmp type echo-request counter accept sudo nft insert rule inet filter input iifname \u0026#34;br-intra2\u0026#34; icmp type echo-reply counter accept Check:\njaviercruces@odin:~$ ping 8.8.8.8 -c 1 PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data. 64 bytes from 8.8.8.8: icmp_seq=1 ttl=116 time=8.70 ms --- 8.8.8.8 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 8.701/8.701/8.701/0.000 ms javiercruces@odin:~$ ping 192.168.0.2 -c 1 PING 192.168.0.2 (192.168.0.2) 56(84) bytes of data. 64 bytes from 192.168.0.2: icmp_seq=1 ttl=64 time=6.030 ms --- 192.168.0.2 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 0.030/0.030/0.030/0.000 ms javiercruces@odin:~$ ping 172.16.0.200 -c 1 PING 172.16.0.200 (172.16.0.200) 56(84) bytes of data. 64 bytes from 172.16.0.200: icmp_seq=1 ttl=63 time=59.1 ms --- 172.16.0.200 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 59.052/59.052/59.052/0.000 ms From the Hela machine you can make ping and ssh connection to LAN machines. ##Si no estan en la cadena forward no funciona #sudo nft add rule inet filter LAN_DMZ iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip saddr 172.16.0.200 ip protocol icmp icmp type echo-request counter accept #sudo nft add rule inet filter DMZ_LAN iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 ip protocol icmp icmp type echo-reply counter accept #sudo nft add rule inet filter LAN_DMZ iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip saddr 172.16.0.200 tcp dport 22 counter accept #sudo nft add rule inet filter DMZ_LAN iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp sport 22 counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip saddr 172.16.0.200 ip protocol icmp icmp type echo-request counter accept sudo nft add rule inet filter forward iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 ip protocol icmp icmp type echo-reply counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip saddr 172.16.0.200 tcp dport 22 counter accept sudo nft add rule inet filter forward iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp sport 22 counter accept Check:\n[javiercruces@hela ~]$ ping 192.168.0.2 PING 192.168.0.2 (192.168.0.2) 56(84) bytes of data. 64 bytes from 192.168.0.2: icmp_seq=1 ttl=63 time=0.596 ms ^C --- 192.168.0.2 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 0.596/0.596/0.596/0.000 ms [javiercruces@hela ~]$ ssh 192.168.0.2 Welcome to Ubuntu 22.04.3 LTS (GNU/Linux 6.1.0-18-amd64 x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage Last login: Sun Mar 10 14:52:57 2024 from 192.168.0.1 javiercruces@thor:~$ From any LAN machine you can connect ssh to the hela machine. ##Si no esta en la cadena forward no funciona #sudo nft add rule inet filter LAN_DMZ iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp dport 22 counter accept #sudo nft add rule inet filter DMZ_LAN iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip saddr 172.16.0.200 tcp sport 22 counter accept sudo nft add rule inet filter forward iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp dport 22 counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip saddr 172.16.0.200 tcp sport 22 counter accept Check:\njaviercruces@thor:~$ ssh 172.16.0.200 Last login: Sun Mar 10 14:53:12 2024 from 192.168.0.2 [javiercruces@hela ~]$ Configure the Odin machine so that LAN and DMZ machines can access the outside. These rules were already indicated.\nsudo nft add rule ip nat postrouting oifname \u0026#34;ens4\u0026#34; ip saddr 192.168.0.0/24 counter masquerade sudo nft add rule ip nat postrouting oifname \u0026#34;ens4\u0026#34; ip saddr 172.16.0.0/16 counter masquerade LAN machines can do ping outside and navigate. #Las máquinas de la LAN pueden hacer ping al exterior y navegar. ##Si no estan en la cadena forward no funciona #sudo nft add rule inet filter LAN_WAN iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens4\u0026#34; ip protocol icmp icmp type echo-request counter accept #sudo nft add rule inet filter WAN_LAN iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip protocol icmp icmp type echo-reply counter accept sudo nft add rule inet filter forward iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens4\u0026#34; ip protocol icmp icmp type echo-request counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip protocol icmp icmp type echo-reply counter accept Check:\njaviercruces@thor:~$ curl -I https://www.javiercd.es HTTP/2 200 server: GitHub.com content-type: text/html; charset=utf-8 last-modified: Sat, 02 Mar 2024 10:17:01 GMT access-control-allow-origin: * strict-transport-security: max-age=31556952 etag: \u0026#34;65e2fc9d-675b\u0026#34; expires: Sun, 10 Mar 2024 15:35:43 GMT cache-control: max-age=600 x-proxy-cache: MISS x-github-request-id: E24C:3800B1:1881E48:18E9A93:65EDD0F7 accept-ranges: bytes date: Sun, 10 Mar 2024 19:14:10 GMT via: 1.1 varnish age: 60 x-served-by: cache-mad22083-MAD x-cache: HIT x-cache-hits: 1 x-timer: S1710098050.166466,VS0,VE2 vary: Accept-Encoding x-fastly-request-id: 0c6c80bbef19370976aadfc6988441c5a36beccc content-length: 26459 javiercruces@thor:~$ ping 8.8.8.8 PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data. 64 bytes from 8.8.8.8: icmp_seq=1 ttl=110 time=38.5 ms ^C --- 8.8.8.8 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 38.451/38.451/38.451/0.000 ms The hela machine can sail. Install a web server, a ftp server and a post server if you don\u0026rsquo;t have them yet. #La máquina Hela puede navegar. Instala un servidor web, un servidor ftp y un servidor de correos si no los tienes aún. #Hela ya tiene permitido hacer consultas dns a thor sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; tcp dport {80, 443} counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; tcp sport {80, 443} counter accept I check that I can navigate:\n[root@hela javiercruces]# curl -I https://www.javiercd.es/ HTTP/2 200 server: GitHub.com content-type: text/html; charset=utf-8 last-modified: Sat, 02 Mar 2024 10:17:01 GMT access-control-allow-origin: * strict-transport-security: max-age=31556952 etag: \u0026#34;65e2fc9d-675b\u0026#34; expires: Sun, 10 Mar 2024 15:35:43 GMT cache-control: max-age=600 x-proxy-cache: MISS x-github-request-id: E24C:3800B1:1881E48:18E9A93:65EDD0F7 accept-ranges: bytes date: Sun, 10 Mar 2024 19:13:17 GMT via: 1.1 varnish age: 7 x-served-by: cache-mad22067-MAD x-cache: HIT x-cache-hits: 1 x-timer: S1710097997.474757,VS0,VE2 vary: Accept-Encoding x-fastly-request-id: 2d2811893898abf05bebd96c6bd5a09ed7abfe5b content-length: 26459 I understand you want me to install these 3 hela services. On our stage it is the other machines that house these services.\nConfigure the Odin machine to make web and ftp services accessible from the outside. The web server is already previously configured in the migration of the scenario.\nsudo nft add rule ip nat prerouting tcp dport 21 counter dnat to 172.16.0.200 #No funcionan en cadenas separadas #sudo nft add rule inet filter WAN_DMZ iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp dport 21 ct state { new, established } counter accept #sudo nft add rule inet filter DMZ_WAN iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip saddr 172.16.0.200 tcp sport 21 ct state established,related counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp dport 21 ct state { new, established } counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip saddr 172.16.0.200 tcp sport 21 ct state established,related counter accept The web server and the ftp server must be accessible from the LAN and from the outside. The FTP server is on the LAN so it\u0026rsquo;s already accessible, I\u0026rsquo;m gonna make it accessible from the DMZ. From the outside, both are already accessible.\n##No funcionan las reglass en cadenas separadas #sudo nft add rule inet filter DMZ_LAN iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp dport 21 ct state { new, established } counter accept #sudo nft add rule inet filter LAN_DMZ iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip saddr 172.16.0.200 tcp sport 21 ct state established,related counter accept #sudo nft add rule inet filter DMZ_LAN iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp dport 80 ct state { new, established } counter accept #sudo nft add rule inet filter LAN_DMZ iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip saddr 172.16.0.200 tcp sport 80 ct state established,related counter accept sudo nft add rule inet filter forward iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp dport 21 ct state { new, established } counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip saddr 172.16.0.200 tcp sport 21 ct state established,related counter accept sudo nft add rule inet filter forward iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp dport 80 ct state { new, established } counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip saddr 172.16.0.200 tcp sport 80 ct state established,related counter accept Access from DMZ to LAN:\njaviercruces@thor:~$ curl 172.16.0.200 \u0026lt;!DOCTYPE html\u0026gt; javiercruces@thor:~$ ftp 172.16.0.200 Connected to 172.16.0.200. 220 (vsFTPd 3.0.5) The post server should only be accessible from the LAN. We comment on the lines of stage preparation that allow access to the scenario and add:\n#No funciona en cadenas separadas #sudo nft add rule inet filter DMZ_LAN iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip daddr 192.168.0.3 tcp dport 25 ct state { new, established } counter accept #sudo nft add rule inet filter LAN_DMZ iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.0.3 tcp sport 25 ct state established,related counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip daddr 192.168.0.3 tcp dport 25 ct state { new, established } counter accept sudo nft add rule inet filter forward iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.0.3 tcp sport 25 ct state established,related counter accept Let\u0026rsquo;s access the:\n[root@hela javiercruces]# telnet 192.168.0.3 25 Trying 192.168.0.3... Connected to 192.168.0.3. Escape character is \u0026#39;^]\u0026#39;. 220 loki.javiercd.gonzalonazareno.org ESMTP Postfix (Ubuntu) In the Loki machine you install a Postgres server if you don\u0026rsquo;t have it yet. This server can be accessed from the DMZ, but not from the outside. #no funciona en cadenas distintas #sudo nft add rule inet filter LAN_DMZ iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip daddr 192.168.0.3 tcp dport 5432 ct state { new, established } counter accept #sudo nft add rule inet filter DMZ_LAN iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.0.3 tcp sport 5432 ct state established,related counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip daddr 192.168.0.3 tcp dport 5432 ct state { new, established } counter accept sudo nft add rule inet filter forward iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.0.3 tcp sport 5432 ct state established,related counter accept We access the postwree server from hela:\n[root@hela javiercruces]# psql -h 192.168.0.3 -U postgres Password for user postgres: psql (13.14, server 14.11 (Ubuntu 14.11-0ubuntu0.22.04.1)) WARNING: psql major version 13, server major version 14. Some psql features might not work. SSL connection (protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, bits: 256, compression: off) Type \u0026#34;help\u0026#34; for help. postgres=# # Avoid DoS attacks by ICMP Flood, limiting the number of requests per second to 4 from the same IP. sudo nft insert rule inet filter input icmp type echo-request limit rate 1/second burst 4 packets counter drop If we make a flood attack, this will cut the traffic:\n[root@hela javiercruces]# hping3 --icmp --flood --rand-source 172.16.0.1 HPING 172.16.0.1 (eth0 172.16.0.1): icmp mode set, 28 headers + 0 data bytes hping in flood mode, no replies will be shown icmp type echo-request limit rate 1/second burst 4 packets counter packets 46 bytes 2128 drop Avoid DoS attacks by SYN Flood.\n#Evita ataques DoS por SYN Flood. sudo nft add rule inet filter input tcp flags \\\u0026amp; \u0026#39;(fin|syn|rst|ack) == syn\u0026#39; counter limit rate over 25/second drop If we test the attack:\n[root@hela javiercruces]# hping3 --flood --rand-source 172.16.0.1 HPING 172.16.0.1 (eth0 172.16.0.1): NO FLAGS are set, 40 headers + 0 data bytes hping in flood mode, no replies will be shown ^C --- 172.16.0.1 hping statistic --- 1267916 packets transmitted, 0 packets received, 100% packet loss round-trip min/avg/max = 0.0/0.0/0.0 ms icmp type echo-request limit rate 1/second burst 4 packets counter packets 31 bytes 2492 drop Script with all the rules I\u0026rsquo;ll leave you here the script I used during practice.\n#Crear estructura de tablas sudo nft delete table inet filter sudo nft delete table ip nat ##Añadir tabla filter y sus cadenas sudo nft add table inet filter sudo nft add chain inet filter forward { type filter hook forward priority 10\\; counter \\; policy drop\\; } sudo nft add chain inet filter input { type filter hook input priority 0 \\; counter \\; policy drop \\; } sudo nft add chain inet filter output { type filter hook output priority 0 \\; counter \\; policy drop \\; } sudo nft add chain inet filter WAN_LAN { type filter hook forward priority 1\\; counter \\; policy accept \\;} sudo nft add chain inet filter WAN_DMZ { type filter hook forward priority 2\\; counter \\; policy accept \\;} sudo nft add chain inet filter LAN_WAN { type filter hook forward priority 3\\; counter \\; policy accept \\;} sudo nft add chain inet filter LAN_DMZ { type filter hook forward priority 4\\; counter \\; policy accept \\;} sudo nft add chain inet filter DMZ_LAN { type filter hook forward priority 5\\; counter \\; policy accept \\;} sudo nft add chain inet filter DMZ_WAN { type filter hook forward priority 6\\; counter \\; policy accept \\;} ##Añadir Tabla NAT y sus cadenas : sudo nft add table ip nat sudo nft add chain ip nat prerouting { type nat hook prerouting priority 0 \\; } sudo nft add chain ip nat postrouting { type nat hook postrouting priority 100 \\; } #Reglas para mantener el escenario de clase anterior con IPTABLES ##Reglas SNAT ###Regla SNAT para LAN sudo nft add rule ip nat postrouting oifname \u0026#34;ens4\u0026#34; ip saddr 192.168.0.0/24 counter masquerade ###Regla SNAT para DMZ sudo nft add rule ip nat postrouting oifname \u0026#34;ens4\u0026#34; ip saddr 172.16.0.0/16 counter masquerade ##Reglas DNAT #Para un wordpress que hay en hela sudo nft add rule ip nat prerouting tcp dport 80 counter dnat to 172.16.0.200 #Para hacer consultas DNS a thor #sudo nft add rule ip nat prerouting udp dport 53 counter dnat to 192.168.0.2 sudo nft add rule ip nat prerouting iifname \u0026#34;ens3\u0026#34; ip saddr { 172.22.0.0/16, 172.19.0.0/16 } udp dport 53 counter dnat to 192.168.0.2 #Para poder recibir correos en loki sudo nft add rule ip nat prerouting tcp dport 25 counter dnat to 192.168.0.3 #Para acceder desde fuera a un mysql que hay en loki sudo nft add rule ip nat prerouting tcp dport 3306 counter dnat to 192.168.0.3 #PERMITIR USO DE ODIN ##Permitir consultas DNS de odin a thor (DNSSERVER) sudo nft add rule inet filter output oifname \u0026#34;br-intra2\u0026#34; udp dport 53 counter accept sudo nft add rule inet filter input iifname \u0026#34;br-intra2\u0026#34; udp sport 53 counter accept ##Permitir tráfico HTTP y HTTPS en odin sudo nft add rule inet filter output oifname \u0026#34;ens4\u0026#34; ip protocol tcp tcp dport { 80,443 } ct state new,established counter accept sudo nft add rule inet filter input iifname \u0026#34;ens4\u0026#34; ip protocol tcp tcp sport { 80,443 } ct state established counter accept #Permitir conexiones SSH por el puerto 2222 sudo nft add rule ip nat prerouting iifname \u0026#34;ens4\u0026#34; tcp dport 2222 counter dnat to 192.168.0.1:22 sudo nft add rule inet filter output oifname \u0026#34;ens4\u0026#34; tcp sport 22 ct state established counter accept sudo nft add rule inet filter input iifname \u0026#34;ens4\u0026#34; tcp dport 22 ct state new,established counter accept #Permitir conexiones SSH de odin a hela sudo nft add rule inet filter output oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.0/16 tcp dport 22 counter accept sudo nft add rule inet filter input iifname \u0026#34;ens3\u0026#34; ip saddr 172.16.0.0/16 tcp sport 22 ct state established,related counter accept #Permitir conexiones ssh de odin a thor y loki sudo nft add rule inet filter output oifname \u0026#34;br-intra2\u0026#34; ip daddr 192.168.0.0/24 tcp dport 22 counter accept sudo nft add rule inet filter input iifname \u0026#34;br-intra2\u0026#34; ip saddr 192.168.0.0/24 tcp sport 22 ct state established,related counter accept #Reglas perimetrales ##Permitir consultas DNS desde br-intra hacia ens4 , necesario para el forward del dns (ESTA REGLA SOLO ME FUNCIONA SI ESTA EN LA MISMA CADENA) sudo nft add rule inet filter DMZ_WAN iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens4\u0026#34; udp dport 53 counter accept sudo nft add rule inet filter WAN_DMZ iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;br-intra2\u0026#34; udp sport 53 counter accept sudo nft add rule inet filter forward iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens4\u0026#34; udp dport 53 counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;br-intra2\u0026#34; udp sport 53 counter accept ##Permitir consultas dns desde LAN a DMZ (hela --\u0026gt; thor) (ESTA REGLA SOLO ME FUNCIONA SI ESTA EN LA MISMA CADENA) sudo nft add rule inet filter LAN_DMZ iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; udp dport 53 counter accept sudo nft add rule inet filter DMZ_LAN iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; udp sport 53 counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; udp dport 53 counter accept sudo nft add rule inet filter forward iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; udp sport 53 counter accept ##Reglas para permitir trafico a wordpress en hela sudo nft add rule inet filter WAN_DMZ iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp dport 80 ct state { new, established } counter accept sudo nft add rule inet filter DMZ_WAN iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip saddr 172.16.0.200 tcp sport 80 ct state established,related counter accept #Regla para hacer consultas DNS a thor (Permitir DNAT) sudo nft add rule inet filter WAN_DMZ iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip daddr 192.168.0.2 udp dport 53 ct state new,established counter accept sudo nft add rule inet filter DMZ_WAN iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens4\u0026#34; ip saddr 192.168.0.2 udp sport 53 ct state established,related counter accept #Regla para recibir e enviar correos en loki #No funcionan en cadenas separadas #sudo nft add rule inet filter WAN_DMZ iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip daddr 192.168.0.3 tcp dport 25 ct state new,established counter accept #sudo nft add rule inet filter DMZ_WAN iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens4\u0026#34; ip saddr 192.168.0.3 tcp sport 25 ct state established,related counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip daddr 192.168.0.3 tcp dport 25 ct state new,established counter accept sudo nft add rule inet filter forward iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens4\u0026#34; ip saddr 192.168.0.3 tcp sport 25 ct state established,related counter accept #Permitir a hela usar el servidor LDAP sudo nft add rule inet filter LAN_DMZ iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; tcp dport 389 counter accept sudo nft add rule inet filter DMZ_LAN iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; tcp sport 389 counter accept #Ejercicios practica ##Permitir conexiones SSH por el puerto 2222 #sudo nft add rule ip nat prerouting iifname \u0026#34;ens4\u0026#34; tcp dport 2222 counter dnat to 192.168.0.1:22 #sudo nft add rule inet filter output oifname \u0026#34;ens4\u0026#34; tcp sport 22 ct state established counter accept #sudo nft add rule inet filter input iifname \u0026#34;ens4\u0026#34; tcp dport 22 ct state new,established counter accept #Desde Thor y Hela se debe permitir la conexión ssh por el puerto 22 a la máquina Odin. ##Permitir conexion ssh desde hela a odin sudo nft add rule inet filter input iifname \u0026#34;ens3\u0026#34; ip saddr 172.16.0.200 tcp dport 22 ct state new,established counter accept sudo nft add rule inet filter output oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp sport 22 ct state established counter accept ##Permitir conexion ssh desde thor a odin sudo nft add rule inet filter input iifname \u0026#34;br-intra2\u0026#34; ip saddr 192.168.0.2 tcp dport 22 ct state new,established counter accept sudo nft add rule inet filter output oifname \u0026#34;br-intra2\u0026#34; ip daddr 192.168.0.2 tcp sport 22 ct state established counter accept #La máquina Odin debe tener permitido el tráfico para la interfaz loopback. sudo nft add rule inet filter input iifname \u0026#34;lo\u0026#34; counter accept sudo nft add rule inet filter output oifname \u0026#34;lo\u0026#34; counter accept #A la máquina Odin se le puede hacer ping desde la DMZ, pero desde la LAN se le debe rechazar la conexión (REJECT) y desde el exterior se rechazará de manera silenciosa. sudo nft add rule inet filter input iifname \u0026#34;ens3\u0026#34; ip protocol icmp icmp type echo-request counter accept sudo nft add rule inet filter output oifname \u0026#34;ens3\u0026#34; ip protocol icmp icmp type echo-reply counter accept ##Denegar la conexion desde LAN REJECT sudo nft add rule inet filter input iifname \u0026#34;br-intra2\u0026#34; ip protocol icmp counter reject ##Denegar de manera silenciosa desde EXTERIOR sudo nft add rule inet filter input iifname \u0026#34;ens3\u0026#34; ip protocol icmp counter drop #La máquina Odin puede hacer ping a la LAN, la DMZ y al exterior. ##LAN sudo nft add rule inet filter output oifname \u0026#34;ens3\u0026#34; icmp type echo-request counter accept sudo nft add rule inet filter input iifname \u0026#34;ens3\u0026#34; icmp type echo-reply counter accept ##EXTERIOR sudo nft add rule inet filter output oifname \u0026#34;ens4\u0026#34; icmp type echo-request counter accept sudo nft add rule inet filter input iifname \u0026#34;ens4\u0026#34; icmp type echo-reply counter accept ##DMZ sudo nft add rule inet filter output oifname \u0026#34;br-intra2\u0026#34; icmp type echo-request counter accept sudo nft add rule inet filter input iifname \u0026#34;br-intra2\u0026#34; icmp type echo-reply counter accept ####Desde la máquina Hela se puede hacer ping y conexión ssh a las máquinas de la LAN. sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip saddr 172.16.0.200 ip protocol icmp icmp type echo-request counter accept sudo nft add rule inet filter forward iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 ip protocol icmp icmp type echo-reply counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip saddr 172.16.0.200 tcp dport 22 counter accept sudo nft add rule inet filter forward iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp sport 22 counter accept ##Si no estan en la cadena forward no funciona #sudo nft add rule inet filter LAN_DMZ iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip saddr 172.16.0.200 ip protocol icmp icmp type echo-request counter accept #sudo nft add rule inet filter DMZ_LAN iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 ip protocol icmp icmp type echo-reply counter accept #sudo nft add rule inet filter LAN_DMZ iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip saddr 172.16.0.200 tcp dport 22 counter accept #sudo nft add rule inet filter DMZ_LAN iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp sport 22 counter accept #Desde cualquier máquina de la LAN se puede conectar por ssh a la máquina Hela. sudo nft add rule inet filter forward iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp dport 22 counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip saddr 172.16.0.200 tcp sport 22 counter accept ##Si no esta en la cadena forward no funciona #sudo nft add rule inet filter LAN_DMZ iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp dport 22 counter accept #sudo nft add rule inet filter DMZ_LAN iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip saddr 172.16.0.200 tcp sport 22 counter accept #Configura la máquina Odin para que las máquinas de LAN y DMZ puedan acceder al exterior. ##SNAT hecho anteriormente #Las máquinas de la LAN pueden hacer ping al exterior y navegar. ##Si no estan en la cadena forward no funciona #sudo nft add rule inet filter LAN_WAN iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens4\u0026#34; ip protocol icmp icmp type echo-request counter accept #sudo nft add rule inet filter WAN_LAN iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip protocol icmp icmp type echo-reply counter accept sudo nft add rule inet filter forward iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens4\u0026#34; ip protocol icmp icmp type echo-request counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip protocol icmp icmp type echo-reply counter accept sudo nft add rule inet filter forward iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens4\u0026#34; tcp dport {80, 443} counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;br-intra2\u0026#34; tcp sport {80, 443} counter accept #La máquina Hela puede navegar. Instala un servidor web, un servidor ftp y un servidor de correos si no los tienes aún. #Hela ya tiene permitido hacer consultas dns a thor sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; tcp dport {80, 443} counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; tcp sport {80, 443} counter accept #### Configura la máquina Odin para que los servicios web y ftp sean accesibles desde el exterior. sudo nft add rule ip nat prerouting tcp dport 21 counter dnat to 172.16.0.200 #No funcionan en cadenas separadas #sudo nft add rule inet filter WAN_DMZ iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp dport 21 ct state { new, established } counter accept #sudo nft add rule inet filter DMZ_WAN iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip saddr 172.16.0.200 tcp sport 21 ct state established,related counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp dport 21 ct state { new, established } counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip saddr 172.16.0.200 tcp sport 21 ct state established,related counter accept #### El servidor web y el servidor ftp deben ser accesibles desde la LAN y desde el exterior. ##No funcionan las reglass en cadenas separadas #sudo nft add rule inet filter DMZ_LAN iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp dport 21 ct state { new, established } counter accept #sudo nft add rule inet filter LAN_DMZ iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip saddr 172.16.0.200 tcp sport 21 ct state established,related counter accept #sudo nft add rule inet filter DMZ_LAN iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp dport 80 ct state { new, established } counter accept #sudo nft add rule inet filter LAN_DMZ iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip saddr 172.16.0.200 tcp sport 80 ct state established,related counter accept sudo nft add rule inet filter forward iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp dport 21 ct state { new, established } counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip saddr 172.16.0.200 tcp sport 21 ct state established,related counter accept sudo nft add rule inet filter forward iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp dport 80 ct state { new, established } counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip saddr 172.16.0.200 tcp sport 80 ct state established,related counter accept #### El servidor de correos sólo debe ser accesible desde la LAN. #no funciona en cadenas separadas #sudo nft add rule inet filter DMZ_LAN iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip daddr 192.168.0.3 tcp dport 25 ct state { new, established } counter accept #sudo nft add rule inet filter LAN_DMZ iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.0.3 tcp sport 25 ct state established,related counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip daddr 192.168.0.3 tcp dport 25 ct state { new, established } counter accept sudo nft add rule inet filter forward iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.0.3 tcp sport 25 ct state established,related counter accept #### En la máquina Loki instala un servidor Postgres si no lo tiene aún. A este servidor se puede acceder desde la DMZ, pero no desde el exterior. #no funciona en cadenas distintas #sudo nft add rule inet filter LAN_DMZ iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip daddr 192.168.0.3 tcp dport 5432 ct state { new, established } counter accept #sudo nft add rule inet filter DMZ_LAN iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.0.3 tcp sport 5432 ct state established,related counter accept sudo nft add rule inet filter forward iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip daddr 192.168.0.3 tcp dport 5432 ct state { new, established } counter accept sudo nft add rule inet filter forward iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.0.3 tcp sport 5432 ct state established,related counter accept #### Evita ataques DoS por ICMP Flood, limitando a 4 el número de peticiones por segundo desde una misma IP. sudo nft insert rule inet filter input icmp type echo-request limit rate 1/second burst 4 packets counter drop #### Evita ataques DoS por SYN Flood. #sudo nft insert rule inet filter input tcp flags \\\u0026amp; \u0026#39;(fin|syn|rst|ack) == syn\u0026#39; counter limit rate over 25/second drop ####Evita que realicen escaneos de puertos a Odin. #sudo nft insert rule inet filter input tcp flags \u0026amp; (fin|syn|rst|ack) == (syn) counter drop #sudo nft add rule inet filter output udp dport 53 counter accept #sudo nft add rule inet filter input udp sport 53 counter accept Rules Every time I have executed the script the rules lose the counters but so would the scheme with all the rules at the end of the practice:\njaviercruces@odin:~$ sudo nft list ruleset table inet filter { chain forward { type filter hook forward priority filter + 10; policy drop; counter packets 711 bytes 171730 iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens4\u0026#34; udp dport 53 counter packets 107 bytes 8505 accept iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;br-intra2\u0026#34; udp sport 53 counter packets 107 bytes 93423 accept iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; udp dport 53 counter packets 11 bytes 758 accept iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; udp sport 53 counter packets 11 bytes 1818 accept iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip daddr 192.168.0.3 tcp dport 25 ct state established,new counter packets 0 bytes 0 accept iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens4\u0026#34; ip saddr 192.168.0.3 tcp sport 25 ct state established,related counter packets 0 bytes 0 accept iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip saddr 172.16.0.200 ip protocol icmp icmp type echo-request counter packets 2 bytes 168 accept iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 ip protocol icmp icmp type echo-reply counter packets 2 bytes 168 accept iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip saddr 172.16.0.200 tcp dport 22 counter packets 160 bytes 16502 accept iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp sport 22 counter packets 100 bytes 15086 accept iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp dport 22 counter packets 30 bytes 6041 accept iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip saddr 172.16.0.200 tcp sport 22 counter packets 23 bytes 5213 accept iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens4\u0026#34; ip protocol icmp icmp type echo-request counter packets 1 bytes 84 accept iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip protocol icmp icmp type echo-reply counter packets 1 bytes 84 accept iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens4\u0026#34; tcp dport { 80, 443 } counter packets 16 bytes 1666 accept iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;br-intra2\u0026#34; tcp sport { 80, 443 } counter packets 17 bytes 4947 accept iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; tcp dport { 80, 443 } counter packets 32 bytes 3332 accept iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; tcp sport { 80, 443 } counter packets 34 bytes 9903 accept iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp dport 21 ct state { established, new } counter packets 0 bytes 0 accept iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip saddr 172.16.0.200 tcp sport 21 ct state established,related counter packets 0 bytes 0 accept iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp dport 21 ct state { established, new } counter packets 0 bytes 0 accept iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip saddr 172.16.0.200 tcp sport 21 ct state established,related counter packets 0 bytes 0 accept iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp dport 80 ct state { established, new } counter packets 18 bytes 1064 accept iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip saddr 172.16.0.200 tcp sport 80 ct state established,related counter packets 14 bytes 1348 accept iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip daddr 192.168.0.3 tcp dport 25 ct state { established, new } counter packets 0 bytes 0 accept iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.0.3 tcp sport 25 ct state established,related counter packets 0 bytes 0 accept iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip daddr 192.168.0.3 tcp dport 5432 ct state { established, new } counter packets 0 bytes 0 accept iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; ip saddr 192.168.0.3 tcp sport 5432 ct state established,related counter packets 0 bytes 0 accept } chain input { type filter hook input priority filter; policy drop; icmp type echo-request limit rate 1/second burst 4 packets counter packets 13 bytes 1092 drop counter packets 1490 bytes 141906 iifname \u0026#34;br-intra2\u0026#34; udp sport 53 counter packets 18 bytes 2352 accept iifname \u0026#34;ens4\u0026#34; ip protocol tcp tcp sport { 80, 443 } ct state established counter packets 17 bytes 13286 accept iifname \u0026#34;ens4\u0026#34; tcp dport 22 ct state established,new counter packets 965 bytes 70084 accept iifname \u0026#34;ens3\u0026#34; ip saddr 172.16.0.0/16 tcp sport 22 ct state established,related counter packets 356 bytes 39980 accept iifname \u0026#34;br-intra2\u0026#34; ip saddr 192.168.0.0/24 tcp sport 22 ct state established,related counter packets 131 bytes 15952 accept iifname \u0026#34;ens3\u0026#34; ip saddr 172.16.0.200 tcp dport 22 ct state established,new counter packets 0 bytes 0 accept iifname \u0026#34;br-intra2\u0026#34; ip saddr 192.168.0.2 tcp dport 22 ct state established,new counter packets 0 bytes 0 accept iifname \u0026#34;lo\u0026#34; counter packets 0 bytes 0 accept iifname \u0026#34;ens3\u0026#34; ip protocol icmp icmp type echo-request counter packets 0 bytes 0 accept iifname \u0026#34;br-intra2\u0026#34; ip protocol icmp counter packets 1 bytes 84 reject with icmp port-unreachable iifname \u0026#34;ens3\u0026#34; ip protocol icmp counter packets 1 bytes 84 drop iifname \u0026#34;ens3\u0026#34; icmp type echo-reply counter packets 0 bytes 0 accept iifname \u0026#34;ens4\u0026#34; icmp type echo-reply counter packets 1 bytes 84 accept iifname \u0026#34;br-intra2\u0026#34; icmp type echo-reply counter packets 0 bytes 0 accept iifname \u0026#34;lo\u0026#34; counter packets 0 bytes 0 accept } chain output { type filter hook output priority filter; policy drop; counter packets 1404 bytes 207511 oifname \u0026#34;br-intra2\u0026#34; udp dport 53 counter packets 18 bytes 1304 accept oifname \u0026#34;ens4\u0026#34; ip protocol tcp tcp dport { 80, 443 } ct state established,new counter packets 19 bytes 7331 accept oifname \u0026#34;ens4\u0026#34; tcp sport 22 ct state established counter packets 577 bytes 142596 accept oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.0/16 tcp dport 22 counter packets 547 bytes 38208 accept oifname \u0026#34;br-intra2\u0026#34; ip daddr 192.168.0.0/24 tcp dport 22 counter packets 194 bytes 14400 accept oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp sport 22 ct state established counter packets 0 bytes 0 accept oifname \u0026#34;br-intra2\u0026#34; ip daddr 192.168.0.2 tcp sport 22 ct state established counter packets 0 bytes 0 accept oifname \u0026#34;lo\u0026#34; counter packets 12 bytes 1008 accept oifname \u0026#34;ens3\u0026#34; ip protocol icmp icmp type echo-reply counter packets 0 bytes 0 accept oifname \u0026#34;ens3\u0026#34; icmp type echo-request counter packets 1 bytes 84 accept oifname \u0026#34;ens4\u0026#34; icmp type echo-request counter packets 1 bytes 84 accept oifname \u0026#34;br-intra2\u0026#34; icmp type echo-request counter packets 1 bytes 84 accept oifname \u0026#34;lo\u0026#34; counter packets 0 bytes 0 accept } chain WAN_LAN { type filter hook forward priority filter + 1; policy accept; counter packets 711 bytes 171730 } chain WAN_DMZ { type filter hook forward priority filter + 2; policy accept; counter packets 711 bytes 171730 iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;br-intra2\u0026#34; udp sport 53 counter packets 107 bytes 93423 accept iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;ens3\u0026#34; ip daddr 172.16.0.200 tcp dport 80 ct state { established, new } counter packets 0 bytes 0 accept iifname \u0026#34;ens4\u0026#34; oifname \u0026#34;br-intra2\u0026#34; ip daddr 192.168.0.2 udp dport 53 ct state established,new counter packets 0 bytes 0 accept } chain LAN_WAN { type filter hook forward priority filter + 3; policy accept; counter packets 711 bytes 171730 } chain LAN_DMZ { type filter hook forward priority filter + 4; policy accept; counter packets 711 bytes 171730 iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; udp dport 53 counter packets 11 bytes 758 accept iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;br-intra2\u0026#34; tcp dport 389 counter packets 0 bytes 0 accept } chain DMZ_LAN { type filter hook forward priority filter + 5; policy accept; counter packets 711 bytes 171730 iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; udp sport 53 counter packets 11 bytes 1818 accept iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens3\u0026#34; tcp sport 389 counter packets 0 bytes 0 accept } chain DMZ_WAN { type filter hook forward priority filter + 6; policy accept; counter packets 711 bytes 171730 iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens4\u0026#34; udp dport 53 counter packets 107 bytes 8505 accept iifname \u0026#34;ens3\u0026#34; oifname \u0026#34;ens4\u0026#34; ip saddr 172.16.0.200 tcp sport 80 ct state established,related counter packets 0 bytes 0 accept iifname \u0026#34;br-intra2\u0026#34; oifname \u0026#34;ens4\u0026#34; ip saddr 192.168.0.2 udp sport 53 ct state established,related counter packets 0 bytes 0 accept } } table ip nat { chain prerouting { type nat hook prerouting priority filter; policy accept; tcp dport 80 counter packets 8 bytes 480 dnat to 172.16.0.200 iifname \u0026#34;ens3\u0026#34; ip saddr { 172.19.0.0/16, 172.22.0.0/16 } udp dport 53 counter packets 0 bytes 0 dnat to 192.168.0.2 tcp dport 25 counter packets 0 bytes 0 dnat to 192.168.0.3 tcp dport 3306 counter packets 12 bytes 720 dnat to 192.168.0.3 iifname \u0026#34;ens4\u0026#34; tcp dport 2222 counter packets 0 bytes 0 dnat to 192.168.0.1:22 tcp dport 21 counter packets 0 bytes 0 dnat to 172.16.0.200 } chain postrouting { type nat hook postrouting priority srcnat; policy accept; oifname \u0026#34;ens4\u0026#34; ip saddr 192.168.0.0/24 counter packets 109 bytes 8649 masquerade oifname \u0026#34;ens4\u0026#34; ip saddr 172.16.0.0/16 counter packets 2 bytes 120 masquerade } } Make the rules persistent Let\u0026rsquo;s save the rules with:\nroot@odin:/home/javiercruces# nft list ruleset \u0026gt; /etc/nftables.conf If we want to restore them:\njaviercruces@odin:~$ sudo nft -f /etc/nftables.conf To make the rules restart alone:\n#Creamos la unidad de systemd javiercruces@odin:~$ sudo cat /etc/systemd/system/nftables-persistent.service [Unit] Description=Cargar reglas de nftables al iniciar el sistema [Service] Type=oneshot ExecStart=/usr/sbin/nft -f /etc/nftables/nftables.rules [Install] WantedBy=multi-user.target #Activa el servicio para que al reiniciar se apliquen los cambios javiercruces@odin:~$ sudo systemctl enable nftables-persistent.service ","date":"March 28, 2024","hero":"/images/cortafuegos/nftables2.png","permalink":"https://www.javiercd.es/en/posts/cortafuegos/nftables_dos/cortafuegos_dos/","summary":"\u003cp\u003eOn the stage created in the service module with the Odin (Router), Hela (DMZ), Loki and Thor (LAN) machines and using nftables, it sets up a perimeter firewall on the Odin machine so that the stage continues to function completely taking into account the following points:\u003c/p\u003e\n\u003cp\u003e• The creation of different chains for each traffic flow (from LAN to the outside, from LAN to DMZ, etc.) will be valued.\n• Default DROP policy for all chains.\n• You can use the extensions that we create appropriate, but at least you should follow the connection when necessary.\n• We must implement the firewall to work after a machine reboot.\n• You must show proof of operation of all rules.\u003c/p\u003e","tags":["FIREWALL","LINUX","DEBIAN","NFTABLES"],"title":"Implementation of a perimeter firewall with Nftables II"},{"categories":null,"contents":"To download the android image you can do it from this page \u0026ndash; \u0026gt; https://www.fosshub.com/Android-x86.html:\nwget https://www.fosshub.com/Android-x86.html?dwl=android-x86_64-9.0-r2.iso Create a KVM machine as if it were a Debian, I\u0026rsquo;ve given it 2GB of RAM and 2 Cores:\nIn our case we can launch an automatic installation:\nWhen you have the machine installed, turn off the machine and we\u0026rsquo;ll import it in gns3. To do this we will take the KVM disk and import it into the directory where we have installed the GNS3 images, then property the copied disk to your user.\ncp /var/lib/libvirt/images/android-wireguard.qcow2 /home/javiercruces/GNS3/images/QEMU/ javiercruces@HPOMEN15:~$ sudo chown javiercruces:javiercruces /home/javiercruces/GNS3/images/QEMU/android-wireguard.qcow2 Now access your GNS3 and in preferences we will add a new QEMU VMs:\nSelect the emulation binary x86 _ 64 and assign the memory you consider appropriate, to me with 2GB works correctly:\nAs the image uses graphic environment we will select VNC:\nAnd select the disk that we have copied to the folder images above:\n","date":"March 28, 2024","hero":"/images/redes/android_gns3/android.png","permalink":"https://www.javiercd.es/en/posts/redes/android_gns3/android/","summary":"\u003cp\u003eTo download the android image you can do it from this page \u0026ndash; \u0026gt; \u003ca href=\"https://www.fosshub.com/Android-x86.html\" target=\"_blank\" rel=\"noopener\"\u003ehttps://www.fosshub.com/Android-x86.html\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ewget https://www.fosshub.com/Android-x86.html?dwl\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eandroid-x86_64-9.0-r2.iso\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eCreate a KVM machine as if it were a Debian, I\u0026rsquo;ve given it 2GB of RAM and 2 Cores:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/redes/android_gns3/img/Pastedimage20240117194542.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eIn our case we can launch an automatic installation:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/redes/android_gns3/img/Pastedimage20240117194647.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eWhen you have the machine installed, turn off the machine and we\u0026rsquo;ll import it in gns3. To do this we will take the KVM disk and import it into the directory where we have installed the GNS3 images, then property the copied disk to your user.\u003c/p\u003e","tags":["GNS3","ANDORID","LINUX","DEBIAN","KVM"],"title":"Installation of android in GNS3 with KVM"},{"categories":null,"contents":"StrongSwan is a VPN (Virtual Private Network) implementation based on IPsec, open source, multiplatform, complete and widely used. It works on operating systems such as Linux, FreeBSD, OS X, Windows, Android and iOS. Mainly, it is a key exchange demon that supports Internet Key Exchange protocols (IKEv1 and IKEv2) to establish security associations (SA) between two pairs.\n[NOTE] I will start from the VPN post remote access with OpenVPN, so you may refer to this during this article. If you want to have the same scenario go first to this.\nRemember that for the configuration we are going to do you have to activate the forwardbit in the Servidor1 and Servidor2 machines.\nStrongSwan installation We will start by installing the StrongSwan package in both machines:\ndebian@servidor1:~$ sudo apt install strongswan -y debian@servidor2:~$ sudo apt install strongswan -y StrongSwan configuration Server 1 Next we will set up server 1, I will give you a comment so you know what each option means:\ndebian@servidor1:~$ sudo cat /etc/ipsec.conf #Configuración global de strongSwan config setup charondebug=\u0026#34;ike 2, knl 2, cfg 2, net 2, esp 2, dmn 2, mgr 2\u0026#34; #Configuración por defecto para conexiones VPN conn %default ikelifetime=1h # Tiempo de vida de la negociación de intercambio de claves y SA. keylife=1h # Tiempo de vida de la llave del cifrado. rekeymargin=5m # Margen de tiempo antes de la expiración para la renovación. keyingtries=3 # Número máximo de intentos de renegociación. keyexchange=ikev2 # Versión del protocolo IKE. authby=secret # Uso de autenticación con clave precompartida (PSK). ike=aes256-sha1-modp1024 # Configuración de algoritmos para la fase IKE. esp=aes256-sha1 # Configuración de algoritmos para la fase ESP. conn servidor2a1 left=90.0.0.2 # Dirección IP publica de la maquina (servidor1). leftsubnet=192.168.0.0/24 # Subred privada de la maquina servidor 1. right=100.0.0.2 # Dirección IP publica del otro extremo (servidor2). rightsubnet=192.168.1.0/24 # Subred privada del otro extremo (servidor 2). auto=start # Iniciar la conexión automáticamente al arrancar strongSwan. # Server 2 Next we will set up server 2, I will put you a comment so you know what each option means:\ndebian@servidor2:~$ sudo cat /etc/ipsec.conf #Configuración global de strongSwan config setup charondebug=\u0026#34;ike 2, knl 2, cfg 2, net 2, esp 2, dmn 2, mgr 2\u0026#34; #Configuración por defecto para conexiones VPN conn %default ikelifetime=1h # Tiempo de vida de la negociación de intercambio de claves y SA. keylife=1h # Tiempo de vida de la llave del cifrado. rekeymargin=5m # Margen de tiempo antes de la expiración para la renovación. keyingtries=3 # Número máximo de intentos de renegociación. keyexchange=ikev2 # Versión del protocolo IKE. authby=secret # Uso de autenticación con clave precompartida (PSK). ike=aes256-sha1-modp1024 # Configuración de algoritmos para la fase IKE. esp=aes256-sha1 # Configuración de algoritmos para la fase ESP. conn servidor2a1 left=100.0.0.2 # Dirección IP publica de la maquina. leftsubnet=192.168.1.0/24 # Subred privada de la maquina. right=90.0.0.2 # Dirección IP publica del servidor1. rightsubnet=192.168.0.0/24 # Subred privada del servidor 1. auto=start # Iniciar la conexión automáticamente al arrancar strongSwan. Generation of the shared key Once you have configured both machines, it is necessary to agree on the use of a shared key called PSK (Pre-Shared Key). You can generate a PSK randomly to improve connection security. Here is an example of how to generate a random key:\ndebian@servidor1:~$ head -c 24 /dev/urandom | base64 cXPeOAcKIVszFHp68CcGX6dLXcWcbrIl Now in the / etc / ipsec.secrets file we will configure the PSK key, which at both ends has to be the same:\ndebian@servidor1:~$ sudo cat /etc/ipsec.secrets #Ip publica de la maquina servidor 1 90.0.0.2 : PSK \u0026#34;cXPeOAcKIVszFHp68CcGX6dLXcWcbrIl\u0026#34; debian@servidor2:~$ sudo cat /etc/ipsec.secrets #Ip publica de la maquina servidor 2 100.0.0.2 : PSK \u0026#34;cXPeOAcKIVszFHp68CcGX6dLXcWcbrIl\u0026#34; Once configured, we will restart the service at both ends:\ndebian@servidor1:~$ sudo ipsec restart debian@servidor2:~$ sudo ipsec restart Operating check We will now see that the tunnel has been lifted at both ends:\ndebian@servidor1:~$ sudo ipsec status Security Associations (1 up, 0 connecting): servidor1a2[1]: ESTABLISHED 62 seconds ago, 90.0.0.2[90.0.0.2]...100.0.0.2[100.0.0.2] servidor1a2{1}: INSTALLED, TUNNEL, reqid 1, ESP SPIs: ccb4e51d_i c186cf93_o servidor1a2{1}: 192.168.0.0/24 === 192.168.1.0/24 debian@servidor2:~$ sudo ipsec status Security Associations (1 up, 0 connecting): servidor2a1[2]: ESTABLISHED 45 seconds ago, 100.0.0.2[100.0.0.2]...90.0.0.2[90.0.0.2] servidor2a1{2}: INSTALLED, TUNNEL, reqid 1, ESP SPIs: c186cf93_i ccb4e51d_o servidor2a1{2}: 192.168.1.0/24 === 192.168.0.0/24 It is true that, unlike OpenVPN and WireGuard, StrongSwan does not automatically create a virtual interface for the VPN connection. Instead, it uses the operating system routes to direct traffic through the IPSec tunnel.\nRupture tables We can see these routes as follows, these are stored in table 220:\ndebian@servidor1:~$ ip r show table 220 192.168.1.0/24 via 90.0.0.1 dev ens3 proto static src 192.168.0.1 debian@servidor2:~$ ip route list table 220 192.168.0.0/24 via 100.0.0.1 dev ens3 proto static src 192.168.1.1 Connectivity check Once this has been done, we will check that the service machine 2 can reach the machines of the network 192.168.0.0 / 24:\ndebian@servidor2:~$ ping -c 1 192.168.0.1 PING 192.168.0.1 (192.168.0.1) 56(84) bytes of data. 64 bytes from 192.168.0.1: icmp_seq=1 ttl=64 time=12.7 ms --- 192.168.0.1 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 12.721/12.721/12.721/0.000 ms debian@servidor2:~$ ping -c 1 192.168.0.2 PING 192.168.0.2 (192.168.0.2) 56(84) bytes of data. 64 bytes from 192.168.0.2: icmp_seq=1 ttl=63 time=11.5 ms --- 192.168.0.2 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 11.485/11.485/11.485/0.000 ms Tunnel statistics If you want to see if the traffic has passed through the tunnel, you can make a statusol and see the statistics:\ndebian@servidor1:~$ sudo ipsec statusall Status of IKE charon daemon (strongSwan 5.9.8, Linux 6.1.0-17-cloud-amd64, x86_64): uptime: 9 minutes, since Jan 28 10:44:01 2024 malloc: sbrk 2166784, mmap 0, used 1242160, free 924624 worker threads: 11 of 16 idle, 5/0/0/0 working, job queue: 0/0/0/0, scheduled: 2 loaded plugins: charon test-vectors ldap pkcs11 aes rc2 sha2 sha1 md5 mgf1 random nonce x509 revocation constraints pubkey pkcs1 pkcs7 pkcs12 pgp dnskey sshkey pem openssl gcrypt pkcs8 af-alg fips-prf gmp curve25519 agent chapoly xcbc cmac hmac kdf ctr ccm gcm drbg curl attr kernel-netlink resolve socket-default connmark forecast farp stroke updown eap-identity eap-aka eap-md5 eap-gtc eap-mschapv2 eap-radius eap-tls eap-ttls eap-tnc xauth-generic xauth-eap xauth-pam tnc-tnccs dhcp lookip error-notify certexpire led addrblock unity counters Listening IP addresses: 90.0.0.2 192.168.0.1 Connections: servidor1a2: 90.0.0.2...100.0.0.2 IKEv2 servidor1a2: local: [90.0.0.2] uses pre-shared key authentication servidor1a2: remote: [100.0.0.2] uses pre-shared key authentication servidor1a2: child: 192.168.0.0/24 === 192.168.1.0/24 TUNNEL Security Associations (1 up, 0 connecting): servidor1a2[1]: ESTABLISHED 9 minutes ago, 90.0.0.2[90.0.0.2]...100.0.0.2[100.0.0.2] servidor1a2[1]: IKEv2 SPIs: 80b3e1894dc769f5_i* 92c50ec8c2dedde7_r, pre-shared key reauthentication in 43 minutes servidor1a2[1]: IKE proposal: AES_CBC_256/HMAC_SHA1_96/PRF_HMAC_SHA1/MODP_1024 servidor1a2{1}: INSTALLED, TUNNEL, reqid 1, ESP SPIs: ccb4e51d_i c186cf93_o servidor1a2{1}: AES_CBC_256/HMAC_SHA1_96, 252 bytes_i (3 pkts, 358s ago), 280 bytes_o (3 pkts, 355s ag o), rekeying in 41 minutes servidor1a2{1}: 192.168.0.0/24 === 192.168.1.0/24 Catch with Wireshark You can also capture the traffic and make sure the messages are encrypted:\nTraceroute check It is also curious because if you make a traceroute the first jump it gives is to the interface 192.168.0.1 of the service1:\ndebian@servidor2:~$ traceroute 192.168.0.2 traceroute to 192.168.0.2 (192.168.0.2), 30 hops max, 60 byte packets 1 192.168.0.1 (192.168.0.1) 13.695 ms 13.658 ms 13.712 ms 2 192.168.0.2 (192.168.0.2) 13.704 ms 13.695 ms 13.678 ms ","date":"March 28, 2024","hero":"/images/vpn/strongswan.png","permalink":"https://www.javiercd.es/en/posts/vpn/acceso_remoto_strongswang/strongswang/","summary":"\u003cp\u003eStrongSwan is a VPN (Virtual Private Network) implementation based on IPsec, open source, multiplatform, complete and widely used. It works on operating systems such as Linux, FreeBSD, OS X, Windows, Android and iOS. Mainly, it is a key exchange demon that supports Internet Key Exchange protocols (IKEv1 and IKEv2) to establish security associations (SA) between two pairs.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e[NOTE]\nI will start from the VPN post remote access with OpenVPN, so you may refer to this during this article. If you want to have the same scenario go first to this.\u003c/p\u003e","tags":["VPN","LINUX","DEBIAN","STRONGSWAN"],"title":"Remote access VPN with Ipsec StrongSwan"},{"categories":null,"contents":" One of the two teams (which will act as a server) will be connected to two networks For the authentication of the extremes, digital certificates shall be used, which shall be generated using openssl and stored in the / etc / openvpn directory, together with the Diffie- Helman parameters and the certificate of the Certification Authority itself. Network addresses 10.99.99.0 / 24 will be used for VPN virtual addresses. The address 10.99.99.1 shall be assigned to the VPN server. The server and client configuration files will be created in the / etc / openvpn directory of each machine, and will be called servor.conf and cliente.conf respectively. After the establishment of the VPN, the client machine must be able to access a machine on the other network to which the server is connected. Riding the stage To perform this exercise I have mounted the following scenario on GNS3:\n# Swan router configuration Let\u0026rsquo;s give each interface the corresponding network configuration:\n#Interfaz que nos dará internet R1#configure terminal R1(config)#interface fastEthernet 0/0 R1(config-if)#ip add dhcp R1(config-if)#no shut R1(config-if)#exit #Interfaz red Servidor 1 R1(config)#interface fastEthernet 1/0 R1(config-if)#ip add 90.0.0.1 255.255.255.0 R1(config-if)#no shut R1(config-if)#exit #Interfaz red Servidor 2 R1(config)#interface fastEthernet 1/1 R1(config-if)#ip add 100.0.0.1 255.255.255.0 R1(config-if)#no shut R1(config-if)#exit #Ruta por defecto para internet R1(config)#ip route 0.0.0.0 0.0.0.0 192.168.122.1 #Guarda la configuración R1#write #Configuración de SNAT R1#conf term R1(config)#access-list 1 permit 90.0.0.0 0.0.0.255 R1(config)#access-list 1 permit 100.0.0.0 0.0.0.255 R1(config)# ip nat pool NAT-Pool 192.168.122.127 192.168.122.127 prefix-length 24 R1(config)#ip nat inside source list 1 pool NAT-Pool overload R1(config)#interface FastEthernet0/0 R1(config-if)#ip nat outside R1(config)#interface FastEthernet1/0 R1(config-if)#ip nat inside R1(config)#interface FastEthernet1/1 R1(config-if)#ip nat inside Server Configuration 1\nServer 1 network configuration:\ndebian@servidor1:~$ cat /etc/network/interfaces auto lo iface lo inet loopback auto ens3 iface ens3 inet static address 90.0.0.2 netmask 255.255.255.0 gateway 90.0.0.1 dns-nameservers 8.8.8.8 auto ens4 iface ens4 inet static address 192.168.0.1 netmask 255.255.255.0 We will also configure the SNAT:\n#Activa el bit de forwarding debian@servidor1:~$ sudo nano /etc/sysctl.conf net.ipv4.ip_forward=1 #Regla SNAT debian@servidor1:~$ sudo iptables -t nat -A POSTROUTING -o ens3 -s 192.168.0.0/24 -j MASQUERADE #Te recomiendo que lo hagas permanente , configura iptables-persistent debian@servidor1:~$ sudo apt install iptables-persistent Server Configuration 2\nServer 2 network configuration:\ndebian@servidor2:~$ cat /etc/network/interfaces auto lo iface lo inet loopback auto ens3 iface ens3 inet static address 100.0.0.2 netmask 255.255.255.0 gateway 100.0.0.1 dns-nameservers 8.8.8.8 auto ens4 iface ens4 inet static address 192.168.1.1 netmask 255.255.255.0 We will also configure the SNAT:\n#Activa el bit de forwarding debian@servidor2:~$ sudo nano /etc/sysctl.conf net.ipv4.ip_forward=1 #Regla SNAT debian@servidor2:~$ sudo iptables -t nat -A POSTROUTING -o ens3 -s 192.168.1.0/24 -j MASQUERADE #Te recomiendo que lo hagas permanente , configura iptables-persistent debian@servidor2:~$ sudo apt install iptables-persistent Roulting check We will check that we have routed our stage well, for that from the servers we will do a ping on the contrary and has the Internet.\nFrom server 1:\ndebian@servidor1:~$ ping 8.8.8.8 -c 1 PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data. 64 bytes from 8.8.8.8: icmp_seq=1 ttl=112 time=37.4 ms --- 8.8.8.8 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 37.374/37.374/37.374/0.000 ms debian@servidor1:~$ debian@servidor1:~$ ping 100.0.0.2 -c 1 PING 100.0.0.2 (100.0.0.2) 56(84) bytes of data. 64 bytes from 100.0.0.2: icmp_seq=1 ttl=63 time=18.6 ms --- 100.0.0.2 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 18.567/18.567/18.567/0.000 ms debian@servidor1:~$ From server 2:\ndebian@servidor2:~$ ping 90.0.0.2 -c 1 PING 90.0.0.2 (90.0.0.2) 56(84) bytes of data. 64 bytes from 90.0.0.2: icmp_seq=1 ttl=63 time=19.1 ms --- 90.0.0.2 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 19.099/19.099/19.099/0.000 ms debian@servidor2:~$ ping 8.8.8.8 -c 1 PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data. 64 bytes from 8.8.8.8: icmp_seq=1 ttl=112 time=160 ms --- 8.8.8.8 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 160.147/160.147/160.147/0.000 ms debian@servidor2:~$ We will also check from the customers as you have set up a snack.\nFrom customer 1:\ndebian@cliente1:~$ ping 100.0.0.2 -c 1 PING 100.0.0.2 (100.0.0.2) 56(84) bytes of data. 64 bytes from 100.0.0.2: icmp_seq=1 ttl=62 time=19.0 ms --- 100.0.0.2 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 18.968/18.968/18.968/0.000 ms debian@cliente1:~$ ping 8.8.8.8 -c 1 PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data. 64 bytes from 8.8.8.8: icmp_seq=1 ttl=111 time=61.6 ms --- 8.8.8.8 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 61.598/61.598/61.598/0.000 ms From customer 3:\ndebian@cliente3:~$ ping 90.0.0.2 -c 1 PING 90.0.0.2 (90.0.0.2) 56(84) bytes of data. 64 bytes from 90.0.0.2: icmp_seq=1 ttl=62 time=15.7 ms --- 90.0.0.2 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 15.656/15.656/15.656/0.000 ms debian@cliente3:~$ ping 8.8.8.8 -c 1 PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data. 64 bytes from 8.8.8.8: icmp_seq=1 ttl=111 time=45.8 ms --- 8.8.8.8 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 45.760/45.760/45.760/0.000 ms OpenVPN installation We will install the openvpn package on both servers\n#Servidor 1 debian@servidor1:~$ sudo apt install -y openvpn #Servidor 2 debian@servidor2:~$ sudo apt install -y openvpn # Key and certificate generation We can generate the certificates manually, but there is a tool called Easy RSA that automates this process. In addition, Easy RSA facilitates the generation of Diffie-Hellman modules, which are essential for the operation of the OpenVPN server.\nWe don\u0026rsquo;t need to download it since it comes with the openvpn package.\nFor OpenVPN we need to create:\nA private key and a x509 certificate for the certifying authority it signs (CA) A private key and a signed x509 certificate for the server. A private key and a signed x509 certificate for each client. A Diffie-Hellman group for the server. On server 1, we will copy the variable example file to avoid the repeated request of information such as organization, country, province, etc., by EasyRSA.\ndebian@servidor1:/usr/share/easy-rsa$ sudo cp vars.example vars We will edit the same and change the following values:\ndebian@servidor1:/usr/share/easy-rsa$ sudo nano vars set_var EASYRSA_REQ_COUNTRY \u0026#34;ES\u0026#34; set_var EASYRSA_REQ_PROVINCE \u0026#34;Sevilla\u0026#34; set_var EASYRSA_REQ_CITY \u0026#34;Dos Hermanas\u0026#34; set_var EASYRSA_REQ_ORG \u0026#34;iesgn\u0026#34; set_var EASYRSA_REQ_EMAIL \u0026#34;contacto@javiercd.es\u0026#34; set_var EASYRSA_REQ_OU \u0026#34;Informatica\u0026#34; Once we have changed the default values to our own, we will start the public key infrastructure (PKI) using the EasyRSA script. When running this command, a new PKI directory is created with the structure needed to manage the keys and certificates.\ndebian@servidor1:/usr/share/easy-rsa$ sudo ./easyrsa init-pki * Notice: init-pki complete; you may now create a CA or requests. Your newly created PKI dir is: * /usr/share/easy-rsa/pki Generation of the Diffie-Hellman parameters The Diffie-Hellman exchange key is a cryptographic method that allows two parties to safely agree on a shared session key on an unsafe channel. So let\u0026rsquo;s generate it by using the following command:\ndebian@servidor1:/usr/share/easy-rsa$ sudo ./easyrsa gen-dh * Notice: Using Easy-RSA configuration from: /usr/share/easy-rsa/vars * WARNING: Move your vars file to your PKI folder, where it is safe! * Notice: Using SSL: openssl OpenSSL 3.0.11 19 Sep 2023 (Library: OpenSSL 3.0.11 19 Sep 2023) Generating DH parameters, 2048 bit long safe prime ......... * Notice: DH parameters of size 2048 created at /usr/share/easy-rsa/pki/dh.pem We will have been generated the key in / usr / share / easy-rsa / pki / dh.pem, as indicated by the command output.\nGeneration of CA certificate We will proceed to generate the certificate of our CA:\ndebian@servidor1:/usr/share/easy-rsa$ sudo ./easyrsa build-ca nopass * Notice: Using Easy-RSA configuration from: /usr/share/easy-rsa/vars * WARNING: Move your vars file to your PKI folder, where it is safe! * Notice: Using SSL: openssl OpenSSL 3.0.11 19 Sep 2023 (Library: OpenSSL 3.0.11 19 Sep 2023) Using configuration from /usr/share/easy-rsa/pki/52a64968/temp.25a8f31d You are about to be asked to enter information that will be incorporated into your certificate request. What you are about to enter is what is called a Distinguished Name or a DN. There are quite a few fields but you can leave some blank For some fields there will be a default value, If you enter \u0026#39;.\u0026#39;, the field will be left blank. ----- Common Name (eg: your user, host, or server name) [Easy-RSA CA]:ca.javiercd.es * Notice: CA creation complete and you may now import and sign cert requests. Your new CA certificate file for publishing is at: /usr/share/easy-rsa/pki/ca.crt We will have been generated in / usr / share / easy-rsa / pki / ca.crt\nserver certificate generation 1 With the following command we will generate the certificates for server 1. Several files will be generated:\nservor1.req: This file contains the certificate application generated for the server servor1.key: This file contains the private key debian@servidor1:/usr/share/easy-rsa$ sudo ./easyrsa gen-req servidor1 nopass * Notice: Using Easy-RSA configuration from: /usr/share/easy-rsa/vars * WARNING: Move your vars file to your PKI folder, where it is safe! * Notice: Using SSL: openssl OpenSSL 3.0.11 19 Sep 2023 (Library: OpenSSL 3.0.11 19 Sepou are about to be asked to enter information that will be incorporated into your certificate request. What you are about to enter is what is called a Distinguished Name or a DN. There are quite a few fields but you can leave some blank For some fields there will be a default value, If you enter \u0026#39;.\u0026#39;, the field will be left blank. ----- Common Name (eg: your user, host, or server name) [servidor1]: * Notice: Keypair and certificate request completed. Your files are: req: /usr/share/easy-rsa/pki/reqs/servidor1.req key: /usr/share/easy-rsa/pki/private/servidor1.key Now let\u0026rsquo;s sign the server\u0026rsquo;s certification1 with the CA\u0026rsquo;s private key.\ndebian@servidor1:/usr/share/easy-rsa$ sudo ./easyrsa sign-req server servidor1 * Notice: Using Easy-RSA configuration from: /usr/share/easy-rsa/vars * WARNING: Move your vars file to your PKI folder, where it is safe! * Notice: Using SSL: openssl OpenSSL 3.0.11 19 Sep 2023 (Library: OpenSSL 3.0.11 19 Sep 2023) You are about to sign the following certificate. Please check over the details shown below for accuracy. Note that this request has not been cryptographically verified. Please be sure it came from a trusted source or that you have verified the request checksum with the sender. Request subject, to be signed as a server certificate for 825 days: subject= commonName = servidor1 Type the word \u0026#39;yes\u0026#39; to continue, or any other input to abort. Confirm request details: yes Using configuration from /usr/share/easy-rsa/pki/e66a9d70/temp.40a6d9dd Check that the request matches the signature Signature ok The Subject\u0026#39;s Distinguished Name is as follows commonName :ASN.1 12:\u0026#39;servidor1\u0026#39; Certificate is to be certified until Apr 18 16:15:16 2026 GMT (825 days) Write out database with 1 new entries Database updated * Notice: Certificate created at: /usr/share/easy-rsa/pki/issued/servidor1.crt As you can see we will have the 3 files regarding our 1 server generated:\n#Certificado firmado debian@servidor1:/usr/share/easy-rsa$ sudo ls -la pki/issued | grep servidor1 -rw------- 1 root root 4637 Jan 14 16:15 servidor1.crt #Clave privada debian@servidor1:/usr/share/easy-rsa$ sudo ls -la pki/private | grep servidor1 -rw------- 1 root root 1704 Jan 14 16:09 servidor1.key #Solicitud de firma del certificado debian@servidor1:/usr/share/easy-rsa$ sudo ls -la pki/reqs | grep servidor1 -rw------- 1 root root 891 Jan 14 16:09 servidor1.req server certificate generation 2 We will repeat the same process we have done for server 1, but now for our server 2.\nWe will generate the key and the certificate:\ndebian@servidor1:/usr/share/easy-rsa$ sudo ./easyrsa gen-req servidor2 nopass * Notice: Using Easy-RSA configuration from: /usr/share/easy-rsa/vars * WARNING: Move your vars file to your PKI folder, where it is safe! * Notice: Using SSL: openssl OpenSSL 3.0.11 19 Sep 2023 (Library: OpenSSL 3.0.11 19 Sep 2023) .+.+.................+...+...+.......+..+.+...........+.+..+.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*........+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*.+....+..+..........+....................+.......+.....+.......+...+..+................+..+.......+.........+...........+....+..+...+.+......+..+...+....+.....+.........+....+......+......+.........+..+...+............+...+.+...+..+....+............+...............+..+...+.............+............+.....+.......+.....+.+......+........+.....................+.+......+..+.+......+.....+.........+......+.........+.......+...+...............+.....+...............+.+....................+......+...+................+...+...+............+.....+...............+.......+......+........+......+....+......+........+.+.....+....+..+.+........+.+.....+.+.....+...........................+......+.+...+.....+......+....+..+....+......+........+.............+..+...+.........+....+..+...+....+...+...+...........+......+...................+.....+................+...+..+....+...+..+......+...+..........+..+.......+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ ..........+............+...+....+...+.....+...+......+.+.....+.......+..+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*.........+.+......+..+.+..+...+.........+............+..................+.......+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*.+...+...........+.+...+..+....+..............+......+...............+.+......+..............+....+......+..................+...+............+..+....+.....+.......+...+.........+..+......+...+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ ----- You are about to be asked to enter information that will be incorporated into your certificate request. What you are about to enter is what is called a Distinguished Name or a DN. There are quite a few fields but you can leave some blank For some fields there will be a default value, If you enter \u0026#39;.\u0026#39;, the field will be left blank. ----- Common Name (eg: your user, host, or server name) [servidor2]: * Notice: Keypair and certificate request completed. Your files are: req: /usr/share/easy-rsa/pki/reqs/servidor2.req key: /usr/share/easy-rsa/pki/private/servidor2.key See that now to this certificate when we sign it we\u0026rsquo;ll say it\u0026rsquo;s client type. Since server 2 \u0026ldquo;acted as a client\u0026rdquo;:\ndebian@servidor1:/usr/share/easy-rsa$ sudo ./easyrsa sign-req client servidor2 * Notice: Using Easy-RSA configuration from: /usr/share/easy-rsa/vars * WARNING: Move your vars file to your PKI folder, where it is safe! * Notice: Using SSL: openssl OpenSSL 3.0.11 19 Sep 2023 (Library: OpenSSL 3.0.11 19 Sep 2023) You are about to sign the following certificate. Please check over the details shown below for accuracy. Note that this request has not been cryptographically verified. Please be sure it came from a trusted source or that you have verified the request checksum with the sender. Request subject, to be signed as a client certificate for 825 days: subject= commonName = servidor2 Type the word \u0026#39;yes\u0026#39; to continue, or any other input to abort. Confirm request details: yes Using configuration from /usr/share/easy-rsa/pki/8e1b2785/temp.504078d9 Check that the request matches the signature Signature ok The Subject\u0026#39;s Distinguished Name is as follows commonName :ASN.1 12:\u0026#39;servidor2\u0026#39; Certificate is to be certified until Apr 18 16:57:49 2026 GMT (825 days) Write out database with 1 new entries Database updated * Notice: Certificate created at: /usr/share/easy-rsa/pki/issued/servidor2.crt Generation of the TLS key This step is optional, but it is recommended to generate a shared key (also known as additional parameter key or ta.key key) in the OpenVPN context.)\nIn the context of OpenVPN, this shared key (ta.key) is used to sign and verify all data packages transmitted through the VPN connection. Its main purpose is to provide an additional layer of security and authentication, helping to prevent attacks such as the replay.\ndebian@servidor1:/usr/share/easy-rsa$ sudo openvpn --genkey --secret ta.key Distribute the keys Now we have to get every key to its proper place.\nIn server 1 we will create the / etc / openvpn / keys directory and save the following files:\n#Creamos el directorio donde guardaremos las claves debian@servidor1:/usr/share/easy-rsa$ sudo mkdir /etc/openvpn/keys #Nos la copiamos al directorio creado debian@servidor1:~$ sudo cp /usr/share/easy-rsa/pki/dh.pem /etc/openvpn/keys debian@servidor1:~$ sudo cp /usr/share/easy-rsa/pki/ca.crt /etc/openvpn/keys debian@servidor1:~$ sudo cp /usr/share/easy-rsa/pki/private/servidor1.key /etc/openvpn/keys debian@servidor1:~$ sudo cp /usr/share/easy-rsa/pki/issued/servidor1.crt /etc/openvpn/keys debian@servidor1:~$ sudo cp /usr/share/easy-rsa/ta.key /etc/openvpn/keys #Comprobamos que tenemos todoos los ficheros necesarios debian@servidor1:~$ sudo ls -l /etc/openvpn/keys total 24 -rw------- 1 root root 1216 Jan 14 17:08 ca.crt -rw------- 1 root root 424 Jan 14 17:08 dh.pem -rw------- 1 root root 4637 Jan 14 17:08 servidor1.crt -rw------- 1 root root 1704 Jan 14 17:08 servidor1.key -rw------- 1 root root 636 Jan 14 17:08 ta.key Now we\u0026rsquo;ll do the same for the service2, but we\u0026rsquo;ll have to take the keys using SCP.\n#Creamos el directorio donde guardaremos las claves debian@servidor2:~$ sudo mkdir /etc/openvpn/keys #Desde servidor1 pasare a servidor2 las claves debian@servidor1:~$ sudo scp /usr/share/easy-rsa/pki/ca.crt debian@100.0.0.2:/home/debian debian@servidor1:~$ sudo scp /usr/share/easy-rsa/ta.key debian@100.0.0.2:/home/debian debian@servidor1:~$ sudo scp /usr/share/easy-rsa/pki/private/servidor2.key debian@100.0.0.2:/home/debian debian@servidor1:~$ sudo scp /usr/share/easy-rsa/pki/issued/servidor2.crt debian@100.0.0.2:/home/debian #Las movemos a /etc/openvpn/keys debian@servidor2:~$ sudo mv * /etc/openvpn/keys #Nos aseguramos de tener los 4 ficheros que hemos enviado : debian@servidor2:~$ sudo ls -l /etc/openvpn/keys total 20 -rw------- 1 debian debian 1216 Jan 14 17:12 ca.crt -rw------- 1 debian debian 4515 Jan 14 17:14 servidor2.crt -rw------- 1 debian debian 1704 Jan 14 17:13 servidor2.key -rw------- 1 debian debian 636 Jan 14 17:13 ta.key OpenVPN configuration OpenVPN configuration on server 1\nMake sure you have the forwardbit on your server activated:\ndebian@servidor1:~$ sudo sysctl net.ipv4.ip_forward net.ipv4.ip_forward = 1 We will edit the / etc / default / openvpn file and discomment the following line to indicate that all vpn tunnels are automatically started:\nAUTOSTART=\u0026#34;all\u0026#34; We will create a configuration file for our server, in my case my configuration is as follows:\ndebian@servidor1:~$ sudo nano /etc/openvpn/servidor1.conf #Use a dynamic TUN device dev tun #Use tcp for communicating with the client proto tcp #Virtual IP range for the VPN clients server 10.99.99.0 255.255.255.0 #Push the route for the local subnet to the clients push \u0026#34;route 192.168.0.0 255.255.255.0\u0026#34; #Enable TLS and assume the server role tls-server #Diffie-Hellman parameters dh /etc/openvpn/keys/dh.pem #Certificate Authority\u0026#39;s certificate ca /etc/openvpn/keys/ca.crt #Server\u0026#39;s certificate cert /etc/openvpn/keys/servidor1.crt #Server\u0026#39;s private key key /etc/openvpn/keys/servidor1.key #Use fast LZO compression comp-lzo #Ping the remote every 10 seconds and restart after 60 seconds keepalive 10 60 #Set output verbosity to normal usage range verb 3 Now restart the service to apply the changes and lift the interface. You may need to restart the machine:\ndebian@servidor1:~$ sudo systemctl restart openvpn.service And we\u0026rsquo;ll see that the tun0 interface is up:\ndebian@servidor1:~$ ip a 1: lo: \u0026lt;LOOPBACK,UP,LOWER_UP\u0026gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host noprefixroute valid_lft forever preferred_lft forever 2: ens3: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000 link/ether 0c:21:18:28:00:00 brd ff:ff:ff:ff:ff:ff altname enp0s3 inet 90.0.0.2/24 brd 90.0.0.255 scope global ens3 valid_lft forever preferred_lft forever inet6 fe80::e21:18ff:fe28:0/64 scope link valid_lft forever preferred_lft forever 3: ens4: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000 link/ether 0c:21:18:28:00:01 brd ff:ff:ff:ff:ff:ff altname enp0s4 inet 192.168.0.1/24 brd 192.168.0.255 scope global ens4 valid_lft forever preferred_lft forever inet6 fe80::e21:18ff:fe28:1/64 scope link valid_lft forever preferred_lft forever 4: tun0: \u0026lt;POINTOPOINT,MULTICAST,NOARP,UP,LOWER_UP\u0026gt; mtu 1500 qdisc fq_codel state UNKNOWN group default qlen 500 link/none inet 10.99.99.1 peer 10.99.99.2/32 scope global tun0 valid_lft forever preferred_lft forever inet6 fe80::8491:9eb9:104e:6bf7/64 scope link stable-privacy valid_lft forever preferred_lft forever OpenVPN configuration on server 2\nMake sure you have the forwardbit on your server activated:\ndebian@servidor2:~$ sudo sysctl net.ipv4.ip_forward net.ipv4.ip_forward = 1 We will edit the / etc / default / openvpn file and discomment the following line to indicate that all vpn tunnels are automatically started:\nAUTOSTART=\u0026#34;all\u0026#34; We will create a configuration file for our server, in my case my configuration is as follows:\ndebian@servidor2:~$ sudo nano /etc/openvpn/servidor2.conf #Use a dynamic TUN device dev tun #Connect to server remote 90.0.0.2 #Set virtual point-to-point IP addresses ifconfig 10.99.99.0 255.255.255.0 pull #Use TCP for communicating with server proto tcp-client #Enable TLS and assume client role during TLS handshake tls-client #Certificado de la CA ca /etc/openvpn/keys/ca.crt #Certificado del cliente cert /etc/openvpn/keys/servidor2.crt #Clave privada del cliente key /etc/openvpn/keys/servidor2.key #Use fast LZO compression comp-lzo #Ping remote every 10sg and restart after 60sg passed without sign of life from remote keepalive 10 60 #Set output verbosity to normal usage range verb 3 #Output logging messages to openvpn.log file log /var/log/openvpn.log Now restart the service to apply the changes and lift the interface. You may need to restart the machine:\ndebian@servidor2:~$ sudo systemctl restart openvpn.service And we\u0026rsquo;ll see that the tun0 interface is up:\ndebian@servidor2:~$ ip a 1: lo: \u0026lt;LOOPBACK,UP,LOWER_UP\u0026gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host noprefixroute valid_lft forever preferred_lft forever 2: ens3: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000 link/ether 0c:82:67:88:00:00 brd ff:ff:ff:ff:ff:ff altname enp0s3 inet 100.0.0.2/24 brd 100.0.0.255 scope global ens3 valid_lft forever preferred_lft forever inet6 fe80::e82:67ff:fe88:0/64 scope link valid_lft forever preferred_lft forever 3: ens4: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000 link/ether 0c:82:67:88:00:01 brd ff:ff:ff:ff:ff:ff altname enp0s4 inet 192.168.1.1/24 brd 192.168.1.255 scope global ens4 valid_lft forever preferred_lft forever inet6 fe80::e82:67ff:fe88:1/64 scope link valid_lft forever preferred_lft forever 4: tun0: \u0026lt;POINTOPOINT,MULTICAST,NOARP,UP,LOWER_UP\u0026gt; mtu 1500 qdisc fq_codel state UNKNOWN group default qlen 500 link/none inet 10.99.99.6 peer 10.99.99.5/32 scope global tun0 valid_lft forever preferred_lft forever inet6 fe80::67f5:fd86:d948:132a/64 scope link stable-privacy valid_lft forever preferred_lft forever Operating check Now let\u0026rsquo;s check that from server 2 we can access the client machines of the network 192.168.0.0 / 24.\ndebian@servidor2:~$ ip r default via 100.0.0.1 dev ens3 onlink 10.99.99.1 via 10.99.99.5 dev tun0 10.99.99.5 dev tun0 proto kernel scope link src 10.99.99.6 100.0.0.0/24 dev ens3 proto kernel scope link src 100.0.0.2 192.168.0.0/24 via 10.99.99.5 dev tun0 192.168.1.0/24 dev ens4 proto kernel scope link src 192.168.1.1 As you can see, we will have connectivity from the server to the other network equipment.\ndebian@servidor2:~$ ping 192.168.0.2 PING 192.168.0.2 (192.168.0.2) 56(84) bytes of data. 64 bytes from 192.168.0.2: icmp_seq=1 ttl=63 time=16.4 ms 64 bytes from 192.168.0.2: icmp_seq=2 ttl=63 time=14.3 ms 64 bytes from 192.168.0.2: icmp_seq=3 ttl=63 time=19.1 ms ^C --- 192.168.0.2 ping statistics --- 3 packets transmitted, 3 received, 0% packet loss, time 2004ms rtt min/avg/max/mdev = 14.308/16.582/19.060/1.945 ms We can also connect by ssh, I will connect to client 1:\ndebian@servidor2:~$ ssh debian@192.168.0.2 The authenticity of host \u0026#39;192.168.0.2 (192.168.0.2)\u0026#39; can\u0026#39;t be established. ED25519 key fingerprint is SHA256:zn2i5rAyilMi1i+Kqb6ys8GhldKuHKYZCDKbD1aXqjQ. This key is not known by any other names. Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added \u0026#39;192.168.0.2\u0026#39; (ED25519) to the list of known hosts. debian@192.168.0.2\u0026#39;s password: Linux cliente1 6.1.0-15-cloud-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.1.66-1 (2023-12-09) x86_64 The programs included with the Debian GNU/Linux system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. Last login: Sun Jan 14 15:29:30 2024 debian@cliente1:~$ ip -4 a 1: lo: \u0026lt;LOOPBACK,UP,LOWER_UP\u0026gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever 2: ens3: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000 altname enp0s3 inet 192.168.0.2/24 brd 192.168.0.255 scope global ens3 valid_lft forever preferred_lft forever ","date":"March 28, 2024","hero":"/images/vpn/remoteaccess.png","permalink":"https://www.javiercd.es/en/posts/vpn/acceso_remoto_openvpn/accesoremoto_openvpn/","summary":"\u003cul\u003e\n\u003cli\u003eOne of the two teams (which will act as a server) will be connected to two networks\u003c/li\u003e\n\u003cli\u003eFor the authentication of the extremes, digital certificates shall be used, which shall be generated using openssl and stored in the / etc / openvpn directory, together with the Diffie- Helman parameters and the certificate of the Certification Authority itself.\u003c/li\u003e\n\u003cli\u003eNetwork addresses 10.99.99.0 / 24 will be used for VPN virtual addresses. The address 10.99.99.1 shall be assigned to the VPN server.\u003c/li\u003e\n\u003cli\u003eThe server and client configuration files will be created in the / etc / openvpn directory of each machine, and will be called servor.conf and cliente.conf respectively.\u003c/li\u003e\n\u003cli\u003eAfter the establishment of the VPN, the client machine must be able to access a machine on the other network to which the server is connected.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"riding-the-stage\"\u003eRiding the stage\u003c/h3\u003e\n\u003cp\u003eTo perform this exercise I have mounted the following scenario on GNS3:\u003c/p\u003e","tags":["VPN","CISCO","LINUX","DEBIAN","OPENVPN"],"title":"Remote access VPN with OpenVPN and x509 certificates"},{"categories":null,"contents":"\n[!NOTE] I will start from the VPN post remote access with Wireguard, so you may refer to this one during this article.\nKey generation The first thing we will do is to install both the Wireguard package in both machines:\nroot@servidor1:~# sudo apt update \u0026amp;\u0026amp; sudo apt install wireguard debian@servidor2:~$ sudo apt update \u0026amp;\u0026amp; sudo apt install wireguard Let\u0026rsquo;s generate the pairs of keys that will be used to encrypt the connection. We will need a key for the server and a couple of additional keys for each client.\nWe\u0026rsquo;ll start with the server key pair 1:\ndebian@servidor1:~$ wg genkey | sudo tee /etc/wireguard/server_private.key | wg pubkey | sudo tee /etc/wireguard/server_public.key 2/RjGUbiQuaFR7atYaQ8lcczz2wXxO9aIwfzZEMPXCQ= #Puedes visualizar la clave privada posteriormente : debian@servidor1:~$ sudo cat /etc/wireguard/server_private.key 2Gg3EnKD+rdyMPEjMikZTwq2w0m78KrEcUsAJ/8icFA= #Puedes visualizar la clave publica posteriormente : debian@servidor1:~$ sudo cat /etc/wireguard/server_public.key 2/RjGUbiQuaFR7atYaQ8lcczz2wXxO9aIwfzZEMPXCQ= We move to the service2 and generate yours:\n#Generamos el par de claves para el cliente de acceso remoto servidor2 debian@servidor2:~$ wg genkey | sudo tee /etc/wireguard/client_private.key | wg pubkey | sudo tee /etc/wireguard/client_public.key gS2ED2zfzMHBttMpFhH3MvRpr8D4ALEDTumNcib8A2g= #Puedes visualizar la clave privada posteriormente : debian@servidor2:~$ sudo cat /etc/wireguard/client_private.key 8IdsSwunfU5zJQzS5nZg4D//cFEbRa+27HGOQE1V90k= #Puedes visualizar la clave publica posteriormente : debian@servidor2:~$ sudo cat /etc/wireguard/client_public.key gS2ED2zfzMHBttMpFhH3MvRpr8D4ALEDTumNcib8A2g= Wireguard configuration We will modify the configuration file on the server machine 1. The only necessary modification will be in the \u0026ldquo;AllowedIPs\u0026rdquo; parameter, where we must add the network address to which we will connect. In addition, we will include in the \u0026ldquo;Peer Endpoint\u0026rdquo; field the IP address of the other machine, as both will act as servers in this configuration.\ndebian@servidor1:~$ sudo cat /etc/wireguard/wg0.conf [Interface] Address = 10.99.99.1 PrivateKey = 2Gg3EnKD+rdyMPEjMikZTwq2w0m78KrEcUsAJ/8icFA= ListenPort = 51820 [Peer] Publickey = gS2ED2zfzMHBttMpFhH3MvRpr8D4ALEDTumNcib8A2g= AllowedIPs = 10.99.99.2/32,192.168.1.0/24 PersistentKeepAlive = 25 Endpoint = 100.0.0.2:51820 The same for the service machine 2, the configuration would be as follows:\ndebian@servidor2:~$ sudo cat /etc/wireguard/wg0.conf [Interface] Address = 10.99.99.2/24 PrivateKey = 8IdsSwunfU5zJQzS5nZg4D//cFEbRa+27HGOQE1V90k= ListenPort = 51820 [Peer] PublicKey = 2/RjGUbiQuaFR7atYaQ8lcczz2wXxO9aIwfzZEMPXCQ= AllowedIPs = 10.99.99.1/32,192.168.0.0/24 Endpoint = 90.0.0.2:51820 PersistentKeepalive = 25 As I have the tunnels of the previous exercise, we will lower them and upload them to the new configuration:\ndebian@servidor1:~$ sudo wg-quick down wg0 debian@servidor2:~$ sudo wg-quick down wg0 debian@servidor1:~$ sudo wg-quick up wg0 debian@servidor1:~$ sudo wg-quick up wg0 We will check that both servers have created the wg0 interface, which is the one that corresponds to us by the name of the configuration file:\ndebian@servidor1:~$ sudo ip link show wg0 11: wg0: \u0026lt;POINTOPOINT,NOARP,UP,LOWER_UP\u0026gt; mtu 1420 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000 link/none debian@servidor2:~$ sudo ip link show wg0 11: wg0: \u0026lt;POINTOPOINT,NOARP,UP,LOWER_UP\u0026gt; mtu 1420 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000 link/none Below I will show you the routing tables of the 2 servers to see that routes have been created to reach both private networks through the wg0 interface:\ndebian@servidor1:~$ ip r default via 90.0.0.1 dev ens3 onlink 10.99.99.2 dev wg0 scope link 90.0.0.0/24 dev ens3 proto kernel scope link src 90.0.0.2 192.168.0.0/24 dev ens4 proto kernel scope link src 192.168.0.1 192.168.1.0/24 dev wg0 scope link debian@servidor2:~$ ip r default via 100.0.0.1 dev ens3 onlink 10.99.99.0/24 dev wg0 proto kernel scope link src 10.99.99.2 100.0.0.0/24 dev ens3 proto kernel scope link src 100.0.0.2 192.168.0.0/24 dev wg0 scope link 192.168.1.0/24 dev ens4 proto kernel scope link src 192.168.1.1 Operating check Now, both private networks are fully connected, allowing us to access from either one to the other. We will conduct some tests from the customers to make sure the connection is working properly.\nI will do a ping from the network 192.168.0.0 to the 192.168.1.0 with client1:\n#cliente1 --\u0026gt; servidor2 debian@cliente1:~$ ping 192.168.1.1 -c 1 PING 192.168.1.1 (192.168.1.1) 56(84) bytes of data. 64 bytes from 192.168.1.1: icmp_seq=1 ttl=63 time=17.6 ms --- 192.168.1.1 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 17.554/17.554/17.554/0.000 ms #Cliente1 --\u0026gt; Cliente 3 debian@cliente1:~$ ping 192.168.1.2 -c 1 PING 192.168.1.2 (192.168.1.2) 56(84) bytes of data. 64 bytes from 192.168.1.2: icmp_seq=1 ttl=62 time=12.9 ms debian@cliente1:~$ ping 192.168.1.1 -c 1 PING 192.168.1.1 (192.168.1.1) 56(84) bytes of data. 64 bytes from 192.168.1.1: icmp_seq=1 ttl=63 time=17.8 ms --- 192.168.1.1 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 17.803/17.803/17.803/0.000 ms #Cliente1 --\u0026gt; Windows debian@cliente1:~$ ping 192.168.1.5 -c 1 PING 192.168.1.5 (192.168.1.5) 56(84) bytes of data. 64 bytes from 192.168.1.5: icmp_seq=1 ttl=126 time=19.9 ms --- 192.168.1.5 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 19.906/19.906/19.906/0.000 ms #Cliente1 --\u0026gt; Android debian@cliente1:~$ ping 192.168.1.4 -c 1 PING 192.168.1.4 (192.168.1.4) 56(84) bytes of data. 64 bytes from 192.168.1.4: icmp_seq=1 ttl=62 time=20.8 ms --- 192.168.1.4 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 20.834/20.834/20.834/0.000 ms As you can see, I have connectivity from any client on the network 192.168.0.0 to 192.168.1.0.\nLet\u0026rsquo;s check it in the opposite direction, i.e. from the network 192.168.1.0 to the 192.168.0.0:\n#Cliente3 --\u0026gt; Servidor1 debian@cliente3:~$ ping 192.168.0.1 -c 1 PING 192.168.0.1 (192.168.0.1) 56(84) bytes of data. 64 bytes from 192.168.0.1: icmp_seq=1 ttl=63 time=16.6 ms --- 192.168.0.1 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 16.581/16.581/16.581/0.000 ms #Cliente3 --\u0026gt; Cliente1 debian@cliente3:~$ ping 192.168.0.2 -c 1 PING 192.168.0.2 (192.168.0.2) 56(84) bytes of data. 64 bytes from 192.168.0.2: icmp_seq=1 ttl=62 time=21.0 ms --- 192.168.0.2 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 21.031/21.031/21.031/0.000 ms #Cliente3 --\u0026gt; Cliente2 debian@cliente3:~$ ping 192.168.0.3 -c 1 PING 192.168.0.3 (192.168.0.3) 56(84) bytes of data. 64 bytes from 192.168.0.3: icmp_seq=1 ttl=62 time=16.1 ms --- 192.168.0.3 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 16.115/16.115/16.115/0.000 ms To make sure that the traffic is going through the tunnel at the 2 ends we will do a traceroute from the 2 networks:\nFrom the network 192.168.0.0 to the 192.168.1.0:\ndebian@cliente1:~$ traceroute 192.168.1.2 traceroute to 192.168.1.2 (192.168.1.2), 30 hops max, 60 byte packets 1 192.168.0.1 (192.168.0.1) 0.629 ms 0.601 ms 0.595 ms 2 10.99.99.2 (10.99.99.2) 13.677 ms 13.667 ms 13.657 ms 3 192.168.1.2 (192.168.1.2) 13.649 ms 13.636 ms 13.626 ms From the network 192.168.1.0 to the 192.168.0.0:\ndebian@cliente3:~$ traceroute 192.168.0.3 traceroute to 192.168.0.3 (192.168.0.3), 30 hops max, 60 byte packets 1 192.168.1.1 (192.168.1.1) 0.430 ms 0.399 ms 0.393 ms 2 10.99.99.1 (10.99.99.1) 19.343 ms 19.337 ms 19.329 ms 3 192.168.0.3 (192.168.0.3) 19.324 ms 19.320 ms 19.313 ms ","date":"March 28, 2024","hero":"/images/vpn/wireguard_site_to_site.png","permalink":"https://www.javiercd.es/en/posts/vpn/site_to_site_wireguard/site_to_site_wireguard/","summary":"\u003cp\u003e\u003cimg src=\"/vpn/site_to_site_wireguard/img/Pastedimage20240114150833.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e[!NOTE]\nI will start from the VPN post remote access with Wireguard, so you may refer to this one during this article.\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch2 id=\"key-generation\"\u003eKey generation\u003c/h2\u003e\n\u003cp\u003eThe first thing we will do is to install both the Wireguard package in both machines:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eroot@servidor1:~# sudo apt update \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e sudo apt install wireguard\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edebian@servidor2:~$ sudo apt update \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e sudo apt install wireguard\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eLet\u0026rsquo;s generate the pairs of keys that will be used to encrypt the connection. We will need a key for the server and a couple of additional keys for each client.\u003c/p\u003e","tags":["VPN","CISCO","LINUX","DEBIAN","WIREGUARD"],"title":"VPN site to site Wireguard"},{"categories":null,"contents":"In this post I\u0026rsquo;m going to mount an IPSEC VPN using swan routers.\n[!NOTE] This post details the configuration of R2 and R3 routers, however R1 is explained in the post of \u0026ldquo;VPN OpenVPN remote access.\u0026rdquo; If you want to see the configuration of the latter, look at the section preparing the stage.\n# Stage configuration As I have changed stage, the 2 new routers have to be set up on the R2 and R3 network.\nI\u0026rsquo;ll start with R2:\nR2(config)#interface FastEthernet0/0 R2(config-if)# ip address 192.168.0.1 255.255.255.0 R2(config-if)#no shut R2(config)#interface FastEthernet1/0 R2(config-if)# ip address 90.0.0.2 255.255.255.0 R2(config-if)# no shutdown R2(config)#ip route 0.0.0.0 0.0.0.0 90.0.0.1 #SNAT R2(config)#$ ip nat pool NAT-Pool 90.0.0.2 90.0.0.2 prefix-length 24 R2(config)#ip nat inside source list 1 pool NAT-Pool overload R2(config)#interface FastEthernet0/0 R2(config-if)#ip nat inside R2(config-if)#interface FastEthernet1/0 R2(config-if)#ip nat outside The same thing but with R3:\nR3(config)#Interface FastEthernet0/0 R3(config-if)#ip address 192.168.1.1 255.255.255.0 R3(config-if)#no shut R3(config-if)#exit R3(config)#Interface FastEthernet1/0 R3(config-if)#ip address 100.0.0.2 255.255.255.0 R3(config-if)#no shut R3(config-if)#exit R3(config)#ip route 0.0.0.0 0.0.0.0 100.0.0.1 R3(config)#ip nat pool NAT-Pool 100.0.0.2 100.0.0.2 prefix-length 24 R3(config)#ip nat inside source list 1 pool NAT-Pool overload R3(config)#interface FastEthernet0/0 R3(config-if)#ip nat inside R3(config-if)#interface FastEthernet1/0 R3(config-if)#ip nat outside VPN IPSEC Cisco configuration Once we have the stage configured as in previous exercises but now all the routers of the stage are cisco we will proceed with the configuration of the IPSEC VPN. The ideal thing is for you to check that the stage is well routed, so as not to make this document longer I will omit it.\nRouter 2\nBelow I describe step by step the configuration to be done in R2, making use of comments I will indicate that we are doing at every moment:\n#Entramos en el modo de configuración R2#conf term #Creamos una política ISAKMP , en mi caso con un número de secuencia de 10. R2(config)#crypto isakmp policy 10 #Establecemos el algoritmo de cifrado AES para la política ISAKMP. R2(config-isakmp)# encryption aes #Configuramos el algoritmo de hash SHA para la política ISAKMP. R2(config-isakmp)# hash sha #Configuramos la autenticación precompartida (pre-shared key) para la política ISAKMP. R2(config-isakmp)# authentication pre-share #Establecemos el grupo de difie-hellman con 2048 bits para la política ISAKMP. R2(config-isakmp)# group 14 #Configuramos la clave precompartida para autenticación con el par remoto 100.0.0.2. R2(config-isakmp)#crypto isakmp key TuClavePrecompartida address 100.0.0.2 #Creamos un conjunto de transformación para la fase 2 (IPsec) con cifrado AES y hash SHA. R2(config)#crypto ipsec transform-set myset esp-aes esp-sha-hmac #Creamos una lista de acceso (ACL) para especificar el tráfico a proteger con IPsec. R2(cfg-crypto-trans)# access-list 100 permit ip 192.168.1.0 0.0.0.255 192.168.0.0 0.0.0.255 #Creamos un mapa criptográfico asociado a ISAKMP e IPsec con número de secuencia 10. R2(config)#crypto map mymap 10 ipsec-isakmp #Especificamos la dirección IP del peer remoto. R2(config-crypto-map)# set peer 100.0.0.2 #Asociamos el conjunto de transformación al mapa criptográfico. R2(config-crypto-map)# set transform-set myset #Asociamos la lista de acceso al mapa criptográfico para identificar el tráfico a proteger. R2(config-crypto-map)# match address 100 #Entramos a la interfaz FastEthernet1/0 (PUBLICA) y le asignamos el mapa criptografico para que envie por esta el trafico de la VPN . R2(config-crypto-map)#interface FastEthernet1/0 R2(config-if)# crypto map mymap Router 3\nBelow I describe step by step the configuration to be done in R3, making use of comments I will indicate that we are doing at every moment:\n#Entramos en el modo de configuración R3#conf term #Creamos una política ISAKMP , en mi caso con un número de secuencia de 10. R3(config)#crypto isakmp policy 10 #Establecemos el algoritmo de cifrado AES para la política ISAKMP. R3(config-isakmp)# encryption aes #Configuramos el algoritmo de hash SHA para la política ISAKMP. R3(config-isakmp)# hash sha #Configuramos la autenticación precompartida (pre-shared key) para la política ISAKMP. R3(config-isakmp)# authentication pre-share #Establecemos el grupo de difie-hellman con 2048 bits para la política ISAKMP. R3(config-isakmp)# group 14 #Configuramos la clave precompartida para autenticación con el par remoto 100.0.0.2. R3(config-isakmp)#crypto isakmp key TuClavePrecompartida address 90.0.0.2 #Creamos un conjunto de transformación para la fase 2 (IPsec) con cifrado AES y hash SHA. R3(config)#crypto ipsec transform-set myset esp-aes esp-sha-hmac #Creamos una lista de acceso (ACL) para especificar el tráfico a proteger con IPsec. R3(cfg-crypto-trans)#access-list 100 permit ip 192.168.1.0 0.0.0.255 192.168.0.0 0.0.0.255 #Creamos un mapa criptográfico asociado a ISAKMP e IPsec con número de secuencia 10. R3(config)#crypto map mymap 10 ipsec-isakmp #Especificamos la dirección IP del peer remoto. R3(config-crypto-map)# set peer 90.0.0.2 #Asociamos el conjunto de transformación al mapa criptográfico. R3(config-crypto-map)# set transform-set myset #Asociamos la lista de acceso al mapa criptográfico para identificar el tráfico a proteger. R3(config-crypto-map)# match address 100 #Entramos a la interfaz FastEthernet1/0 (PUBLICA) y le asignamos el mapa criptografico para que envie por esta el trafico de la VPN . R3(config-crypto-map)#interface FastEthernet1/0 R3(config-if)# crypto map mymap Checks Once the configuration is applied we will see that at both ends the configuration is correct, seeing that the tunnels are up:\nR3#show crypto session Crypto session current status Interface: FastEthernet1/0 Session status: UP-ACTIVE Peer: 90.0.0.2 port 500 IKE SA: local 100.0.0.2/500 remote 90.0.0.2/500 Active IPSEC FLOW: permit ip 192.168.1.0/255.255.255.0 192.168.0.0/255.255.255.0 Active SAs: 2, origin: crypto map R2#show crypto session Crypto session current status Interface: FastEthernet1/0 Session status: UP-ACTIVE Peer: 100.0.0.2 port 500 IKE SA: local 90.0.0.2/500 remote 100.0.0.2/500 Active IPSEC FLOW: permit ip 192.168.0.0/255.255.255.0 192.168.1.0/255.255.255.0 Active SAs: 2, origin: crypto map By seeing this we can make sure that the VPN is up but there are more commands that provide us with different information:\nshow crypto isakmp sa: * * To check the ISAKMP associations show crypto ipsec sa: * * * * To check IPsec associations Connectivity test Let\u0026rsquo;s check that the different customers of the network 192.168.0.0 can communicate with the others of the network 192.168.1.0:\n#Cliente 1 --\u0026gt; R3 debian@cliente1:~$ ping -c 1 192.168.1.1 PING 192.168.1.1 (192.168.1.1) 56(84) bytes of data. 64 bytes from 192.168.1.1: icmp_seq=1 ttl=254 time=89.2 ms --- 192.168.1.1 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 89.167/89.167/89.167/0.000 ms #Cliente1 --\u0026gt; Cliente 3 debian@cliente1:~$ ping -c 1 192.168.1.2 PING 192.168.1.2 (192.168.1.2) 56(84) bytes of data. 64 bytes from 192.168.1.2: icmp_seq=1 ttl=62 time=46.4 ms --- 192.168.1.2 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 46.412/46.412/46.412/0.000 ms Let\u0026rsquo;s check that the different customers of the network 192.168.1.0 can communicate with the others of the network 192.168.0.0:\n#Cliente 3 --\u0026gt; R2 debian@cliente3:~$ ping -c 1 192.168.0.1 PING 192.168.0.1 (192.168.0.1) 56(84) bytes of data. 64 bytes from 192.168.0.1: icmp_seq=1 ttl=254 time=54.4 ms --- 192.168.0.1 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 54.440/54.440/54.440/0.000 ms #Cliente 3 --\u0026gt; Cliente 1 debian@cliente3:~$ ping -c 1 192.168.0.2 PING 192.168.0.2 (192.168.0.2) 56(84) bytes of data. 64 bytes from 192.168.0.2: icmp_seq=1 ttl=62 time=33.5 ms --- 192.168.0.2 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 33.498/33.498/33.498/0.000 ms ","date":"March 28, 2024","hero":"/images/vpn/ipsec_cisco.png","permalink":"https://www.javiercd.es/en/posts/vpn/ipsec_cisco/ipsec_cisco/","summary":"\u003cp\u003eIn this post I\u0026rsquo;m going to mount an IPSEC VPN using swan routers.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/vpn/ipsec_cisco/img/Pastedimage20240128120659.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e[!NOTE]\nThis post details the configuration of R2 and R3 routers, however R1 is explained in the post of \u0026ldquo;VPN OpenVPN remote access.\u0026rdquo; If you want to see the configuration of the latter, look at the section preparing the stage.\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch2 id=\"-stage-configuration\"\u003e# Stage configuration\u003c/h2\u003e\n\u003cp\u003eAs I have changed stage, the 2 new routers have to be set up on the R2 and R3 network.\u003c/p\u003e","tags":["VPN","LINUX","CISCO"],"title":"VPN site to site with IPsec Cisco"},{"categories":null,"contents":"In this post I will mount an IPSEC VPN using Fortinet firewalls, for which I will visualize them on GNS3.\nStage preparation To create the VPN I will add a new Fortigate to the stage.\nSo let\u0026rsquo;s proceed to set it up, the first thing will be to know the IP that the DHCP has given you:\nFortiGate-VM64-KVM login: admin Password: You are forced to change your password. Please input a new password. New Password: Confirm Password: Welcome! FortiGate-VM64-KVM # get system interface physical port1 == [onboard] ==[port1] mode: dhcp ip: 192.168.122.22 255.255.255.0 ipv6: ::/0 status: up speed: 1000Mbps (Duplex: full) FEC: none FEC_cap: none This IP you\u0026rsquo;ve given me for DHCP will be configured as static.\nAs for the local network of the new FortiNet, it will have the network 192.168.30.0:\nFinally, in this the default route to the NAT cloud IP address will be set at 192.168.122.1 / 24:\nOnce this is done we will see that we have connectivity between both firewalls, from FGT \u0026ndash; \u0026gt; FTG2:\nAnd the reverse from FTG2 \u0026ndash; \u0026gt; FTG:\nVPN site to site We go first to the FortiGate FTG which contains the clients of Odin, Loki, Thor and Hela. And we\u0026rsquo;ll go to IPsec Wizard, I\u0026rsquo;ll give you a significant name with the name of the hosts:\nIn the next step we will indicate the IP of the FortiGate FTG2, the interface through which the traffic will come out and finally a shared \u0026ldquo;key\u0026rdquo; between the two ends, this latter part can be replaced by certificates:\nHere are the local networks at both ends where we want to have connectivity:\nWe will get a panel with the different objects that will be created and we will give you to create:\nWe will repeat the same process in the other Fortigate, create a tunnel site to site:\nWe\u0026rsquo;ll tell you the public IP at the other end and we\u0026rsquo;ll put the same shared key:\nNow we\u0026rsquo;ll tell you what our local network is and the remote network is:\nFinally he will tell us the objects that are to be created and we give him to create:\nNow if we access the IPsec Tunnels panels, we\u0026rsquo;ll see both tunnels rise in a few seconds:\nOperating check Once we reach this point we will see that the VPN is working. We can do a ping in both directions:\ndebian@cliente1:~$ ping 192.168.100.4 -c 1 PING 192.168.100.4 (192.168.100.4) 56(84) bytes of data. 64 bytes from 192.168.100.4: icmp_seq=1 ttl=62 time=1.22 ms --- 192.168.100.4 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 1.220/1.220/1.220/0.000 ms debian@thor:~$ ping 192.168.30.2 -c 1 PING 192.168.30.2 (192.168.30.2) 56(84) bytes of data. 64 bytes from 192.168.30.2: icmp_seq=1 ttl=62 time=1.52 ms --- 192.168.30.2 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 1.516/1.516/1.516/0.000 ms As we see we have connectivity between the 2 private networks through the VPN.\nIf we stop to see the objects that each tunnel has created for us, it has created a total of 4, which we will have to delete if we want to remove the tunnel:\nBy default the policy that has created us allows ALL traffic in both directions, these 2 policies have created it in each firewall and by modifying these or adding new ones we can limit the traffic that passes through the VPN according to our needs.\nIn addition, we will have created a route to direct traffic to the private network at the other end:\n","date":"March 28, 2024","hero":"/images/vpn/fortinet_site_to_site.png","permalink":"https://www.javiercd.es/en/posts/vpn/site_to_site_fortinet/site_to_site_fortinet/","summary":"\u003cp\u003eIn this post I will mount an IPSEC VPN using Fortinet firewalls, for which I will visualize them on GNS3.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/vpn/site_to_site_fortinet/img/Pastedimage20240330235321.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003ch3 id=\"stage-preparation\"\u003eStage preparation\u003c/h3\u003e\n\u003cp\u003eTo create the VPN I will add a new Fortigate to the stage.\u003c/p\u003e\n\u003cp\u003eSo let\u0026rsquo;s proceed to set it up, the first thing will be to know the IP that the DHCP has given you:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eFortiGate-VM64-KVM login: admin\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ePassword: \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eYou are forced to change your password. Please input a new password.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eNew Password: \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConfirm Password: \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eWelcome!\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eFortiGate-VM64-KVM \u003cspan style=\"color:#75715e\"\u003e# get system interface physical port1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eonboard\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#f92672\"\u003e==[\u003c/span\u003eport1\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\tmode: dhcp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\tip: 192.168.122.22 255.255.255.0\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\tipv6: ::/0\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\tstatus: up\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\tspeed: 1000Mbps \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eDuplex: full\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\tFEC: none\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\tFEC_cap: none\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis IP you\u0026rsquo;ve given me for DHCP will be configured as static.\u003c/p\u003e","tags":["VPN","LINUX","FORTINET"],"title":"VPN site to site with IPsec Fortinet"},{"categories":null,"contents":"Riding the stage To perform this exercise I have mounted the following scenario on GNS3:\nSwan router configuration Let\u0026rsquo;s give each interface the corresponding network configuration:\n#Interfaz que nos dará internet R1#configure terminal R1(config)#interface fastEthernet 0/0 R1(config-if)#ip add dhcp R1(config-if)#no shut R1(config-if)#exit #Interfaz red Servidor 1 R1(config)#interface fastEthernet 1/0 R1(config-if)#ip add 90.0.0.1 255.255.255.0 R1(config-if)#no shut R1(config-if)#exit #Interfaz red Servidor 2 R1(config)#interface fastEthernet 1/1 R1(config-if)#ip add 100.0.0.1 255.255.255.0 R1(config-if)#no shut R1(config-if)#exit #Ruta por defecto para internet R1(config)#ip route 0.0.0.0 0.0.0.0 192.168.122.1 #Guarda la configuración R1#write #Configuración de SNAT R1#conf term R1(config)#access-list 1 permit 90.0.0.0 0.0.0.255 R1(config)#access-list 1 permit 100.0.0.0 0.0.0.255 R1(config)# ip nat pool NAT-Pool 192.168.122.127 192.168.122.127 prefix-length 24 R1(config)#ip nat inside source list 1 pool NAT-Pool overload R1(config)#interface FastEthernet0/0 R1(config-if)#ip nat outside R1(config)#interface FastEthernet1/0 R1(config-if)#ip nat inside R1(config)#interface FastEthernet1/1 R1(config-if)#ip nat inside Server Configuration 1\nServer 1 network configuration:\ndebian@servidor1:~$ cat /etc/network/interfaces auto lo iface lo inet loopback auto ens3 iface ens3 inet static address 90.0.0.2 netmask 255.255.255.0 gateway 90.0.0.1 dns-nameservers 8.8.8.8 auto ens4 iface ens4 inet static address 192.168.0.1 netmask 255.255.255.0 We will also configure the SNAT:\n#Activa el bit de forwarding debian@servidor1:~$ sudo nano /etc/sysctl.conf net.ipv4.ip_forward=1 #Regla SNAT debian@servidor1:~$ sudo iptables -t nat -A POSTROUTING -o ens3 -s 192.168.0.0/24 -j MASQUERADE #Te recomiendo que lo hagas permanente , configura iptables-persistent debian@servidor1:~$ sudo apt install iptables-persistent Server Configuration 2\nServer 2 network configuration:\ndebian@servidor2:~$ cat /etc/network/interfaces auto lo iface lo inet loopback auto ens3 iface ens3 inet static address 100.0.0.2 netmask 255.255.255.0 gateway 100.0.0.1 dns-nameservers 8.8.8.8 auto ens4 iface ens4 inet static address 192.168.1.1 netmask 255.255.255.0 We will also configure the SNAT:\n#Activa el bit de forwarding debian@servidor2:~$ sudo nano /etc/sysctl.conf net.ipv4.ip_forward=1 #Regla SNAT debian@servidor2:~$ sudo iptables -t nat -A POSTROUTING -o ens3 -s 192.168.1.0/24 -j MASQUERADE #Te recomiendo que lo hagas permanente , configura iptables-persistent debian@servidor2:~$ sudo apt install iptables-persistent Roulting check We will check that we have routed our stage well, for that from the servers we will do a ping on the contrary and has the Internet.\nFrom server 1:\ndebian@servidor1:~$ ping 8.8.8.8 -c 1 PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data. 64 bytes from 8.8.8.8: icmp_seq=1 ttl=112 time=37.4 ms --- 8.8.8.8 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 37.374/37.374/37.374/0.000 ms debian@servidor1:~$ debian@servidor1:~$ ping 100.0.0.2 -c 1 PING 100.0.0.2 (100.0.0.2) 56(84) bytes of data. 64 bytes from 100.0.0.2: icmp_seq=1 ttl=63 time=18.6 ms --- 100.0.0.2 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 18.567/18.567/18.567/0.000 ms debian@servidor1:~$ From server 2:\ndebian@servidor2:~$ ping 90.0.0.2 -c 1 PING 90.0.0.2 (90.0.0.2) 56(84) bytes of data. 64 bytes from 90.0.0.2: icmp_seq=1 ttl=63 time=19.1 ms --- 90.0.0.2 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 19.099/19.099/19.099/0.000 ms debian@servidor2:~$ ping 8.8.8.8 -c 1 PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data. 64 bytes from 8.8.8.8: icmp_seq=1 ttl=112 time=160 ms --- 8.8.8.8 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 160.147/160.147/160.147/0.000 ms debian@servidor2:~$ We will also check from the customers as you have set up a snack.\nFrom customer 1:\ndebian@cliente1:~$ ping 100.0.0.2 -c 1 PING 100.0.0.2 (100.0.0.2) 56(84) bytes of data. 64 bytes from 100.0.0.2: icmp_seq=1 ttl=62 time=19.0 ms --- 100.0.0.2 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 18.968/18.968/18.968/0.000 ms debian@cliente1:~$ ping 8.8.8.8 -c 1 PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data. 64 bytes from 8.8.8.8: icmp_seq=1 ttl=111 time=61.6 ms --- 8.8.8.8 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 61.598/61.598/61.598/0.000 ms From customer 3:\ndebian@cliente3:~$ ping 90.0.0.2 -c 1 PING 90.0.0.2 (90.0.0.2) 56(84) bytes of data. 64 bytes from 90.0.0.2: icmp_seq=1 ttl=62 time=15.7 ms --- 90.0.0.2 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 15.656/15.656/15.656/0.000 ms debian@cliente3:~$ ping 8.8.8.8 -c 1 PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data. 64 bytes from 8.8.8.8: icmp_seq=1 ttl=111 time=45.8 ms --- 8.8.8.8 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 45.760/45.760/45.760/0.000 ms OpenVPN installation We will install the openvpn package on both servers\n#Servidor 1 debian@servidor1:~$ sudo apt install -y openvpn #Servidor 2 debian@servidor2:~$ sudo apt install -y openvpn Key and certificate generation We can generate the certificates manually, but there is a tool called Easy RSA that automates this process. In addition, Easy RSA facilitates the generation of Diffie-Hellman modules, which are essential for the operation of the OpenVPN server.\nWe don\u0026rsquo;t need to download it since it comes with the openvpn package.\nFor OpenVPN we need to create:\nA private key and a x509 certificate for the certifying authority it signs (CA) A private key and a signed x509 certificate for the server. A private key and a signed x509 certificate for each client. A Diffie-Hellman group for the server. On server 1, we will copy the variable example file to avoid the repeated request of information such as organization, country, province, etc., by EasyRSA.\ndebian@servidor1:/usr/share/easy-rsa$ sudo cp vars.example vars We will edit the same and change the following values:\ndebian@servidor1:/usr/share/easy-rsa$ sudo nano vars set_var EASYRSA_REQ_COUNTRY \u0026#34;ES\u0026#34; set_var EASYRSA_REQ_PROVINCE \u0026#34;Sevilla\u0026#34; set_var EASYRSA_REQ_CITY \u0026#34;Dos Hermanas\u0026#34; set_var EASYRSA_REQ_ORG \u0026#34;iesgn\u0026#34; set_var EASYRSA_REQ_EMAIL \u0026#34;contacto@javiercd.es\u0026#34; set_var EASYRSA_REQ_OU \u0026#34;Informatica\u0026#34; Once we have changed the default values to our own, we will start the public key infrastructure (PKI) using the EasyRSA script. When running this command, a new PKI directory is created with the structure needed to manage the keys and certificates.\ndebian@servidor1:/usr/share/easy-rsa$ sudo ./easyrsa init-pki * Notice: init-pki complete; you may now create a CA or requests. Your newly created PKI dir is: * /usr/share/easy-rsa/pki Generation of the Diffie-Hellman parameters The Diffie-Hellman exchange key is a cryptographic method that allows two parties to safely agree on a shared session key on an unsafe channel. So let\u0026rsquo;s generate it by using the following command:\ndebian@servidor1:/usr/share/easy-rsa$ sudo ./easyrsa gen-dh * Notice: Using Easy-RSA configuration from: /usr/share/easy-rsa/vars * WARNING: Move your vars file to your PKI folder, where it is safe! * Notice: Using SSL: openssl OpenSSL 3.0.11 19 Sep 2023 (Library: OpenSSL 3.0.11 19 Sep 2023) Generating DH parameters, 2048 bit long safe prime ......... * Notice: DH parameters of size 2048 created at /usr/share/easy-rsa/pki/dh.pem We will have been generated the key in / usr / share / easy-rsa / pki / dh.pem, as indicated by the command output.\nGeneration of CA certificate We will proceed to generate the certificate of our CA:\ndebian@servidor1:/usr/share/easy-rsa$ sudo ./easyrsa build-ca nopass * Notice: Using Easy-RSA configuration from: /usr/share/easy-rsa/vars * WARNING: Move your vars file to your PKI folder, where it is safe! * Notice: Using SSL: openssl OpenSSL 3.0.11 19 Sep 2023 (Library: OpenSSL 3.0.11 19 Sep 2023) Using configuration from /usr/share/easy-rsa/pki/52a64968/temp.25a8f31d You are about to be asked to enter information that will be incorporated into your certificate request. What you are about to enter is what is called a Distinguished Name or a DN. There are quite a few fields but you can leave some blank For some fields there will be a default value, If you enter \u0026#39;.\u0026#39;, the field will be left blank. ----- Common Name (eg: your user, host, or server name) [Easy-RSA CA]:ca.javiercd.es * Notice: CA creation complete and you may now import and sign cert requests. Your new CA certificate file for publishing is at: /usr/share/easy-rsa/pki/ca.crt We will have been generated in / usr / share / easy-rsa / pki / ca.crt\nServer certificate generation 1 With the following command we will generate the certificates for server 1. Several files will be generated:\nservor1.req: This file contains the certificate application generated for the server servor1.key: This file contains the private key debian@servidor1:/usr/share/easy-rsa$ sudo ./easyrsa gen-req servidor1 nopass * Notice: Using Easy-RSA configuration from: /usr/share/easy-rsa/vars * WARNING: Move your vars file to your PKI folder, where it is safe! * Notice: Using SSL: openssl OpenSSL 3.0.11 19 Sep 2023 (Library: OpenSSL 3.0.11 19 Sepou are about to be asked to enter information that will be incorporated into your certificate request. What you are about to enter is what is called a Distinguished Name or a DN. There are quite a few fields but you can leave some blank For some fields there will be a default value, If you enter \u0026#39;.\u0026#39;, the field will be left blank. ----- Common Name (eg: your user, host, or server name) [servidor1]: * Notice: Keypair and certificate request completed. Your files are: req: /usr/share/easy-rsa/pki/reqs/servidor1.req key: /usr/share/easy-rsa/pki/private/servidor1.key Now let\u0026rsquo;s sign the server\u0026rsquo;s certification1 with the CA\u0026rsquo;s private key.\ndebian@servidor1:/usr/share/easy-rsa$ sudo ./easyrsa sign-req server servidor1 * Notice: Using Easy-RSA configuration from: /usr/share/easy-rsa/vars * WARNING: Move your vars file to your PKI folder, where it is safe! * Notice: Using SSL: openssl OpenSSL 3.0.11 19 Sep 2023 (Library: OpenSSL 3.0.11 19 Sep 2023) You are about to sign the following certificate. Please check over the details shown below for accuracy. Note that this request has not been cryptographically verified. Please be sure it came from a trusted source or that you have verified the request checksum with the sender. Request subject, to be signed as a server certificate for 825 days: subject= commonName = servidor1 Type the word \u0026#39;yes\u0026#39; to continue, or any other input to abort. Confirm request details: yes Using configuration from /usr/share/easy-rsa/pki/e66a9d70/temp.40a6d9dd Check that the request matches the signature Signature ok The Subject\u0026#39;s Distinguished Name is as follows commonName :ASN.1 12:\u0026#39;servidor1\u0026#39; Certificate is to be certified until Apr 18 16:15:16 2026 GMT (825 days) Write out database with 1 new entries Database updated * Notice: Certificate created at: /usr/share/easy-rsa/pki/issued/servidor1.crt As you can see we will have the 3 files regarding our 1 server generated:\n#Certificado firmado debian@servidor1:/usr/share/easy-rsa$ sudo ls -la pki/issued | grep servidor1 -rw------- 1 root root 4637 Jan 14 16:15 servidor1.crt #Clave privada debian@servidor1:/usr/share/easy-rsa$ sudo ls -la pki/private | grep servidor1 -rw------- 1 root root 1704 Jan 14 16:09 servidor1.key #Solicitud de firma del certificado debian@servidor1:/usr/share/easy-rsa$ sudo ls -la pki/reqs | grep servidor1 -rw------- 1 root root 891 Jan 14 16:09 servidor1.req Server certificate generation 2 We will repeat the same process we have done for server 1, but now for our server 2.\nWe will generate the key and the certificate:\ndebian@servidor1:/usr/share/easy-rsa$ sudo ./easyrsa gen-req servidor2 nopass * Notice: Using Easy-RSA configuration from: /usr/share/easy-rsa/vars * WARNING: Move your vars file to your PKI folder, where it is safe! * Notice: Using SSL: openssl OpenSSL 3.0.11 19 Sep 2023 (Library: OpenSSL 3.0.11 19 Sep 2023) .+.+.................+...+...+.......+..+.+...........+.+..+.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*........+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*.+....+..+..........+....................+.......+.....+.......+...+..+................+..+.......+.........+...........+....+..+...+.+......+..+...+....+.....+.........+....+......+......+.........+..+...+............+...+.+...+..+....+............+...............+..+...+.............+............+.....+.......+.....+.+......+........+.....................+.+......+..+.+......+.....+.........+......+.........+.......+...+...............+.....+...............+.+....................+......+...+................+...+...+............+.....+...............+.......+......+........+......+....+......+........+.+.....+....+..+.+........+.+.....+.+.....+...........................+......+.+...+.....+......+....+..+....+......+........+.............+..+...+.........+....+..+...+....+...+...+...........+......+...................+.....+................+...+..+....+...+..+......+...+..........+..+.......+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ ..........+............+...+....+...+.....+...+......+.+.....+.......+..+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*.........+.+......+..+.+..+...+.........+............+..................+.......+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*.+...+...........+.+...+..+....+..............+......+...............+.+......+..............+....+......+..................+...+............+..+....+.....+.......+...+.........+..+......+...+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ ----- You are about to be asked to enter information that will be incorporated into your certificate request. What you are about to enter is what is called a Distinguished Name or a DN. There are quite a few fields but you can leave some blank For some fields there will be a default value, If you enter \u0026#39;.\u0026#39;, the field will be left blank. ----- Common Name (eg: your user, host, or server name) [servidor2]: * Notice: Keypair and certificate request completed. Your files are: req: /usr/share/easy-rsa/pki/reqs/servidor2.req key: /usr/share/easy-rsa/pki/private/servidor2.key See that now to this certificate when we sign it we\u0026rsquo;ll say it\u0026rsquo;s client type. Since server 2 \u0026ldquo;acted as a client\u0026rdquo;:\ndebian@servidor1:/usr/share/easy-rsa$ sudo ./easyrsa sign-req client servidor2 * Notice: Using Easy-RSA configuration from: /usr/share/easy-rsa/vars * WARNING: Move your vars file to your PKI folder, where it is safe! * Notice: Using SSL: openssl OpenSSL 3.0.11 19 Sep 2023 (Library: OpenSSL 3.0.11 19 Sep 2023) You are about to sign the following certificate. Please check over the details shown below for accuracy. Note that this request has not been cryptographically verified. Please be sure it came from a trusted source or that you have verified the request checksum with the sender. Request subject, to be signed as a client certificate for 825 days: subject= commonName = servidor2 Type the word \u0026#39;yes\u0026#39; to continue, or any other input to abort. Confirm request details: yes Using configuration from /usr/share/easy-rsa/pki/8e1b2785/temp.504078d9 Check that the request matches the signature Signature ok The Subject\u0026#39;s Distinguished Name is as follows commonName :ASN.1 12:\u0026#39;servidor2\u0026#39; Certificate is to be certified until Apr 18 16:57:49 2026 GMT (825 days) Write out database with 1 new entries Database updated * Notice: Certificate created at: /usr/share/easy-rsa/pki/issued/servidor2.crt Generation of the TLS key This step is optional, but it is recommended to generate a shared key (also known as additional parameter key or ta.key key) in the OpenVPN context.)\nIn the context of OpenVPN, this shared key (ta.key) is used to sign and verify all data packages transmitted through the VPN connection. Its main purpose is to provide an additional layer of security and authentication, helping to prevent attacks such as the replay.\ndebian@servidor1:/usr/share/easy-rsa$ sudo openvpn --genkey --secret ta.key Distribute the keys Now we have to get every key to its proper place.\nIn server 1 we will create the / etc / openvpn / keys directory and save the following files:\n#Creamos el directorio donde guardaremos las claves debian@servidor1:/usr/share/easy-rsa$ sudo mkdir /etc/openvpn/keys #Nos la copiamos al directorio creado debian@servidor1:~$ sudo cp /usr/share/easy-rsa/pki/dh.pem /etc/openvpn/keys debian@servidor1:~$ sudo cp /usr/share/easy-rsa/pki/ca.crt /etc/openvpn/keys debian@servidor1:~$ sudo cp /usr/share/easy-rsa/pki/private/servidor1.key /etc/openvpn/keys debian@servidor1:~$ sudo cp /usr/share/easy-rsa/pki/issued/servidor1.crt /etc/openvpn/keys debian@servidor1:~$ sudo cp /usr/share/easy-rsa/ta.key /etc/openvpn/keys #Comprobamos que tenemos todoos los ficheros necesarios debian@servidor1:~$ sudo ls -l /etc/openvpn/keys total 24 -rw------- 1 root root 1216 Jan 14 17:08 ca.crt -rw------- 1 root root 424 Jan 14 17:08 dh.pem -rw------- 1 root root 4637 Jan 14 17:08 servidor1.crt -rw------- 1 root root 1704 Jan 14 17:08 servidor1.key -rw------- 1 root root 636 Jan 14 17:08 ta.key Now we\u0026rsquo;ll do the same for the service2, but we\u0026rsquo;ll have to take the keys using SCP.\n#Creamos el directorio donde guardaremos las claves debian@servidor2:~$ sudo mkdir /etc/openvpn/keys #Desde servidor1 pasare a servidor2 las claves debian@servidor1:~$ sudo scp /usr/share/easy-rsa/pki/ca.crt debian@100.0.0.2:/home/debian debian@servidor1:~$ sudo scp /usr/share/easy-rsa/ta.key debian@100.0.0.2:/home/debian debian@servidor1:~$ sudo scp /usr/share/easy-rsa/pki/private/servidor2.key debian@100.0.0.2:/home/debian debian@servidor1:~$ sudo scp /usr/share/easy-rsa/pki/issued/servidor2.crt debian@100.0.0.2:/home/debian #Las movemos a /etc/openvpn/keys debian@servidor2:~$ sudo mv * /etc/openvpn/keys #Nos aseguramos de tener los 4 ficheros que hemos enviado : debian@servidor2:~$ sudo ls -l /etc/openvpn/keys total 20 -rw------- 1 debian debian 1216 Jan 14 17:12 ca.crt -rw------- 1 debian debian 4515 Jan 14 17:14 servidor2.crt -rw------- 1 debian debian 1704 Jan 14 17:13 servidor2.key -rw------- 1 debian debian 636 Jan 14 17:13 ta.key OpenVPN configuration Server configuration 1 [NOTE] This section is comparing it to the remote access VPN post.\nAs you see the only parameters that we have changed in the configuration is the virtual IP and the route parameter to generate the route to the private network at the other end:\ndebian@servidor1:~$ sudo nano /etc/openvpn/servidor1.conf #Utilizar un dispositivo TUN dinámico dev tun #IP virtual ifconfig 10.99.99.1 10.99.99.2 #Ruta para llegar a la red del otro extremo route 192.168.1.0 255.255.255.0 #Habilitar TLS y asumir el rol de servidor tls-server #Parámetros de Diffie-Hellman dh /etc/openvpn/keys/dh.pem #Certificado de la Autoridad Certificadora ca /etc/openvpn/keys/ca.crt #Certificado del servidor cert /etc/openvpn/keys/servidor1.crt #Clave privada del servidor key /etc/openvpn/keys/servidor1.key #Utilizar compresión LZO rápida comp-lzo #Ping al remoto cada 10 segundos y reiniciar después de 60 segundos keepalive 10 60 #Establecer la verbosidad de salida en un rango de uso normal verb 3 Restart OpenVPN service from server 1:\ndebian@servidor1:~$ sudo systemctl restart openvpn Check your tun0 interface:\ndebian@servidor1:~$ ip a show tun0 9: tun0: \u0026lt;POINTOPOINT,MULTICAST,NOARP,UP,LOWER_UP\u0026gt; mtu 1500 qdisc fq_codel state UNKNOWN group default qlen 500 link/none inet 10.99.99.1 peer 10.99.99.2/32 scope global tun0 valid_lft forever preferred_lft forever inet6 fe80::a6be:e8ba:17e5:35e3/64 scope link stable-privacy valid_lft forever preferred_lft forever And finally check that the route to reach the network at the other end is correct, that is, it goes through the tun0 interface:\ndebian@servidor1:~$ ip r default via 90.0.0.1 dev ens3 onlink 10.99.99.2 dev tun0 proto kernel scope link src 10.99.99.1 90.0.0.0/24 dev ens3 proto kernel scope link src 90.0.0.2 192.168.0.0/24 dev ens4 proto kernel scope link src 192.168.0.1 192.168.1.0/24 via 10.99.99.2 dev tun0 Server configuration 2 debian@servidor2:~$ sudo nano /etc/openvpn/servidor2.conf #Utilizar un dispositivo TUN dinámico dev tun #Conectar al servidor remote 90.0.0.2 #Establecer direcciones IP virtuales punto a punto ifconfig 10.99.99.2 10.99.99.1 #Ruta para llegar a la red remota (local del servidor 1) route 192.168.0.0 255.255.255.0 #Habilitar TLS y asumir el rol de cliente durante el handshake de TLS tls-client #Certificado de la Autoridad Certificadora ca /etc/openvpn/keys/ca.crt #Certificado del cliente cert /etc/openvpn/keys/servidor2.crt #Clave privada del cliente key /etc/openvpn/keys/servidor2.key #Utilizar compresión LZO rápida comp-lzo #Hacer ping al remoto cada 10 segundos y reiniciar después de 60 segundos si no hay señal de vida del \u0026gt; keepalive 10 60 #Establecer la verbosidad de salida en un rango de uso normal verb 3 #Registrar mensajes en el archivo openvpn.log log /var/log/openvpn.log Reboot OpenVPN service on server 2 to apply the new configuration:\ndebian@servidor2:~$ sudo systemctl restart openvpn Check your tun0 interface:\ndebian@servidor2:~$ ip a show tun0 10: tun0: \u0026lt;POINTOPOINT,MULTICAST,NOARP,UP,LOWER_UP\u0026gt; mtu 1500 qdisc fq_codel state UNKNOWN group default qlen 500 link/none inet 10.99.99.2 peer 10.99.99.1/32 scope global tun0 valid_lft forever preferred_lft forever inet6 fe80::ded7:8620:c295:146a/64 scope link stable-privacy valid_lft forever preferred_lft forever And finally check that the route to reach the network at the other end is correct, that is, it goes through the tun0 interface:\ndebian@servidor2:~$ ip r default via 100.0.0.1 dev ens3 onlink 10.99.99.1 dev tun0 proto kernel scope link src 10.99.99.2 100.0.0.0/24 dev ens3 proto kernel scope link src 100.0.0.2 192.168.0.0/24 via 10.99.99.1 dev tun0 192.168.1.0/24 dev ens4 proto kernel scope link src 192.168.1.1 Operating check Now, both private networks, both 192.168.0.0 / 24 and 192.168.1.0 / 24, will have connectivity thanks to VPN servers.\nPing from client 1 to client 2:\ndebian@cliente1:~$ ping 192.168.1.2 -c 1 PING 192.168.1.2 (192.168.1.2) 56(84) bytes of data. 64 bytes from 192.168.1.2: icmp_seq=1 ttl=62 time=15.6 ms --- 192.168.1.2 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 15.645/15.645/15.645/0.000 ms Ping from client 2 to client 1:\ndebian@cliente3:~$ ping 192.168.0.2 -c 1 PING 192.168.0.2 (192.168.0.2) 56(84) bytes of data. 64 bytes from 192.168.0.2: icmp_seq=1 ttl=62 time=17.3 ms --- 192.168.0.2 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 17.345/17.345/17.345/0.000 ms Ping from server 1 to server 2:\ndebian@servidor1:~$ ping 192.168.1.1 -c 1 PING 192.168.1.1 (192.168.1.1) 56(84) bytes of data. 64 bytes from 192.168.1.1: icmp_seq=1 ttl=64 time=18.0 ms --- 192.168.1.1 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 17.988/17.988/17.988/0.000 ms Ping from server 1 to server 2:\ndebian@servidor2:~$ ping 192.168.0.1 -c 1 PING 192.168.0.1 (192.168.0.1) 56(84) bytes of data. 64 bytes from 192.168.0.1: icmp_seq=1 ttl=64 time=12.6 ms --- 192.168.0.1 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 12.558/12.558/12.558/0.000 ms Of course we can also access any service on the other network or connect to SSH from one end of the tunnel to another:\ndebian@cliente3:~$ ssh 192.168.0.1 debian@192.168.0.1\u0026#39;s password: Linux servidor1 6.1.0-15-cloud-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.1.66-1 (2023-12-09) x86_64 The programs included with the Debian GNU/Linux system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. Last login: Tue Jan 16 18:51:53 2024 from 192.168.1.2 debian@servidor1:~$ ip -4 a 1: lo: \u0026lt;LOOPBACK,UP,LOWER_UP\u0026gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever 2: ens3: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000 altname enp0s3 inet 90.0.0.2/24 brd 90.0.0.255 scope global ens3 valid_lft forever preferred_lft forever 3: ens4: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000 altname enp0s4 inet 192.168.0.1/24 brd 192.168.0.255 scope global ens4 valid_lft forever preferred_lft forever 9: tun0: \u0026lt;POINTOPOINT,MULTICAST,NOARP,UP,LOWER_UP\u0026gt; mtu 1500 qdisc fq_codel state UNKNOWN group default qlen 500 inet 10.99.99.1 peer 10.99.99.2/32 scope global tun0 valid_lft forever preferred_lft forever Android client\n[TIP] In the network post you will find a guide to install a virtual android machine in KVM and GNS3\nThe network configuration of the network is done from the wifi:\nCheck that from the local network of it you have connectivity with the assigned ip:\ndebian@cliente3:~$ ping 192.168.1.4 PING 192.168.1.4 (192.168.1.4) 56(84) bytes of data. 64 bytes from 192.168.1.4: icmp_seq=1 ttl=64 time=0.534 ms ^C --- 192.168.1.4 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 0.534/0.534/0.534/0.000 ms Besides this account in applications with a terminal emulator that will help us check that it has connectivity:\n","date":"March 28, 2024","hero":"/images/vpn/sitetosite.png","permalink":"https://www.javiercd.es/en/posts/vpn/site_to_site_openvpn/site_to_site_openvpn/","summary":"\u003ch3 id=\"riding-the-stage\"\u003eRiding the stage\u003c/h3\u003e\n\u003cp\u003eTo perform this exercise I have mounted the following scenario on GNS3:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/vpn/site_to_site_wireguard/img/Pastedimage20240114150833.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003ch3 id=\"swan-router-configuration\"\u003eSwan router configuration\u003c/h3\u003e\n\u003cp\u003eLet\u0026rsquo;s give each interface the corresponding network configuration:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#Interfaz que nos dará internet\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1#configure terminal \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003econfig\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e#interface fastEthernet 0/0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003econfig-if\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e#ip add dhcp\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003econfig-if\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e#no shut\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003econfig-if\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e#exit\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#Interfaz red Servidor 1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003econfig\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e#interface fastEthernet 1/0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003econfig-if\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e#ip add 90.0.0.1 255.255.255.0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003econfig-if\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e#no shut\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003econfig-if\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e#exit\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#Interfaz red Servidor 2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003econfig\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e#interface fastEthernet 1/1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003econfig-if\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e#ip add 100.0.0.1 255.255.255.0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003econfig-if\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e#no shut\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003econfig-if\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e#exit\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#Ruta por defecto para internet\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003econfig\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e#ip route 0.0.0.0 0.0.0.0 192.168.122.1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#Guarda la configuración\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1#write\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#Configuración de SNAT\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1#conf term\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003econfig\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e#access-list 1 permit 90.0.0.0 0.0.0.255\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003econfig\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e#access-list 1 permit 100.0.0.0 0.0.0.255\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003econfig\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e# ip nat pool NAT-Pool 192.168.122.127 192.168.122.127 prefix-length 24\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003econfig\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e#ip nat inside source list 1 pool NAT-Pool overload\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003econfig\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e#interface FastEthernet0/0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003econfig-if\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e#ip nat outside\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003econfig\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e#interface FastEthernet1/0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003econfig-if\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e#ip nat inside\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003econfig\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e#interface FastEthernet1/1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eR1\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003econfig-if\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e#ip nat inside\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eServer Configuration 1\u003c/p\u003e","tags":["VPN","CISCO","LINUX","DEBIAN","OPENVPN"],"title":"VPN site to site with OpenVPN and x509 certificates"},{"categories":null,"contents":"\nFirst I will configure the server machine as a VPN remote access and server server as a VPN client. I will then set up a Windows and Android client.\nThe first thing we will do is to install both the Wireguard package in both machines:\nroot@servidor1:~# sudo apt update \u0026amp;\u0026amp; sudo apt install wireguard debian@servidor2:~$ sudo apt update \u0026amp;\u0026amp; sudo apt install wireguard Let\u0026rsquo;s generate the pairs of keys that will be used to encrypt the connection. We will need a key for the server and a couple of additional keys for each client.\nWe\u0026rsquo;ll start with the server key pair 1:\ndebian@servidor1:~$ wg genkey | sudo tee /etc/wireguard/server_private.key | wg pubkey | sudo tee /etc/wireguard/server_public.key 2/RjGUbiQuaFR7atYaQ8lcczz2wXxO9aIwfzZEMPXCQ= #Puedes visualizar la clave privada posteriormente : debian@servidor1:~$ sudo cat /etc/wireguard/server_private.key 2Gg3EnKD+rdyMPEjMikZTwq2w0m78KrEcUsAJ/8icFA= #Puedes visualizar la clave publica posteriormente : debian@servidor1:~$ sudo cat /etc/wireguard/server_public.key 2/RjGUbiQuaFR7atYaQ8lcczz2wXxO9aIwfzZEMPXCQ= We move to the service2 and generate yours:\n#Generamos el par de claves para el cliente de acceso remoto servidor2 debian@servidor2:~$ wg genkey | sudo tee /etc/wireguard/client_private.key | wg pubkey | sudo tee /etc/wireguard/client_public.key gS2ED2zfzMHBttMpFhH3MvRpr8D4ALEDTumNcib8A2g= #Puedes visualizar la clave privada posteriormente : debian@servidor2:~$ sudo cat /etc/wireguard/client_private.key 8IdsSwunfU5zJQzS5nZg4D//cFEbRa+27HGOQE1V90k= #Puedes visualizar la clave publica posteriormente : debian@servidor2:~$ sudo cat /etc/wireguard/client_public.key gS2ED2zfzMHBttMpFhH3MvRpr8D4ALEDTumNcib8A2g= Once the keys are generated, we will proceed to configure the Wireguard remote access server, in my case I will call the wg0.conf configuration file. I\u0026rsquo;m gonna add you in every parameter of the configuration a comment so you know what you have to put in every field:\ndebian@servidor1:~$ sudo cat /etc/wireguard/wg0.conf [Interface] #IP que tendrá el túnel VPN , en concreto la interfaz wg0 que es como has llamado el fichero de conf Address = 10.99.99.1 #Clave privada del servidor PrivateKey = 2Gg3EnKD+rdyMPEjMikZTwq2w0m78KrEcUsAJ/8icFA= #Puerto de escucha , 51820 es el puerto por defecto de Wireguard ListenPort = 51820 #Si no tienes activado el bit de forwarding por defecto puedes hacerlo asi : PreUp = sysctl -w net.ipv4.ip_forward=1 #Este apartado hace referencia a la configuración de los clientes : [Peer] #Clave pública del cliente Publickey = gS2ED2zfzMHBttMpFhH3MvRpr8D4ALEDTumNcib8A2g= #IP del túnel VPN del cliente AllowedIPs = 10.99.99.2/32 #Tiempo de espera que tendrá activo el túnel si no hay trafico PersistentKeepAlive = 25 We will now set up a debian client, I have given the same name to the configuration file so the interface will also be called wg0:\ndebian@servidor2:~$ sudo cat /etc/wireguard/wg0.conf [Interface] Address = 10.99.99.2/24 #Clave privada del cliente PrivateKey = 8IdsSwunfU5zJQzS5nZg4D//cFEbRa+27HGOQE1V90k= #Puerto de escucha del servidor ListenPort = 51820 [Peer] #Clave pública del servidor PublicKey = 2/RjGUbiQuaFR7atYaQ8lcczz2wXxO9aIwfzZEMPXCQ= AllowedIPs = 0.0.0.0/0 #Punto de acceso del servidor Endpoint = 90.0.0.2:51820 #Tiempo de espera de la conexión PersistentKeepalive = 25 Once we have configured both files we will lift the tunnel, for this we have several ways to do it, personally the most comfortable I see is using the wg-quick command.\nWe raise the tunnel on the server:\ndebian@servidor1:~$ sudo wg-quick up wg0 [#] sysctl -w net.ipv4.ip_forward=1 net.ipv4.ip_forward = 1 [#] ip link add wg0 type wireguard [#] wg setconf wg0 /dev/fd/63 [#] ip -4 address add 10.99.99.1 dev wg0 [#] ip link set mtu 1420 up dev wg0 [#] ip -4 route add 10.99.99.2/32 dev wg0 We raise the other end, in this case our client is servant2:\ndebian@servidor2:~$ sudo wg-quick up wg0 [#] ip link add wg0 type wireguard [#] wg setconf wg0 /dev/fd/63 [#] ip -4 address add 10.99.99.2/24 dev wg0 [#] ip link set mtu 1420 up dev wg0 [#] wg set wg0 fwmark 51820 [#] ip -4 route add 0.0.0.0/0 dev wg0 table 51820 [#] ip -4 rule add not fwmark 51820 table 51820 [#] ip -4 rule add table main suppress_prefixlength 0 [#] sysctl -q net.ipv4.conf.all.src_valid_mark=1 [#] iptables-restore -n Once this is done we will check that at both ends we have created a new interface, which is called the same as our configuration file without the .conf extension.\nWe check that it was created in servant1:\ndebian@servidor1:~$ ip -4 a 1: lo: \u0026lt;LOOPBACK,UP,LOWER_UP\u0026gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever 2: ens3: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000 altname enp0s3 inet 90.0.0.2/24 brd 90.0.0.255 scope global ens3 valid_lft forever preferred_lft forever 3: ens4: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000 altname enp0s4 inet 192.168.0.1/24 brd 192.168.0.255 scope global ens4 valid_lft forever preferred_lft forever 6: wg0: \u0026lt;POINTOPOINT,NOARP,UP,LOWER_UP\u0026gt; mtu 1420 qdisc noqueue state UNKNOWN group default qlen 1000 inet 10.99.99.1/32 scope global wg0 valid_lft forever preferred_lft forever We check that it was created in servers2:\ndebian@servidor2:~$ ip -4 a 1: lo: \u0026lt;LOOPBACK,UP,LOWER_UP\u0026gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever 2: ens3: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000 altname enp0s3 inet 100.0.0.2/24 brd 100.0.0.255 scope global ens3 valid_lft forever preferred_lft forever 3: ens4: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000 altname enp0s4 inet 192.168.1.1/24 brd 192.168.1.255 scope global ens4 valid_lft forever preferred_lft forever 6: wg0: \u0026lt;POINTOPOINT,NOARP,UP,LOWER_UP\u0026gt; mtu 1420 qdisc noqueue state UNKNOWN group default qlen 1000 inet 10.99.99.2/24 scope global wg0 valid_lft forever preferred_lft forever We will also check the routes that have been created on the server and on the client:\ndebian@servidor1:~$ ip r default via 90.0.0.1 dev ens3 onlink 10.99.99.2 dev wg0 scope link 10.99.99.4 dev wg0 scope link 90.0.0.0/24 dev ens3 proto kernel scope link src 90.0.0.2 192.168.0.0/24 dev ens4 proto kernel scope link src 192.168.0.1 debian@servidor2:~$ ip r default via 100.0.0.1 dev ens3 onlink 10.99.99.0/24 dev wg0 proto kernel scope link src 10.99.99.2 100.0.0.0/24 dev ens3 proto kernel scope link src 100.0.0.2 192.168.1.0/24 dev ens4 proto kernel scope link src 192.168.1.1 Let\u0026rsquo;s check that from our client (server 2) we have access to the different machines of our network:\n##Ping con el túnel del extremo servidor1 debian@servidor2:~$ ping 10.99.99.1 -c 1 PING 10.99.99.1 (10.99.99.1) 56(84) bytes of data. 64 bytes from 10.99.99.1: icmp_seq=1 ttl=64 time=14.9 ms --- 10.99.99.1 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 14.862/14.862/14.862/0.000 ms ##Pings con cliente1 : debian@servidor2:~$ ping 192.168.0.2 -c 1 PING 192.168.0.2 (192.168.0.2) 56(84) bytes of data. 64 bytes from 192.168.0.2: icmp_seq=1 ttl=63 time=17.5 ms --- 192.168.0.2 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 17.503/17.503/17.503/0.000 ms #Ping con cliente2 debian@servidor2:~$ ping 192.168.0.3 -c 1 PING 192.168.0.3 (192.168.0.3) 56(84) bytes of data. 64 bytes from 192.168.0.3: icmp_seq=1 ttl=63 time=16.5 ms --- 192.168.0.3 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 16.522/16.522/16.522/0.000 ms ##Ping con la ip privada del servidor1 debian@servidor2:~$ ping 192.168.0.1 -c 1 PING 192.168.0.1 (192.168.0.1) 56(84) bytes of data. 64 bytes from 192.168.0.1: icmp_seq=1 ttl=64 time=20.3 ms --- 192.168.0.1 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 20.272/20.272/20.272/0.000 ms Although my stage is set, the private IP addresses are not erased we will check that the traffic goes through the tunnel, making use of traceroute:\ndebian@servidor2:~$ traceroute 192.168.0.2 traceroute to 192.168.0.2 (192.168.0.2), 30 hops max, 60 byte packets 1 10.99.99.1 (10.99.99.1) 18.692 ms 28.987 ms 28.951 ms 2 192.168.0.2 (192.168.0.2) 28.912 ms 28.877 ms 28.859 ms android client configuration The virtual android machine is quite uncomfortable to control, so I\u0026rsquo;m going to generate the keys and your configuration file on the server. Then we\u0026rsquo;ll get him out of this with Apache.\nWe generate the keys to android:\ndebian@servidor1:~$ wg genkey | tee androidprivate | wg pubkey \u0026gt; androidpublic debian@servidor1:~$ cat androidprivate CBY5o2iko7xXQrNAFcFDIKohOngawB1uvws7aDDgl0g= debian@servidor1:~$ cat androidpublic cBGl5QWOsbZyI2GN1MXDxUsfeMmI5sKnp3VkxW9lO3g= The configuration file would be as follows:\ndebian@servidor1:~$ sudo cat android.conf [Interface] Address = 10.99.99.4 PrivateKey = CBY5o2iko7xXQrNAFcFDIKohOngawB1uvws7aDDgl0g= ListenPort = 51820 [Peer] Publickey = 2/RjGUbiQuaFR7atYaQ8lcczz2wXxO9aIwfzZEMPXCQ= AllowedIPs = 0.0.0.0/0 Endpoint = 90.0.0.2:51820 I have installed apache and will copy this file to the document root to get it to the android machine. I use this medium as it is a fictional scenario.\ndebian@servidor1:~$ sudo cp android.conf /var/www/html/ From a terminal, as the browser does not work too well we download the file: Now let\u0026rsquo;s add this new client to the server configuration file:\ndebian@servidor1:~$ sudo cat /etc/wireguard/wg0.conf #Al final del todo :) [Peer] Publickey = cBGl5QWOsbZyI2GN1MXDxUsfeMmI5sKnp3VkxW9lO3g= AllowedIPs = 10.99.99.4/32 PersistentKeepAlive = 25 Don\u0026rsquo;t forget to restart the tunnel:\ndebian@servidor1:~$ sudo wg-quick down wg0 debian@servidor1:~$ sudo wg-quick up wg0 Now open the wireguard application and give it import from file and activate the connection. Activate the tunnel and make sure the handshake occurs:\nIf we open a terminal we can pings the customers:\nWindows client configuration\nWe\u0026rsquo;re going to repeat the process but now with our Windows client.\nIn order to copy and paste, I will make the key generation of this client in the service machine.\nWe\u0026rsquo;ll start by generating the key pair.\ndebian@servidor1:~$ wg genkey | tee winprivate | wg pubkey \u0026gt; winpublic debian@servidor1:~$ cat winprivate QKGQEdrB9FBYRZsLNgc3qr9m8/lx+uc9n5vvj67I9m8= debian@servidor1:~$ cat winpublic E8VdupsWJ7vCTO7SF3oXUciUrsRgJ3p6T+F5UbbLngo= We create the configuration file for this client:\ndebian@servidor1:~$ cat win.conf [Interface] Address = 10.99.99.5 PrivateKey = QKGQEdrB9FBYRZsLNgc3qr9m8/lx+uc9n5vvj67I9m8= ListenPort = 51820 [Peer] Publickey = 2/RjGUbiQuaFR7atYaQ8lcczz2wXxO9aIwfzZEMPXCQ= AllowedIPs = 0.0.0.0/0 Endpoint = 90.0.0.2:51820 I\u0026rsquo;ll move it to the document root so I can download it on my Windows, don\u0026rsquo;t do this in a real environment.\ndebian@servidor1:~$ sudo cp win.conf /var/www/html/ Remember to set up this new customer in the service machine:\ndebian@servidor1:~$ sudo nano /etc/wireguard/wg0.conf [Peer] Publickey = E8VdupsWJ7vCTO7SF3oXUciUrsRgJ3p6T+F5UbbLngo= AllowedIPs = 10.99.99.5/32 PersistentKeepAlive = 25 For the changes to be applied, restart the tunnel:\ndebian@servidor1:~$ sudo wg-quick down wg0 debian@servidor1:~$ sudo wg-quick up wg0 Once we have all set up, access the Windows machine and download the configuration file:\nOpen the wireguard application and select to import from file:\nOnce the tunnel is activated and the handshake has been checked:\nIf we return to our Windows, we will have created a new interface:\nAnd we\u0026rsquo;ll have connectivity to the network machines 192.168.0.0 / 24:\nBy way of curiosity we can see on the server that customers are connected:\ndebian@servidor1:~$ sudo wg show interface: wg0 public key: 2/RjGUbiQuaFR7atYaQ8lcczz2wXxO9aIwfzZEMPXCQ= private key: (hidden) listening port: 51820 peer: cBGl5QWOsbZyI2GN1MXDxUsfeMmI5sKnp3VkxW9lO3g= endpoint: 100.0.0.2:51820 allowed ips: 10.99.99.4/32 latest handshake: 1 minute, 14 seconds ago transfer: 6.43 KiB received, 788 B sent persistent keepalive: every 25 seconds peer: E8VdupsWJ7vCTO7SF3oXUciUrsRgJ3p6T+F5UbbLngo= endpoint: 100.0.0.2:49981 allowed ips: 10.99.99.5/32 latest handshake: 1 minute, 32 seconds ago transfer: 46.23 KiB received, 1.64 KiB sent persistent keepalive: every 25 seconds peer: gS2ED2zfzMHBttMpFhH3MvRpr8D4ALEDTumNcib8A2g= allowed ips: 10.99.99.2/32 persistent keepalive: every 25 seconds ","date":"March 28, 2024","hero":"/images/vpn/wireguard_acceso_remoto.png","permalink":"https://www.javiercd.es/en/posts/vpn/acceso_remoto_wireguard/acceso_remoto_wireguard/","summary":"\u003cp\u003e\u003cimg src=\"/vpn/acceso_remoto_wireguard/img/Pastedimage20240114150833.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eFirst I will configure the server machine as a VPN remote access and server server as a VPN client. I will then set up a Windows and Android client.\u003c/p\u003e\n\u003cp\u003eThe first thing we will do is to install both the Wireguard package in both machines:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eroot@servidor1:~# sudo apt update \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e sudo apt install wireguard\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edebian@servidor2:~$ sudo apt update \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e sudo apt install wireguard\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eLet\u0026rsquo;s generate the pairs of keys that will be used to encrypt the connection. We will need a key for the server and a couple of additional keys for each client.\u003c/p\u003e","tags":["VPN","CISCO","LINUX","DEBIAN","WIREGUARD"],"title":"VPN Wireguard remote access"},{"categories":null,"contents":"The objective of this practice is the gradual development of a Pipeline that will perform tasks on the repository of an application.\nThe application we\u0026rsquo;re going to work with will be your fork of the Django Polls application. As we have seen, this application that implements the Django tutorial has a test module.\nWe will build the Pipeline in several phases:\nExercise 1: Construction of a Docker image We start from the pipeline that we have developed in the Workshop 3: Continuous integration of Django application (Test), where we have automated the application test.\nModify the pipeline so that after doing the application test, it generates a Docker image. You have to keep in mind that the steps to generate the image must be performed on the machine where Jenkins is installed. You will have to add the following actions:\nBuild the image with the Dockerfile you have in the repository. Push the image to your Docker Hub account. Delete the created image. Therefore, you have to study the section Execution of a pipeline in multiple runners to run the pipeline in two runners:\nIn the Docker container from the image python:3, the steps from Workshop 3. In Jenkins\u0026rsquo; machine, the steps from this exercise. Other considerations:\nWhen the pipeline finishes running, you will receive a notification email. The pipeline will be saved in a Jenkinsfile file in your repository, and the pipeline configuration will refer to it. Delivery A screenshot where you see the output of a build that has been executed correctly.\nA screenshot of your Docker Hub account where you can see the latest pushed image.\nIntroduce a bug in the Dockerfile and show the output of the build where the error occurs.\nDeliver the repository URL to view the Jenkinsfile:\nhttps://github.com/javierasping/django_tutorial_docker.git Pants with the mail you received from the execution of the pipeline. Exercise 2: Deployment of the application Expand the previous pipeline to have a final stage where you can display the image that has been uploaded to Docker Hub in your production environment (VPS). Some leads:\nFind information on how to do the deployment to a remote server (ssh, looking for some plugin with that functionality,\u0026hellip;). If you are going to make ssh connections, you will have to save a credential on your Jenkins with the username and password. For deployment, you must use the docker-compose.yaml file you have generated in other practices. The container must be deleted with the previous version, the new image must be downloaded, and a new container created. Other considerations:\nChange the pipeline trigger. Configure it with a GitHub webhook so that every time a push is produced, the pipeline is run. For the webhook to access your Jenkins, you can use ngrok. Delivery The content of the Jenkinsfile file. The credentials you kept in Jenkins. Show the teacher how the complete CI/CD is done. Normal execution of the pipeline:\nThe nginx configuration and the containers run:\njaviercruces@atlas:~$ sudo cat /etc/nginx/sites-available/django_docker server { listen 80; server_name djangodocker.javiercd.es; return 301 https://$host$request_uri; } server { listen 443 ssl; server_name djangodocker.javiercd.es; ssl_certificate /etc/letsencrypt/live/javiercd.es/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/javiercd.es/privkey.pem; location / { proxy_pass http://localhost:8082; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } } javiercruces@atlas:~$ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 4d7947fc359f javierasping/django_tutorial_ic \u0026#34;/bin/sh -c \u0026#39;python3…\u0026#34; 33 minutes ago Up 33 minutes 0.0.0.0:8082-\u0026gt;3000/tcp, :::8082-\u0026gt;3000/tcp django_tutorial_web bdf947a4bccc mariadb \u0026#34;docker-entrypoint.s…\u0026#34; 33 minutes ago Up 33 minutes 3306/tcp mariadb-django The application running in the VPS:\nThe Ngrok and Webhole settings\ncurl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc \\ | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc \u0026gt;/dev/null \u0026amp;\u0026amp; echo \u0026#34;deb https://ngrok-agent.s3.amazonaws.com buster main\u0026#34; \\ | sudo tee /etc/apt/sources.list.d/ngrok.list \u0026amp;\u0026amp; sudo apt update \u0026amp;\u0026amp; sudo apt install ngrok javiercruces@atlas:~$ ngrok config add-authtoken 2d2CfE debian@jenkins:~$ ngrok http http://localhost:8082 If we cause the failure:\n","date":"March 14, 2024","hero":"/images/ci_cd/jenkins/practica.png","permalink":"https://www.javiercd.es/en/posts/ci_cd/practica_jenkins/practica_jenkins/","summary":"\u003cp\u003eThe objective of this practice is the gradual development of a Pipeline that will perform tasks on the repository of an application.\u003c/p\u003e\n\u003cp\u003eThe application we\u0026rsquo;re going to work with will be your fork of the Django Polls application. As we have seen, this application that implements the Django tutorial has a test module.\u003c/p\u003e\n\u003cp\u003eWe will build the Pipeline in several phases:\u003c/p\u003e\n\u003ch2 id=\"exercise-1-construction-of-a-docker-image\"\u003e\u003ca href=\"https://fp.josedomingo.org/iaw/5_ic/practica.html#exercise-1-construccion-de-una-imagen-docker\" target=\"_blank\" rel=\"noopener\"\u003eExercise 1: Construction of a Docker image\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eWe start from the pipeline that we have developed in the \u003ca href=\"https://fp.josedomingo.org/iaw/5_ic/taller3.html\" target=\"_blank\" rel=\"noopener\"\u003eWorkshop 3: Continuous integration of Django application (Test)\u003c/a\u003e, where we have automated the application test.\u003c/p\u003e","tags":["Jenkins","CI/CD"],"title":"Practice CI/CD with Jenkins"},{"categories":null,"contents":"Workshop 1: Ortho-rector of markdown documents (test) What do you have to deliver? The URL of your GitHub repository. https://github.com/javierasping/taller1_jenkins_ic-diccionario The content of your file \u0026lsquo;Jenkinfle\u0026rsquo;. pipeline { agent { docker { image \u0026#39;debian\u0026#39; args \u0026#39;-u root:root\u0026#39; } } stages { stage(\u0026#39;Clone\u0026#39;) { steps { git branch:\u0026#39;master\u0026#39;, url:\u0026#39;https://github.com/javierasping/taller1_jenkins_ic-diccionario.git\u0026#39; } } stage(\u0026#39;Install\u0026#39;) { steps { sh \u0026#39;apt-get update \u0026amp;\u0026amp; apt-get install -y aspell-es \u0026#39; } } stage(\u0026#39;Test\u0026#39;) { steps { sh \u0026#39;\u0026#39;\u0026#39; export LC_ALL=C.UTF-8 OUTPUT=`cat doc/*.md | aspell list -d es -p ./.aspell.es.pws` if [ -n \u0026#34;$OUTPUT\u0026#34; ]; then echo $OUTPUT exit 1 fi \u0026#39;\u0026#39;\u0026#39; } } } post { always { mail to: \u0026#39;javierasping@gmail.com\u0026#39;, subject: \u0026#34;Status of pipeline: ${currentBuild.fullDisplayName}\u0026#34;, body: \u0026#34;${env.BUILD_URL} has result ${currentBuild.result}\u0026#34; } } } A screenshot where you see the pipeline trigger configuration. A capture of an email received without any error, and another with some error in the execution of the pipeline. ","date":"March 14, 2024","hero":"/images/ci_cd/jenkins/taller1.png","permalink":"https://www.javiercd.es/en/posts/ci_cd/taller1_jenkins/taller1/","summary":"\u003ch2 id=\"workshop-1-ortho-rector-of-markdown-documents-test\"\u003eWorkshop 1: Ortho-rector of markdown documents (test)\u003c/h2\u003e\n\u003ch3 id=\"what-do-you-have-to-deliver\"\u003e\u003ca href=\"https://fp.josedomingo.org/iaw/5_ic/taller1.html#qu%C3%A9-tienes-que-entregar\" target=\"_blank\" rel=\"noopener\"\u003eWhat do you have to deliver?\u003c/a\u003e\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eThe URL of your GitHub repository.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehttps://github.com/javierasping/taller1_jenkins_ic-diccionario\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"2\"\u003e\n\u003cli\u003eThe content of your file \u0026lsquo;Jenkinfle\u0026rsquo;.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epipeline \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    agent \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        docker \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            image \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;debian\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            args \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;-u root:root\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    stages \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        stage\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;Clone\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            steps \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                git branch:\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;master\u0026#39;\u003c/span\u003e, url:\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;https://github.com/javierasping/taller1_jenkins_ic-diccionario.git\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        stage\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;Install\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            steps \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                sh \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;apt-get update \u0026amp;\u0026amp; apt-get install -y aspell-es \u0026#39;\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        stage\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;Test\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            steps \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                sh \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026#39;\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e                export LC_ALL=C.UTF-8\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e                OUTPUT=`cat doc/*.md | aspell list -d es -p ./.aspell.es.pws`\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e                if [ -n \u0026#34;$OUTPUT\u0026#34; ]; then\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e                    echo $OUTPUT\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e                    exit 1\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e                fi\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e                \u0026#39;\u0026#39;\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    post \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        always \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            mail to: \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;javierasping@gmail.com\u0026#39;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            subject: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Status of pipeline: \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003ecurrentBuild.fullDisplayName\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            body: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003eenv.BUILD_URL\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e has result \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003ecurrentBuild.result\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"3\"\u003e\n\u003cli\u003eA screenshot where you see the pipeline trigger configuration.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg src=\"/ci_cd/taller1_jenkins/img/Pasted_image_20240229084423.png\" alt=\"\"\u003e\u003c/p\u003e","tags":["Jenkis","CI/CD"],"title":"Workshop 1: Markdown (test)"},{"categories":null,"contents":"Workshop 1: Storage and Networks in Docker Storage Let\u0026rsquo;s work with Docker volumes:\nCreate a Docker volume called \u0026ldquo;miweb\u0026rdquo;:\ndocker volume create miweb Create a container from the image php:7.4-apache, mounting the Docker volume in /var/www/html (the DocumentRoot of the server):\ndocker run -d --name my-apache-app -v miweb:/var/www/html -p 8080:80 php:7.4-apache Use the docker cp command to copy an index.html file (with your name) into /var/www/html:\necho \u0026#34;\u0026lt;h1\u0026gt;Javier Cruces\u0026lt;/h1\u0026gt;\u0026#34; \u0026gt; index.html docker cp index.html my-apache-app:/var/www/html/ Access the container from the browser to check the index.html file:\ncurl http://localhost:8080 Output:\n\u0026lt;h1\u0026gt;Javier Cruces\u0026lt;/h1\u0026gt; Delete the container:\ndocker rm -f my-apache-app Create a new container and mount the same volume:\ndocker run -d --name Taller1 -v miweb:/var/www/html -p 8080:80 php:7.4-apache Access the container again to verify the file is still there:\ncurl http://localhost:8080 Output:\n\u0026lt;h1\u0026gt;Javier Cruces\u0026lt;/h1\u0026gt; Bind Mount Create a directory on your host and copy index.html into it:\nmkdir taller1 cp index.html taller1/ Create a container from php:7.4-apache, mounting the directory via bind mount:\ndocker run -d --name Taller1 -v $(pwd)/taller1:/var/www/html -p 8080:80 php:7.4-apache Access the container from the browser to verify the file:\ncurl http://localhost:8080 Output:\n\u0026lt;h1\u0026gt;Javier Cruces\u0026lt;/h1\u0026gt; Modify the index.html file on your host and check if the content updates in the container:\necho \u0026#34;\u0026lt;h1\u0026gt;Javier Cruces Doval\u0026lt;/h1\u0026gt;\u0026#34; \u0026gt; taller1/index.html curl http://localhost:8080 Output:\n\u0026lt;h1\u0026gt;Javier Cruces Doval\u0026lt;/h1\u0026gt; Delete the container:\ndocker rm -f Taller1 Create a new container and mount the same directory:\ndocker run -d --name Taller1 -v $(pwd)/taller1:/var/www/html -p 8080:80 php:7.4-apache Verify the content again:\ncurl http://localhost:8080 Output:\n\u0026lt;h1\u0026gt;Javier Cruces Doval\u0026lt;/h1\u0026gt; Networks Nextcloud + MariaDB Deployment We are going to deploy the Nextcloud application with a database (NOTE: Use the image mariadb:10.5 to avoid issues). You can use the WordPress deployment guide as reference.\nCreate a bridge-type network:\ndocker network create taller1 Create the database container connected to the network. Configure it to create a database and a user, and ensure data persistence using volumes:\ndocker run -d --name wp_db \\ --network taller1 \\ -v db_vol:/var/lib/mysql \\ -e MYSQL_ROOT_PASSWORD=wordpress \\ -e MYSQL_DATABASE=wordpress \\ -e MYSQL_USER=wordpress \\ -e MYSQL_PASSWORD=wordpress \\ mariadb:10.5 Create a Nextcloud container connected to the same network, using appropriate environment variables for database connection and persistence:\ndocker run -d --name nextcloud \\ --network taller1 \\ -e MYSQL_DATABASE=wordpress \\ -e MYSQL_USER=wordpress \\ -e MYSQL_PASSWORD=wordpress \\ -e MYSQL_HOST=wp_db \\ -p 8080:80 \\ nextcloud:latest Access the application using a web browser at http://localhost:8080.\n","date":"March 14, 2024","hero":"/images/docker/taller1.png","permalink":"https://www.javiercd.es/en/posts/docker/taller1/taller1_docker/","summary":"\u003ch2 id=\"workshop-1-storage-and-networks-in-docker\"\u003eWorkshop 1: Storage and Networks in Docker\u003c/h2\u003e\n\u003ch3 id=\"storage\"\u003eStorage\u003c/h3\u003e\n\u003cp\u003eLet\u0026rsquo;s work with Docker volumes:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eCreate a Docker volume called \u0026ldquo;miweb\u0026rdquo;:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edocker volume create miweb\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eCreate a container from the image \u003ccode\u003ephp:7.4-apache\u003c/code\u003e, mounting the Docker volume in \u003ccode\u003e/var/www/html\u003c/code\u003e (the \u003cem\u003eDocumentRoot\u003c/em\u003e of the server):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edocker run -d --name my-apache-app -v miweb:/var/www/html -p 8080:80 php:7.4-apache\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUse the \u003ccode\u003edocker cp\u003c/code\u003e command to copy an \u003ccode\u003eindex.html\u003c/code\u003e file (with your name) into \u003ccode\u003e/var/www/html\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eecho \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026lt;h1\u0026gt;Javier Cruces\u0026lt;/h1\u0026gt;\u0026#34;\u003c/span\u003e \u0026gt; index.html\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edocker cp index.html my-apache-app:/var/www/html/\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAccess the container from the browser to check the \u003ccode\u003eindex.html\u003c/code\u003e file:\u003c/p\u003e","tags":["Docker","Kubernetes","Contenedores"],"title":"Workshop 1: Storage and Networks in Docker"},{"categories":null,"contents":"Workshop 2: Multicontainer Scenarios in Docker Nextcloud deployment We will deploy the nextcloud application with a database (you can choose mariadb or PostgreSQL) using the docker-compose application. You can take as model the file \u0026lsquo;docker-compose.yml\u0026rsquo; that we have studied to display WordPress.\nInstall docker- compose on your computer. Within a directory creates a \u0026lsquo;docker-composer.yml\u0026rsquo; file for the deployment of nextcloud with a database. Remember the environment variables and the persistence of information. javiercruces@docker:~/taller2$ cat docker-compose.yaml version: \u0026#39;2\u0026#39; volumes: nextcloud: db: services: db: image: mariadb:10.6 restart: always command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW volumes: - db:/var/lib/mysql environment: - MYSQL_ROOT_PASSWORD=root - MYSQL_PASSWORD=javiercruces - MYSQL_DATABASE=nextcloud - MYSQL_USER=nextcloud app: image: nextcloud restart: always ports: - 8081:80 links: - db volumes: - nextcloud:/var/www/html environment: - MYSQL_PASSWORD=javiercruces - MYSQL_DATABASE=nextcloud - MYSQL_USER=nextcloud - MYSQL_HOST=db Raise the stage with \u0026lsquo;docker-compose\u0026rsquo;. javiercruces@docker:~/taller2$ docker compose up -d [+] Running 2/2 ✔ Container taller2-db-1 Started 0.0s ✔ Container taller2-app-1 Started 0.0s Show the containers with \u0026lsquo;docker-compose\u0026rsquo;. javiercruces@docker:~/taller2$ docker compose ps NAME IMAGE COMMAND SERVICE CREATED STATUS PORTS taller2-app-1 nextcloud \u0026#34;/entrypoint.sh apache2-foreground\u0026#34; app 7 minutes ago Up 5 minutes 0.0.0.0:8081-\u0026gt;80/tcp, :::8081-\u0026gt;80/tcp taller2-db-1 mariadb:10.6 \u0026#34;docker-entrypoint.sh --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW\u0026#34; db 7 minutes ago Up 5 minutes 3306/tcp Access the application and check that it works. Check the storage you have defined and that a new bridge-type network has been created. javiercruces@docker:~/taller2$ docker network ls NETWORK ID NAME DRIVER SCOPE 5dd43eadf03b bridge bridge local 40fad2a3552b host host local 9f5f2450d012 none null local a1f8faf5a100 taller1 bridge local fcf9b3b0fed4 taller2_default bridge local javiercruces@docker:~/taller2$ docker volume ls DRIVER VOLUME NAME local 0dd5f1f824800210c4ce522371cb31ef1075c779566ed986b8718a88eb4b50a9 local 5d742d485cd427d22f688488a3d28f562e6e8037ecf2e56f7fb81dc6db71e26b local 9eeb57dc83abfd57998498152b2a03527b8743ccf1eee5cba2e7ef891030e496 local 87622e5677a467c635c75f868ae123679269507fbe7f6a47b0804999a0845f01 local d9cb1b25e8892ef2f8b51b1352a00d44451616eb0f52db43cb8d42d391b9ab1b local db_vol local miweb local taller2_db local taller2_nextcloud Delete the stage with \u0026lsquo;docker-compose\u0026rsquo;. javiercruces@docker:~/taller2$ docker compose rm -sf [+] Stopping 2/2 ✔ Container taller2-app-1 Stopped 3.6s ✔ Container taller2-db-1 Stopped 6.1s Going to remove taller2-app-1, taller2-db-1 [+] Removing 2/0 ✔ Container taller2-db-1 Removed 0.1s ✔ Container taller2-app-1 Removed ","date":"March 14, 2024","hero":"/images/docker/taller2.png","permalink":"https://www.javiercd.es/en/posts/docker/taller2/taller2_docker/","summary":"\u003ch2 id=\"workshop-2-multicontainer-scenarios-in-docker\"\u003eWorkshop 2: Multicontainer Scenarios in Docker\u003c/h2\u003e\n\u003ch3 id=\"nextcloud-deployment\"\u003eNextcloud deployment\u003c/h3\u003e\n\u003cp\u003eWe will deploy the nextcloud application with a database (you can choose mariadb or PostgreSQL) using the docker-compose application. You can take as model the file \u0026lsquo;docker-compose.yml\u0026rsquo; that we have studied to display WordPress.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eInstall docker- compose on your computer.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"2\"\u003e\n\u003cli\u003eWithin a directory creates a \u0026lsquo;docker-composer.yml\u0026rsquo; file for the deployment of nextcloud with a database. Remember the environment variables and the persistence of information.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejaviercruces@docker:~/taller2$ cat docker-compose.yaml \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eversion: \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;2\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003evolumes:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  nextcloud:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  db:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eservices:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  db:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    image: mariadb:10.6\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    restart: always\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    command: --transaction-isolation\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eREAD-COMMITTED --log-bin\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ebinlog --binlog-format\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eROW\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    volumes:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - db:/var/lib/mysql\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    environment:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - MYSQL_ROOT_PASSWORD\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eroot\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - MYSQL_PASSWORD\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ejaviercruces\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - MYSQL_DATABASE\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003enextcloud\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - MYSQL_USER\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003enextcloud\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  app:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    image: nextcloud\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    restart: always\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    ports:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - 8081:80\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    links:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - db\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    volumes:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - nextcloud:/var/www/html\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    environment:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - MYSQL_PASSWORD\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ejaviercruces\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - MYSQL_DATABASE\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003enextcloud\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - MYSQL_USER\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003enextcloud\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - MYSQL_HOST\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003edb\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"3\"\u003e\n\u003cli\u003eRaise the stage with \u0026lsquo;docker-compose\u0026rsquo;.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejaviercruces@docker:~/taller2$ docker compose up -d \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e+\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e Running 2/2\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e ✔ Container taller2-db-1   Started                                                                0.0s \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e ✔ Container taller2-app-1  Started                                                                0.0s\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"4\"\u003e\n\u003cli\u003eShow the containers with \u0026lsquo;docker-compose\u0026rsquo;.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejaviercruces@docker:~/taller2$ docker compose ps\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eNAME            IMAGE          COMMAND                                                                                              SERVICE   CREATED         STATUS         PORTS\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etaller2-app-1   nextcloud      \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/entrypoint.sh apache2-foreground\u0026#34;\u003c/span\u003e                                                                  app       \u003cspan style=\"color:#ae81ff\"\u003e7\u003c/span\u003e minutes ago   Up \u003cspan style=\"color:#ae81ff\"\u003e5\u003c/span\u003e minutes   0.0.0.0:8081-\u0026gt;80/tcp, :::8081-\u0026gt;80/tcp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etaller2-db-1    mariadb:10.6   \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;docker-entrypoint.sh --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW\u0026#34;\u003c/span\u003e   db        \u003cspan style=\"color:#ae81ff\"\u003e7\u003c/span\u003e minutes ago   Up \u003cspan style=\"color:#ae81ff\"\u003e5\u003c/span\u003e minutes   3306/tcp\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"5\"\u003e\n\u003cli\u003eAccess the application and check that it works.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"/docker/taller2/img/Pasted_image_20240202091554.png\" alt=\"\"\u003e\u003c/p\u003e","tags":["Docker","Kubernetes","Contenedores"],"title":"Workshop 2: Multicontainer Scenarios in Docker"},{"categories":null,"contents":"In this exercise, we want to deploy an HTML5 page on the service surge.sh. We also want to check if the HTML5 code is valid. These two operations—checking if the HTML5 is valid (test) and deploying to surge.sh (deploy)—will be automated using Jenkins (CI/CD).\nRemember that the repository is https://github.com/josedom24/ic-html5.\nAs we saw in Example 2, to do the deployment, we need to save the token obtained from surge.sh. Let\u0026rsquo;s see how to work with credentials in Jenkins.\nCreate credentials We can create several types of credentials: user and password, SSH credentials, etc. We will create a Secret text credential to store the surge token.\ndebian@jenkins:~$ sudo apt install npm debian@jenkins:~$ sudo npm install -g surge debian@jenkins:~$ surge token Login (or create a surge account) by entering your email \u0026amp; password. email: javierasping@gmail.com password: pipeline { environment { TOKEN = credentials(\u0026#39;SURGE_TOKEN\u0026#39;) } agent { docker { image \u0026#39;josedom24/debian-npm\u0026#39; args \u0026#39;-u root:root\u0026#39; } } stages { stage(\u0026#39;Clone\u0026#39;) { steps { git branch: \u0026#39;master\u0026#39;, url: \u0026#39;https://github.com/javierasping/taller2_ic-html5.git\u0026#39; } } stage(\u0026#39;Install surge\u0026#39;) { steps { sh \u0026#39;npm install -g surge\u0026#39; } } stage(\u0026#39;Deploy\u0026#39;) { steps { sh \u0026#39;surge ./_build/ josedom24.surge.sh --token $TOKEN\u0026#39; } } } } We install and configure Ngrok with our token:\ndebian@jenkins:~$ curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc \\ | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc \u0026gt;/dev/null \u0026amp;\u0026amp; echo \u0026#34;deb https://ngrok-agent.s3.amazonaws.com buster main\u0026#34; \\ | sudo tee /etc/apt/sources.list.d/ngrok.list \u0026amp;\u0026amp; sudo apt update \u0026amp;\u0026amp; sudo apt install ngrok debian@jenkins:~$ ngrok config add-authtoken 2d2CfEVHT Authtoken saved to configuration file: /home/debian/.config/ngrok/ngrok.yml We indicate in Jenkins that we will use a WebHook:\nI launch a correct HTML example and one with errors:\nWe check that the changes in the repository are received by the WebHook:\nOn GitHub, we check that it is sending the request to the WebHook:\n","date":"March 14, 2024","hero":"/images/ci_cd/jenkins/taller2.png","permalink":"https://www.javiercd.es/en/posts/ci_cd/taller2_jenkins/taller2/","summary":"\u003cp\u003eIn this exercise, we want to deploy an HTML5 page on the service \u003cem\u003esurge.sh\u003c/em\u003e. We also want to check if the HTML5 code is valid. These two operations—checking if the HTML5 is valid (test) and deploying to surge.sh (deploy)—will be automated using Jenkins (CI/CD).\u003c/p\u003e\n\u003cp\u003eRemember that the repository is \u003ca href=\"https://github.com/josedom24/ic-html5\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/josedom24/ic-html5\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eAs we saw in Example 2, to do the deployment, we need to save the token obtained from surge.sh. Let\u0026rsquo;s see how to work with credentials in Jenkins.\u003c/p\u003e","tags":["Jenkins","CI/CD"],"title":"Workshop 2: Valid HTML5 Check and surge.sh Deployment (Test and Deploy)"},{"categories":null,"contents":"We will work with the application repository django_tutorial. This application has a series of tests defined, which can be studied in the tests.py file in the polls directory.\nEach test is defined by a function. In the file, you can read the comments to understand what each test is checking, or you can refer to the document Tests in the Django tutorial application.\nTo run the tests, execute:\npython3 manage.py test At this moment, a temporary database is created where the defined tests are executed:\npython3 manage.py test Creating test database for alias \u0026#39;default\u0026#39;... System check identified no issues (0 silenced). .......... ---------------------------------------------------------------------- Ran 10 tests in 0.024s OK Destroying test database for alias \u0026#39;default\u0026#39;... For example, two tests are defined in the test_no_questions function and in the test_future_question function. These check that if there are no questions in the database, the message \u0026ldquo;No polls are available\u0026rdquo; should appear. If a programmer modifies the application and changes the message in polls/templates/polls/index.html:\n... \u0026lt;p\u0026gt;No hay encuestas disponibles.\u0026lt;/p\u0026gt; ... Since the tests check for a different message, they will fail:\npython3 manage.py test Creating test database for alias \u0026#39;default\u0026#39;... System check identified no issues (0 silenced). ..F.F..... ====================================================================== FAIL: test_future_question (polls.tests.QuestionIndexViewTests) Questions with a pub_date in the future aren\u0026#39;t displayed on ---------------------------------------------------------------------- Traceback (most recent call last): File \u0026#34;/home/jose/github/django_tutorial/polls/tests.py\u0026#34;, line 143, in test_future_question self.assertContains(response, \u0026#34;No polls are available.\u0026#34;) File \u0026#34;/home/jose/virtualenv/django_tutorial/lib/python3.9/site-packages/django/test/testcases.py\u0026#34;, line 471, in assertContains self.assertTrue(real_count != 0, msg_prefix + \u0026#34;Couldn\u0026#39;t find %s in response\u0026#34; % text_repr) AssertionError: False is not true : Couldn\u0026#39;t find \u0026#39;No polls are available.\u0026#39; in response ====================================================================== FAIL: test_no_questions (polls.tests.QuestionIndexViewTests) If no questions exist, an appropriate message is displayed. ---------------------------------------------------------------------- Traceback (most recent call last): File \u0026#34;/home/jose/github/django_tutorial/polls/tests.py\u0026#34;, line 115, in test_no_questions self.assertContains(response, \u0026#34;No polls are available.\u0026#34;) File \u0026#34;/home/jose/virtualenv/django_tutorial/lib/python3.9/site-packages/django/test/testcases.py\u0026#34;, line 471, in assertContains self.assertTrue(real_count != 0, msg_prefix + \u0026#34;Couldn\u0026#39;t find %s in response\u0026#34; % text_repr) AssertionError: False is not true : Couldn\u0026#39;t find \u0026#39;No polls are available.\u0026#39; in response ---------------------------------------------------------------------- Ran 10 tests in 0.022s FAILED (failures=2) Remember: To make a test fail, you should not modify the test.py file. The tests fail because modifying the application code causes the conditions defined in the tests to no longer be met.\nPipeline to Perform an Automatic Test Permalink Knowing how the tests are executed, we can create a pipeline to automate this process:\npipeline { agent { docker { image \u0026#39;python:3\u0026#39; args \u0026#39;-u root:root\u0026#39; } } stages { stage(\u0026#39;Clone\u0026#39;) { steps { git branch: \u0026#39;master\u0026#39;, url: \u0026#39;https://github.com/josedom24/django_tutorial.git\u0026#39; } } stage(\u0026#39;Install\u0026#39;) { steps { sh \u0026#39;pip install -r requirements.txt\u0026#39; } } stage(\u0026#39;Test\u0026#39;) { steps { sh \u0026#39;python3 manage.py test\u0026#39; } } } } To install the packages with pip, we need to execute the commands as root (args '-u root:root'). We clone the repository. We install the required dependencies. We run the tests. Try modifying the application code to cause a test to fail and verify how the pipeline detects the failure.\n1. Screenshot of a successful build: 2. Modify the application code to trigger a failure. Remember: To make a test fail, you should not modify the test.py file. The tests fail because modifying the application code causes the conditions defined in the tests to no longer be met. Avoid modifying the \u0026ldquo;No polls are available.\u0026rdquo; message, as we already covered that case in this workshop.\nModify the function as follows:\ndef was_published_recently(self): now = timezone.now() return now - datetime.timedelta(days=1) \u0026gt;= self.pub_date \u0026lt;= now was_published_recently.admin_order_field = \u0026#39;pub_date\u0026#39; was_published_recently.boolean = True was_published_recently.short_description = \u0026#39;Published recently?\u0026#39; 3. Screenshot of a failed build: ","date":"March 14, 2024","hero":"/images/ci_cd/jenkins/taller3.png","permalink":"https://www.javiercd.es/en/posts/ci_cd/taller3_jenkins/taller3/","summary":"\u003cp\u003eWe will work with the application repository \u003ca href=\"https://github.com/josedom24/django_tutorial\" target=\"_blank\" rel=\"noopener\"\u003edjango_tutorial\u003c/a\u003e. This application has a series of tests defined, which can be studied in the \u003ccode\u003etests.py\u003c/code\u003e file in the \u003ccode\u003epolls\u003c/code\u003e directory.\u003c/p\u003e\n\u003cp\u003eEach test is defined by a function. In the file, you can read the comments to understand what each test is checking, or you can refer to the document \u003ca href=\"https://fp.josedomingo.org/iaw/5_ic/test_tutorial_django.html\" target=\"_blank\" rel=\"noopener\"\u003eTests in the Django tutorial application\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eTo run the tests, execute:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epython3 manage.py test\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAt this moment, a temporary database is created where the defined tests are executed:\u003c/p\u003e","tags":["Jenkins","CI/CD"],"title":"Workshop 3: Continuous Integration of Django Application (Test)"},{"categories":null,"contents":"Workshop 3: Docker Image Creation Creating an image from a Dockerfile\n1.Create a static website (e.g. search for an HTML5 template). Or just create an index.htm ml.\nCreate a Dockerfile file to create an image with a web server by serving the page. You can use a debian or ubuntu base image, or an image that already has a web service, as we have seen in Example 1: Image construction with a static page. javiercruces@docker:~/taller3$ cat Dockerfile #syntax=docker/dockerfile:1 FROM httpd:2.4 COPY ./public_html/ /usr/local/apache2/htdocs/ EXPOSE 80 Run the docker command that creates the new image. The image should be called my_server_web:v1. javiercruces@docker:~/taller3$ docker build -t javiersaping/mi_servidor_web:v1 . Sending build context to Docker daemon 3.584kB Step 1/3 : FROM httpd:2.4 ---\u0026gt; 92fa43a2ff60 Step 2/3 : COPY ./public_html/ /usr/local/apache2/htdocs/ ---\u0026gt; b03556dd59b6 Step 3/3 : EXPOSE 80 ---\u0026gt; Running in 1cc04e1deee4 Removing intermediate container 1cc04e1deee4 ---\u0026gt; 3078183767ef Successfully built 3078183767ef Successfully tagged javiersaping/mi_servidor_web:v1 javiercruces@docker:~/taller3$ docker run -d -p 8081:80 javiersaping/mi_servidor_web:v1 2a753adcd098c49b7b215b7c97267a09e09194303bee131150765222a4295dea Connect to Docker Hub and upload the image you just created. javiercruces@docker:~/taller3$ docker login javiercruces@docker:~/taller3$ docker push javiersaping/mi_servidor_web:v1 The push refers to repository [docker.io/javiersaping/mi_servidor_web] c2a1a8df6153: Pushed daede99f9966: Mounted from library/httpd a7eff924c5ac: Mounted from library/httpd 24282ddb8cca: Mounted from library/httpd 5f70bf18a086: Mounted from library/httpd 8ba5f6d45106: Mounted from library/httpd 571ade696b26: Mounted from library/nextcloud v1: digest: sha256:85a8e341e3fd89b313a263a45c91ad846d673f198301e482c4f07352aef8bd42 size: 1779 Download the image to another computer where you have docker installed, and create a container from it. (If you don\u0026rsquo;t have another computer with docker installed, delete the image on your computer and download it from Docker Hub). javiercruces@docker:~/taller3$ docker image ls REPOSITORY TAG IMAGE ID CREATED SIZE javiersaping/mi_servidor_web v1 3078183767ef 7 minutes ago 167MB nextcloud latest 142b11cc42d8 3 weeks ago 1.21GB wordpress latest fe93c4b645b9 8 weeks ago 739MB mariadb latest 2b54778e06a3 2 months ago 404MB mariadb 10.6 10fbb70b8165 2 months ago 396MB mariadb 10.5 72610f6b03ac 2 months ago 393MB httpd 2.4 92fa43a2ff60 3 months ago 167MB php 7.4-apache 20a3732f422b 14 months ago 453MB javiercruces@docker:~/taller3$ docker image rm 3078183767ef Untagged: javiersaping/mi_servidor_web:v1 Untagged: javiersaping/mi_servidor_web@sha256:85a8e341e3fd89b313a263a45c91ad846d673f198301e482c4f07352aef8bd42 Deleted: sha256:3078183767efd71fffccce7fb4e6806afa46a4cff42c37ad505d376e0b842108 Deleted: sha256:b03556dd59b6f2ab935450b4d5eb09dedfc4ee86f4c11a9140d8e17f89d89a73 Deleted: sha256:5f245addf2a19a8f2d9314dc1283ab53d0f85ae6a6a73aa5d264f070f0d71e01 javiercruces@docker:~/taller3$ docker pull javiersaping/mi_servidor_web:v1 v1: Pulling from javiersaping/mi_servidor_web 2f44b7a888fa: Already exists 5abb3599da34: Already exists 4f4fb700ef54: Already exists fa608a886227: Already exists afe6bbf00437: Already exists fd0ef2a49677: Already exists 6d9a1035e41b: Pull complete Digest: sha256:85a8e341e3fd89b313a263a45c91ad846d673f198301e482c4f07352aef8bd42 Status: Downloaded newer image for javiersaping/mi_servidor_web:v1 docker.io/javiersaping/mi_servidor_web:v1 Let\u0026rsquo;s make a modification of the website: make a modification to the index.html file. javiercruces@docker:~/taller3/public_html$ echo \u0026#34;\u0026lt;h1\u0026gt;Taller3 FJCD V2\u0026lt;/h1\u0026gt;\u0026#34; \u0026gt; index.html Re-create a new image, in this case put a v2 tag. Get her up to Docker Hub. javiercruces@docker:~/taller3$ docker build -t javiersaping/mi_servidor_web:v2 . Sending build context to Docker daemon 3.584kB Step 1/3 : FROM httpd:2.4 ---\u0026gt; 92fa43a2ff60 Step 2/3 : COPY ./public_html/ /usr/local/apache2/htdocs/ ---\u0026gt; 94e5c065b88a Step 3/3 : EXPOSE 80 ---\u0026gt; Running in 5849a7ba6b3b Removing intermediate container 5849a7ba6b3b ---\u0026gt; 2e68e7708285 Successfully built 2e68e7708285 Successfully tagged javiersaping/mi_servidor_web:v2 javiercruces@docker:~/taller3$ docker push javiersaping/mi_servidor_web:v2 The push refers to repository [docker.io/javiersaping/mi_servidor_web] 1f5b52d08ce0: Pushed daede99f9966: Layer already exists a7eff924c5ac: Layer already exists 24282ddb8cca: Layer already exists 5f70bf18a086: Layer already exists 8ba5f6d45106: Layer already exists 571ade696b26: Layer already exists v2: digest: sha256:a2af8396c3dfaa8d0312868161bff238c17b742cd46d57296ed304a9495b2a7a size: 1779 Finally, put the new image down on the computer where the container is running. To implement the new version you must delete the container and create a new one from the new version of the image. javiercruces@docker:~/taller3$ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 2a753adcd098 javiersaping/mi_servidor_web:v1 \u0026#34;httpd-foreground\u0026#34; 3 minutes ago Up 3 minutes 0.0.0.0:8081-\u0026gt;80/tcp, :::8081-\u0026gt;80/tcp nervous_lewin 5a362b768a25 nextcloud:latest \u0026#34;/entrypoint.sh apac…\u0026#34; 2 weeks ago Up 2 weeks 0.0.0.0:8080-\u0026gt;80/tcp, :::8080-\u0026gt;80/tcp nextcloud dcc9f10a6cad mariadb:10.5 \u0026#34;docker-entrypoint.s…\u0026#34; 2 weeks ago Up 2 weeks 3306/tcp wp_db javiercruces@docker:~/taller3$ docker rm -f 2a753adcd098 2a753adcd098 javiercruces@docker:~/taller3$ docker run -d -p 8081:80 javiersaping/mi_servidor_web:v2 e632b46bb8cf8aac8019effdf5ac69cc20d8b9e76b17342638bc4858c63aef32 ","date":"March 14, 2024","hero":"/images/docker/taller3.png","permalink":"https://www.javiercd.es/en/posts/docker/taller3/taller3_docker/","summary":"\u003ch2 id=\"workshop-3-docker-image-creation\"\u003eWorkshop 3: Docker Image Creation\u003c/h2\u003e\n\u003cp\u003eCreating an image from a Dockerfile\u003c/p\u003e\n\u003cp\u003e1.Create a static website (e.g. search for an HTML5 template). Or just create an index.htm ml.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"2\"\u003e\n\u003cli\u003eCreate a Dockerfile file to create an image with a web server by serving the page. You can use a debian or ubuntu base image, or an image that already has a web service, as we have seen in Example 1: Image construction with a static page.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejaviercruces@docker:~/taller3$ cat Dockerfile \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#syntax=docker/dockerfile:1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eFROM httpd:2.4\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eCOPY ./public_html/ /usr/local/apache2/htdocs/\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eEXPOSE \u003cspan style=\"color:#ae81ff\"\u003e80\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"3\"\u003e\n\u003cli\u003eRun the docker command that creates the new image. The image should be called my_server_web:v1.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejaviercruces@docker:~/taller3$ docker build -t javiersaping/mi_servidor_web:v1 .\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eSending build context to Docker daemon  3.584kB\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eStep 1/3 : FROM httpd:2.4\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e ---\u0026gt; 92fa43a2ff60\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eStep 2/3 : COPY ./public_html/ /usr/local/apache2/htdocs/\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e ---\u0026gt; b03556dd59b6\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eStep 3/3 : EXPOSE \u003cspan style=\"color:#ae81ff\"\u003e80\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e ---\u0026gt; Running in 1cc04e1deee4\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eRemoving intermediate container 1cc04e1deee4\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e ---\u0026gt; 3078183767ef\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eSuccessfully built 3078183767ef\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eSuccessfully tagged javiersaping/mi_servidor_web:v1\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejaviercruces@docker:~/taller3$ docker run -d -p 8081:80 javiersaping/mi_servidor_web:v1\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e2a753adcd098c49b7b215b7c97267a09e09194303bee131150765222a4295dea\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"/docker/taller3/img/Pasted_image_20240208085015.png\" alt=\"\"\u003e\u003c/p\u003e","tags":["Docker","Kubernetes","Contenedores"],"title":"Workshop 3: Docker Imaging"},{"categories":null,"contents":"Introduction The compilation of programs in programming language C is a fundamental process in software development. It allows the source code written by the programmers to be translated into computer-friendly instructions. One of the challenges associated with the compilation is the efficient management of the project files and units, which becomes even more crucial when working on large and complex projects.\nThis work aims to explore one of the most used mechanisms to compile projects in C: the use of a Makefile file. A Makefile is a configuration file that describes how to compile the source files of a project and how to manage the units between them. In addition, it allows to automate the compilation process and facilitates the task of maintaining and updating the code.\nThroughout this work, we will examine in detail the process of compiling a program in C using a Makefile. We will start by understanding the structure of a Makefile and how the compilation flow is defined. Then we will explore the advantages of its use, such as automatic detection of changes in the source files and selective collection. We will also address best practices to create effective and easy-to-maintain Makefilds.\nIn addition, we will analyze a practical example of a C program compilation, detailing the steps needed to create a Makefile and compile the project. We will also discuss the installation of the resulting program in a personal directory, avoiding interference with the package system.\nUltimately, we will learn how to clean up the program and understand the importance of proper software management in Unix / Linux systems.\nAs we progress in this work, we will gain a deeper understanding of the C-compilation and the usefulness of a Makefile as an essential tool in software development.\nCompilation of a C-program using a Makefile The first thing we\u0026rsquo;re going to install is fundamental for the compilation of C packages in Debian.\nThe building-essential package provides the necessary compilation tools, and dpkg-dev facilitates package management and source code delivery. You can install other specific development packages according to your needs, but these two are the most essential to start compiling C software in Debian.\nNow let\u0026rsquo;s download the source files from the package that we want to compile in my case I will make it samba:\nOnce this is done we will see in our directory that a series of files and directories have been created:\nsamba-4.17.12 + dfsg: * * This is the directory that contains the Samba source code, which was downloaded from Debian repositories. It is the source that will be used to compile and install Samba in your system. samba\\ _ 4.17.12 + dfsg-0 + deb12u1.debian.tar.xz: * * This compressed file contains the specific Debian modifications for the Samba package. You can include patches, construction scripts and other files related to package construction. samba\\ _ 4.17.12 + dfsg-0 + deb12u1.dsc: * * This file is the Debian Source Control. It contains information about the source and the versions of the package, as well as links to other files related to the source. samba\\ _ 4.17.12 + dfsg.orig.tar.xz: * * This compressed file is the original source of Samba as published on the official Samba website. It is used as a basis for building the Debian package. Let\u0026rsquo;s get in the main directory and we can see the source code of the package:\nThe first thing we will do is install the units of the package that we want to compile in my case samba:\nNow let\u0026rsquo;s launch the script configure. This script is used to configure samba compilation according to your needs and system characteristics:\nNow let\u0026rsquo;s compile the source code using the make command. This will be in charge of compiling the code and creating the executables and libraries that the script has created configure:\nThis will take a while depending on the size of the package in my case, it took me 8 minutes:\nOnce the code is compiled to install it we will use make install:\nOnce this is done we will have our package installed on the route / usr / local:\nNow to start the samba service we will run the nmbd file and make sure it is working:\nWe see that the installed version is the one we have compiled:\nUninstall the compiled package To remove the package we have compiled:\nWe see that it only leaves us the service configuration files:\nThey may remain in our samba trace system as the makefile file is not configured in this case to completely remove it, run whereis and remove the content of the routes:\nOnce this has been done, we will have removed the samba trail:\n","date":"November 29, 2023","hero":"/images/sistemas/compilacion_de_un_programa_en_c/compilacion_de_un_programa_en_c.jpg","permalink":"https://www.javiercd.es/en/posts/sistemas/compilaciones_linux/compilacion_de_un_programa_en_c_utilizando_un_makefile/compilacion_de_un_programa_en_c_utilizando_un_makefile/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eThe compilation of programs in programming language C is a fundamental process in software development. It allows the source code written by the programmers to be translated into computer-friendly instructions. One of the challenges associated with the compilation is the efficient management of the project files and units, which becomes even more crucial when working on large and complex projects.\u003c/p\u003e\n\u003cp\u003eThis work aims to explore one of the most used mechanisms to compile projects in C: the use of a Makefile file. A Makefile is a configuration file that describes how to compile the source files of a project and how to manage the units between them. In addition, it allows to automate the compilation process and facilitates the task of maintaining and updating the code.\u003c/p\u003e","tags":["Sistemas","ISO","ASO","Linux"],"title":"Compilation of a C-program using a Makefile"},{"categories":null,"contents":"Introduction For the practice I will choose the kernel 6.4.4 that I have downloaded from the backports repository:\nTo download the source code we will use apt source:\nIt will create us a directory with the source code\nIf we list the contents of the directory with the source code, we will see that the structure is the same as to compile a package in C.\nFirst compilation The first thing we\u0026rsquo;re gonna do is use the .config file that has our kernel loaded, mine currently has 10640 lines.\nNext we will launch the make oldconfig command to use the current kernel file we are using.\nIf we see we have 2413 modules configured in a static way and 3855 in a dynamic way:\nLet\u0026rsquo;s pass the localmodconfig parameter, leave the enter pressed to select the different parameters by default.\nWe see that with this parameter we have significantly reduced the number of modules, as with the method used in the previous step only those we have currently loaded in the kernel are used:\nWe\u0026rsquo;ll build the kernel and try it, in my case it starts:\nSecond compilation I will remove some components manually using the make xconfig tool:\nAfter removing several points from the .config I have been left with:\nNow we\u0026rsquo;re going to use a method to compile which will make us .deb packages and use 15 cores for it:\nWe will generate 4 .deb packages in the top directory:\nWe\u0026rsquo;re going to install them, for that we\u0026rsquo;ll use a wildcard to install all the .deb:\nFinally let\u0026rsquo;s make sure the kernel is installed:\nSign a kernel As I have the safe start activated on the laptop, you will need to sign the kernel so you can start it.\nSo for this we will follow the steps that debian tells us to do it.\nIf you want to know which keys are in use in your system, several other mokutile calls will help you, for example, sudo mokutile \u0026ndash;list-enlisted to show the current list of MOK keys\nTo generate a new keys to sign the kernel we will create the following directory:\nLet\u0026rsquo;s generate the private and certified key in DER format\nNow let\u0026rsquo;s convert the DER certificate to PEM format:\nNow to register a new MOK key, I first issue the request using the mokutile command. I run the following command:\nDuring this process, I will be asked to enter an \u0026ldquo;one-time password\u0026rdquo; to confirm the registration. This password is crucial for validating and authorizing the operation.\nAfter issuing the request and providing the password, the key entry is not completed immediately. Instead, I need to restart the system.\nWhen we reboot, we will have a blue screen, we will head for the second MOK roll option:\nHe\u0026rsquo;ll tell us if we want to add the keys:\nAnd you will ask us to put the password we have indicated in one use:\nOnce this has been done, we restart the team:\nOnce the key is added, we can check it with the following command:\nFor DKMS (Dynamic Kernel Module Support) to automatically sign the kernel modules, it is necessary to tell you which key to sign the module with. This is done by adding two configuration values to the \u0026ldquo;/ etc / dkms / framework.conf\u0026rdquo; file, adjusting the routes as needed.\nIn addition, we will add the following script:\nThe script will have the following content:\nNow we\u0026rsquo;re going to define the variables needed to proceed to sign the kernel, the version one makes it with a -r in the debian documentation but my modules have the 6.4.4 prefix. You can check it on the s / lib / modules / route.\nNow let\u0026rsquo;s sign the kernel:\nOnce the kernel has been signed, we can reboot it and check that it starts. It took me more than usual to get started, but in about 2 minutes it finally starts.\n","date":"November 29, 2023","hero":"/images/sistemas/compilacion_de_un_kernel/compilacion_de_un_kernel.jpg","permalink":"https://www.javiercd.es/en/posts/sistemas/compilaciones_linux/compilacion_de_un_kernel/compilacion_de_un_kernel/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eFor the practice I will choose the kernel 6.4.4 that I have downloaded from the backports repository:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/compilaciones_linux/compilacion_de_un_kernel/img/Aspose.Words.4794869c-382a-4c20-b046-83b787e9bd0a.001.jpeg\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eTo download the source code we will use apt source:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/compilaciones_linux/compilacion_de_un_kernel/img/Aspose.Words.4794869c-382a-4c20-b046-83b787e9bd0a.002.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eIt will create us a directory with the source code\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/compilaciones_linux/compilacion_de_un_kernel/img/Aspose.Words.4794869c-382a-4c20-b046-83b787e9bd0a.003.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eIf we list the contents of the directory with the source code, we will see that the structure is the same as to compile a package in C.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/compilaciones_linux/compilacion_de_un_kernel/img/Aspose.Words.4794869c-382a-4c20-b046-83b787e9bd0a.004.jpeg\" alt=\"\"\u003e\u003c/p\u003e","tags":["Sistemas","ISO","ASO","Linux"],"title":"Compilation of a kernel"},{"categories":null,"contents":"Automatic installation of an iso On the official debian page we will download a debian image, in my case I have selected a netinstall:\nOnce you download the debian image, we will copy its content into a folder to then make some modifications. To do this we will mount the iso as a loop device:\nOnce mounted we can see its content:\nWe\u0026rsquo;re going to make a copy of the files we\u0026rsquo;re going to use to a directory of ours to make changes to them, once we do this we can dismount the image:\nOnce the files are copied we will move to the directory to create the file preseed:\nWithin the same we will copy the bookwork template file provided by debian, you can find it on its official page → https: / / www.debian.org / releases / bookwork / example-presed.txt. I will put this file into the fjcd\\ _ car folder.\nWe will edit the template and select the different options:\nOnce the presede.cfg file is configured, we give permission to the install.amd directory and uncompress the initrd.gz:\nWe add the lines of our preseed file to the initrd:\nWe recompress the initrd file and remove the permissions given to the parent directory previously:\nNow we will add an input to this file so that when we start the iso we would have an input that will automatically perform the installation with our presed.cfg file:\nFinally, the hash is removed from the different iso files and added to the md5sum.txt file:\nWith this we have only to generate the iso:\nIf we start with the iso, we will see the entry we have created:\nOutcome:\nPXE server Now we\u0026rsquo;re going to prepare the PXE server to make a network installation, to set up SNAT on it so that customers have the Internet:\nFor the change to be permanent I have installed and configured iptables-persistent, also remember to activate the bit of the forweding\nNow we install we will install dnsmasq:\nAnd we\u0026rsquo;ll set up the service:\nWe restart the service to apply the configuration:\nNow in the root directory of our tftp we will download the netboot of our debian version:\nNow let\u0026rsquo;s decompress the following content:\nOnce the file is uncompressed, we will create symbolic links to the following files:\nNow we have to set up the web server to pass the file presed.cfg, I have put it in the document root of the virtual host by default:\nFinally we have left to configure the entry of the iso menu that we have downloaded, we indicate that the file presed.cfg is in the following url:\nNow we can start the machine by pxe:\nAnd if we click on the custom input we just created, it will automatically be installed from the presed.cfg file:\nOutcome:\n","date":"November 29, 2023","hero":"/images/sistemas/creacion_de_un_sistema_automatizado_de_instalacion/creacion_de_un_sistema_automatizado_de_instalacion.jpg","permalink":"https://www.javiercd.es/en/posts/sistemas/creacion_de_un_sistema_automatizado_de_instalacion/creacion_de_un_sistema_automatizado_de_instalacion/","summary":"\u003ch3 id=\"automatic-installation-of-an-iso\"\u003eAutomatic installation of an iso\u003c/h3\u003e\n\u003cp\u003eOn the official debian page we will download a debian image, in my case I have selected a netinstall:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/creacion_de_un_sistema_automatizado_de_instalacion/img/Aspose.Words.87912b93-5caf-4cac-995f-066fba11b8b6.001.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eOnce you download the debian image, we will copy its content into a folder to then make some modifications. To do this we will mount the iso as a loop device:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/creacion_de_un_sistema_automatizado_de_instalacion/img/Aspose.Words.87912b93-5caf-4cac-995f-066fba11b8b6.002.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eOnce mounted we can see its content:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/creacion_de_un_sistema_automatizado_de_instalacion/img/Aspose.Words.87912b93-5caf-4cac-995f-066fba11b8b6.003.jpeg\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eWe\u0026rsquo;re going to make a copy of the files we\u0026rsquo;re going to use to a directory of ours to make changes to them, once we do this we can dismount the image:\u003c/p\u003e","tags":["Sistemas","ISO","ASO","Linux"],"title":"Creation of an automated installation system"},{"categories":null,"contents":"1.Disable apparmor in boot. 2.Disable if possible the Kernel Mode Setting (KSM) of the graphics card. We add the following line in the group configuration: We update the grub to apply the changes:\n3 Change the swappiness provisionally so that your equipment swap is activated when more than 90% of the RAM is used. 4 Make swappiness change permanent. You have to run sysctl -p sudo to be applied. 5.Show the value of the forward bit for IPv6.\n6.Fully disable the Magic Sysrq in the boot and reactivate them after reboot. To disable:\nTo reenable them change the value from 0 to 1 and restart the computer or run sudo sysctl -p:\n","date":"November 29, 2023","hero":"/images/sistemas/ejercicios_de_modificacion_de_parametros_del_kernel/ejercicios_de_modificacion_de_parametros_del_kernel.jpg","permalink":"https://www.javiercd.es/en/posts/sistemas/comandos_linux/ejercicios_de_modificacion_de_parametros_del_kernel/ejercicios_de_modificacion_de_parametros_del_kernel/","summary":"\u003ch2 id=\"1disable-apparmor-in-boot\"\u003e1.Disable apparmor in boot.\u003c/h2\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/comandos_linux/ejercicios_de_modificacion_de_parametros_del_kernel/img/Aspose.Words.901d0dd4-f71a-4e77-902f-980456adb847.001.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003ch2 id=\"2disable-if-possible-the-kernel-mode-setting-ksm-of-the-graphics-card-we-add-the-following-line-in-the-group-configuration\"\u003e2.Disable if possible the Kernel Mode Setting (KSM) of the graphics card. We add the following line in the group configuration:\u003c/h2\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/comandos_linux/ejercicios_de_modificacion_de_parametros_del_kernel/img/Aspose.Words.901d0dd4-f71a-4e77-902f-980456adb847.002.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eWe update the grub to apply the changes:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/comandos_linux/ejercicios_de_modificacion_de_parametros_del_kernel/img/Aspose.Words.901d0dd4-f71a-4e77-902f-980456adb847.003.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003ch2 id=\"3-change-the-swappiness-provisionally-so-that-your-equipment-swap-is-activated-when-more-than-90-of-the-ram-is-used\"\u003e3 Change the swappiness provisionally so that your equipment swap is activated when more than 90% of the RAM is used.\u003c/h2\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/comandos_linux/ejercicios_de_modificacion_de_parametros_del_kernel/img/Aspose.Words.901d0dd4-f71a-4e77-902f-980456adb847.004.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003ch2 id=\"4-make-swappiness-change-permanent\"\u003e4 Make swappiness change permanent.\u003c/h2\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/comandos_linux/ejercicios_de_modificacion_de_parametros_del_kernel/img/Aspose.Words.901d0dd4-f71a-4e77-902f-980456adb847.005.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eYou have to run sysctl -p sudo to be applied. 5.Show the value of the forward bit for IPv6.\u003c/p\u003e","tags":["Sistemas","ISO","ASO","Linux"],"title":"Kernel parameter modification exercises"},{"categories":null,"contents":"Update the packages Before migrating, make sure your CentOS Stream 8 system has all the latest packages and updates.\nEliminate unnecessary packages that appear to us when using the next command as they are orphaned packages\nUpdate to CentOS9 Install CentOS 9 repositories:\nNow let\u0026rsquo;s update the packages to CentOS 9:\nWhen the installation is finished, some packages may be removed:\nWe update the database of the local packages:\nWe remove the packages from the cache dnf:\nWe update the installed packages:\nWe install the packages for the minimum installation of a core server (without graphic environment):\nNow we\u0026rsquo;ll reboot the system and start with CentOS 9:\nWhen we start we can check that we already officially have CentOS 9:\nAdditional cleaning If you want you can remove the old kernel:\nAlso if you don\u0026rsquo;t have a subscription you can remove the subscription manager:\nGenerate rescue input in the grub We\u0026rsquo;ll move the old rescue kernel to a temporary folder as a backup:\nNow we\u0026rsquo;re going to regenerate the kernel entries, the command will not return anything so we can check it by looking at the boot partition:\nOnce done, we can restart and check that we have the CentOS 9 recovery input:\nBibliography Guide to migrating from CentOS 8 stream to CenOS 9 stream\n","date":"November 29, 2023","hero":"/images/sistemas/paso_de_centos_stream_8_a_centos_stream_9/paso_de_centos_stream_8_a_centos_stream_9.png","permalink":"https://www.javiercd.es/en/posts/sistemas/migraciones/paso_de_centos_stream_8_a_centos_stream_9/paso_de_centos_stream_8_a_centos_stream_9/","summary":"\u003ch3 id=\"update-the-packages\"\u003eUpdate the packages\u003c/h3\u003e\n\u003cp\u003eBefore migrating, make sure your CentOS Stream 8 system has all the latest packages and updates.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/migraciones/paso_de_centos_stream_8_a_centos_stream_9/img/Aspose.Words.64b29d49-eb3e-49be-9751-9727b0deafb9.001.jpeg\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eEliminate unnecessary packages that appear to us when using the next command as they are orphaned packages\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/migraciones/paso_de_centos_stream_8_a_centos_stream_9/img/Aspose.Words.64b29d49-eb3e-49be-9751-9727b0deafb9.002.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003ch2 id=\"update-to-centos9\"\u003eUpdate to CentOS9\u003c/h2\u003e\n\u003cp\u003eInstall CentOS 9 repositories:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/migraciones/paso_de_centos_stream_8_a_centos_stream_9/img/Aspose.Words.64b29d49-eb3e-49be-9751-9727b0deafb9.003.jpeg\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eNow let\u0026rsquo;s update the packages to CentOS 9:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/migraciones/paso_de_centos_stream_8_a_centos_stream_9/img/Aspose.Words.64b29d49-eb3e-49be-9751-9727b0deafb9.004.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eWhen the installation is finished, some packages may be removed:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/migraciones/paso_de_centos_stream_8_a_centos_stream_9/img/Aspose.Words.64b29d49-eb3e-49be-9751-9727b0deafb9.005.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eWe update the database of the local packages:\u003c/p\u003e","tags":["Sistemas","ISO","ASO","Linux"],"title":"Migtation from CentOS stream 8 to CentOS stream 9"},{"categories":null,"contents":"1.Check the loaded modules on your computer. 2.Count the number of modules available in the kernel you are using. 3 Connect a USB pencil and watch the output of the dmesg sudo instruction. We see how the kernel detects the usb device and the necessary modules are loaded for it:\nWe see how the number of modules loaded has increased:\n4.Eliminate the module for some non-essential dispotive and check what happens. Put it back on. If we download it we will not be able to make use of exfat file systems:\nTo reload it:\n5.Select a module that is in use on your computer and configure the boot so that it is not automatically loaded. For this we add it to the \u0026ldquo;black list,\u0026rdquo; then update the initframes:\nWhen we restart this will not be loaded:\n6.Load the loop module, get information about what it is and what it\u0026rsquo;s for. List the content of / sys / modules / loop / parameters and set up the equipment so that up to 12 loop devices can be loaded next time it starts. We load it and check that it\u0026rsquo;s loaded:\nWe see the information from it:\nReady the contents of the / sys / module / loop / parameters directory. This will show the parameters available for the loop module\nIf we want to limit there are 12 loop devices, we create the following file and add the following configuration:\nWe will have to update the sudo-initrfs-u initframes to apply the changes, and we will have to restart.\nOnce we reboot, if we see the content of the max _ loops parameter. We will see that this one has been applied:\n","date":"November 29, 2023","hero":"/images/sistemas/ejercicios_de_manejo_de_modulos/ejercicios_de_manejo_de_modulos.jpg","permalink":"https://www.javiercd.es/en/posts/sistemas/comandos_linux/ejercicios_de_manejo_de_modulos/ejercicios_de_manejo_de_modulos/","summary":"\u003ch2 id=\"1check-the-loaded-modules-on-your-computer\"\u003e1.Check the loaded modules on your computer.\u003c/h2\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/comandos_linux/ejercicios_de_manejo_de_modulos/img/Aspose.Words.46ea1f3d-268a-4705-a64e-142fcc81092a.001.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003ch2 id=\"2count-the-number-of-modules-available-in-the-kernel-you-are-using\"\u003e2.Count the number of modules available in the kernel you are using.\u003c/h2\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/comandos_linux/ejercicios_de_manejo_de_modulos/img/Aspose.Words.46ea1f3d-268a-4705-a64e-142fcc81092a.002.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003ch2 id=\"3-connect-a-usb-pencil-and-watch-the-output-of-the-dmesg-sudo-instruction\"\u003e3 Connect a USB pencil and watch the output of the dmesg sudo instruction.\u003c/h2\u003e\n\u003cp\u003eWe see how the kernel detects the usb device and the necessary modules are loaded for it:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/comandos_linux/ejercicios_de_manejo_de_modulos/img/Aspose.Words.46ea1f3d-268a-4705-a64e-142fcc81092a.003.jpeg\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eWe see how the number of modules loaded has increased:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/comandos_linux/ejercicios_de_manejo_de_modulos/img/Aspose.Words.46ea1f3d-268a-4705-a64e-142fcc81092a.004.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003ch2 id=\"4eliminate-the-module-for-some-non-essential-dispotive-and-check-what-happens-put-it-back-on\"\u003e4.Eliminate the module for some non-essential dispotive and check what happens. Put it back on.\u003c/h2\u003e\n\u003cp\u003eIf we download it we will not be able to make use of exfat file systems:\u003c/p\u003e","tags":["Sistemas","ISO","ASO","Linux"],"title":"Module management exercises"},{"categories":null,"contents":"Indicates the steps to be followed to modify DHCP network configuration to static To configure the ens1 interface with a static IP address (e.g. 192.168.122.10), you must modify the / etc / sysconfig / network-scripts / ifcfg-ens1 file:\nTo apply the configuration we restart the Network Manager:\nUpdate the system to the latest versions of the installed packages Install the additional EPEL repository. Install the bash- completion package. Install the package provided by the dig program, explaining the steps you have taken to find it\nWe install the package:\nExplain which command you would use to view the kernel package information installed Install the additional \u0026ldquo;elrepo\u0026rdquo; repository. We import the public key to the repository: We install the repository:\nFind the available versions to install the Linux kernel and install the latest Listamos kernel: We install it:\nShow the contents of the package of the last installed kernel ","date":"November 29, 2023","hero":"/images/sistemas/gestion_de_paquetes/gestion_de_paquetes.jpg","permalink":"https://www.javiercd.es/en/posts/sistemas/comandos_linux/gestion_de_paquetes/gestion_de_paquetes/","summary":"\u003ch3 id=\"indicates-the-steps-to-be-followed-to-modify-dhcp-network-configuration-to-static\"\u003eIndicates the steps to be followed to modify DHCP network configuration to static\u003c/h3\u003e\n\u003cp\u003eTo configure the ens1 interface with a static IP address (e.g. 192.168.122.10), you must modify the / etc / sysconfig / network-scripts / ifcfg-ens1 file:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/comandos_linux/gestion_de_paquetes/img/Aspose.Words.0f9af8ba-710a-47db-ba6b-edb2ea8012f0.001.jpeg\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eTo apply the configuration we restart the Network Manager:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/comandos_linux/gestion_de_paquetes/img/Aspose.Words.0f9af8ba-710a-47db-ba6b-edb2ea8012f0.002.jpeg\" alt=\"\"\u003e\u003c/p\u003e\n\u003ch3 id=\"update-the-system-to-the-latest-versions-of-the-installed-packages\"\u003eUpdate the system to the latest versions of the installed packages\u003c/h3\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/comandos_linux/gestion_de_paquetes/img/Aspose.Words.0f9af8ba-710a-47db-ba6b-edb2ea8012f0.003.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003ch3 id=\"install-the-additional-epel-repository\"\u003eInstall the additional EPEL repository.\u003c/h3\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/comandos_linux/gestion_de_paquetes/img/Aspose.Words.0f9af8ba-710a-47db-ba6b-edb2ea8012f0.004.jpeg\" alt=\"\"\u003e\u003c/p\u003e\n\u003ch3 id=\"install-the-bash--completion-package\"\u003eInstall the bash- completion package.\u003c/h3\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/comandos_linux/gestion_de_paquetes/img/Aspose.Words.0f9af8ba-710a-47db-ba6b-edb2ea8012f0.005.png\" alt=\"\"\u003e\u003c/p\u003e","tags":["Sistemas","ISO","ASO","Linux"],"title":"Packaging management"},{"categories":null,"contents":"Work with apt, aptitude, dpkg Exercise 1 What actions I get when performing apt update and apt upgrade. Explain in detail. The apt update command is the first fundamental step in the package update. It takes the following actions:\n-**Recovers Remote Metadata:**apt update communicates with online software repositories and recovers metadata related to available packages. These metadata include information on the latest versions of the packages, their dependencies and other essential information. -Update the Local Metadata Copy: Then apt reconstructs and updates the local copy of these metadata. This allows the system to quickly access information about the packages without having to download it repeatedly.\nOnce apt update has updated the information on the available packages, the next step is to use the apt upgrade command. This command makes a number of important steps:\n-Selection of Candidate Versions: apt selects the candidate versions of the available packages. These versions are often the most recent, although there are exceptions. -Unit Resolution: apt verifies and resolves the units between the packages to ensure that the update is carried out in a coherent manner and that all units are satisfied. -Packaging download: If you find new versions of packages, apt download these versions from the online repositories to the local cache of the system. -Packaging: apt unpack the recovered binary packages. -Execution of Orders Against: During the update, pre-installation command files are run, which may contain necessary settings and settings prior to installation. -Installation of binary files: The binary files of the new versions of the packages are installed in the system. -Execution of PostInst Orders: Finally, post-installation command files are run, which can perform additional settings after installation.\nExercise 2 List the list of packages that can be updated. What information can you draw according to what was shown in the list? You can check the list of packages that can be updated using the following apt list \u0026ndash;upgradable command. This command will show a list of packages available for the update and provide information on each of them. Here is a brief description of the information you can get from this list:\nPackage Name: The package name is the first column of the list. It shows you the name of the package that can be updated, for example, the name of the package. Current version: The currently installed version of the package is on the right of the package name, in the second column. For example, 1.2.3. Available version: The third column shows the latest available version of the package in the repositories. For example, 1.2.4. Update Status: In the last column, the status of the update is indicated. If there is an asterisk (\\ *) next to the package name, it means that that package is marked to be updated. Description of the Package: In addition to this basic information, the list also provides a brief description of the package, which gives you an overview of the function of the package and its purpose. Exercise 3 Indicates the installed version, candidate as well as the priority of the openssh-client package\nExercise 4 How can you get information out of an official package installed or not installed?**We can use the apt show command for packages installed as for non-installed. We can also do it with dpkg but the package has to be installed → dpkg -s:\nExercise 5 Take all the information you can from the openssh-client package you have currently installed on your machine Exercise 6 Take all the information you can from the openssh-client package candidate to update on your machine Exercise 7 lists all the content regarding the current openssh-client package of your machine. It uses both dpkg and apt for this. Using dpkg:\nUsing apt:\nExercise 8 List the contents of a package without the need to install or download it.\nWe can use apt file:\napt-file list [package] Exercise 9 Simulates the installation of the openssh-client package\nExercise 10 What command informs you of the possible bugs that a certain package presents? Exercise 11 After an apt update \u0026amp; \u0026amp; apt upgrade. If you wanted to update only the packages that have openssh chain. What procedure would you follow? Take this action, with the repetitive structures offered by bash, as well as with the xargs command. Using the repetitive structure of bash, using one line:\nUsing xargs:\nExercise 12 How would you find which packages depend on a specific package? With this we see the dependencies of the direct package:\nWhile with this the indirect dependencies:\nExercise 13 How would you proceed to find the package to which a particular file belongs? We can use dpkg:\nWe can use apt-file:\nExercise 14 What procedures would you use to release the cache in terms of parcel downloads? To clean the download cache:\nTo remove downloaded packages that are no longer in use:\nOr we can do both at once with apt clean:\nExercise 15 Realizes the installation of the keyboard-configuration package by previously passing the values of the configuration parameters as environment variables. We make sure we have the package installed:\nFor this we install debconfs-utils:\nIn a file we declare the variables we want to set on the keyboard:\nAnd we provide them to the debconf:\nAnd we will see that the changes have been implemented:\nExercise 16 Reconfigure the local package of your team, adding a location that does not exist previously. Check to modify the corresponding environment variables so that the user session uses another location. If we want to store our settings for each user we will export our variables and put them in the bashrc:\nThen we will run dpkg-reconfigure and observe that we will have selected the value of the variable:\nExercise 17 Interrupts the configuration of a package and explains the steps to be taken to continue the installation Once we break into the installation of a package, to continue the installation of the package we can use the dpkg command:\nWe can use the -a parameter for all packages or specify the name to continue your installation:\nExercise 18 Explains the instruction you would use to make a complete update of all the packages in your system in a completely non-interactive way Exercise 19 Blocks the update of certain packages We marked it to avoid updates and listed the marks to check that it was not updated:\nWork with .deb files Exercise 1 Download a package without installing it, i.e. download the corresponding .deb file. It indicates different ways of doing it. We can use the apt command:\nWe can use wget and download it from the repositories of should:\nExercise 2 How can you see the content, not extract it, from what will be installed in the system of a deb package? Exercise 3 On the .deb file downloaded, use the ar. ar command to extract the content of a deb package. It indicates the procedure for viewing the contents of the package. With the package you downloaded and using the ar command, decompress the package. What information do you have after the extraction? It indicates the purpose of the extracted. To view the content:\nTo decompress the directory:\nWe have extracted 3 files from the package:\ncontrol.tar.xz: Contains scripts that dpkg uses to install the package data.tar.xz: contains the package files debian-binary: indicates the version of the package It indicates the procedure to decompress the extracted by ar from the previous point. What information does it contain?\nTo decompress files we will use tar -xJf:\nWe will find the following directories and files:\n-**control * *: This file contains metadata on the package, such as its name, version, description, dependencies and other important details. -**confiles * *: This file lists the configuration files that are part of the package and that should be treated in a special way during updates to preserve the user\u0026rsquo;s custom settings. -**pre * *: This is a pre-installation script that runs before the package is installed in the system. It may contain necessary preconfiguration actions. -**postinst * *: This is a post-installation script that runs after the package has been installed on the system. It may contain necessary post-configuration actions. -**prerm * *: This is a pre-emotion script that runs before the package is disinstalled from the system. It may contain necessary pre-elimination actions. -**dzm * *: This is a postremoval script that runs after the package has been disinstalled from the system. It may contain necessary post-elimination actions. -**md5sums * *: This file contains the MD5 control sums of the files that are installed with the package. It is used to verify file integrity during installation.\nThe data.tar.xz file contains the files and directories that will be installed in the system when the package is installed.\nWork with repositories Exercise 1 Add to your source file. Exercise 2 Configure the APT system so that the debian bullseye packages are given the highest priority and therefore the ones that are installed by default. Exercise 3 Configure the APT system so that the bullseye-backports packages have a higher priority than those of unstable. Exercise 4 How do you add the possibility of downloading i386 architecture parcel into your system. What command did you use? List of non-native architectures. How would you proceed to discard the possibility of downloading parcel from i386 architecture? To add:\nTo eliminate it:\nExercise 5 If you wanted to download a package, how can you know all available versions of that package? Exercise 6 Indicates the procedure for downloading a package from the stable repository.\nAs we have it configured the packages per priority will be downloaded from the stable repository. But we can tell him:\nExercise 7 Indicates the procedure to download a package from the buster-backports repository You have to have the repository indicated in the sources.list then you can indicate it with the -t parameter.\nExercise 8 Indicates the procedure to download a package from the Sid repository Just like the previous exercise we only indicated here Sid as we have indicated the repository in the sources.list:\nExercise 9 Indicates the procedure to download an i386 architecture package.**We indicate the name of the package followed by: i386\nWork with directories What do they do?\n/ var / lib / apt / lists /:**This directory contains lists of packages available in the configured repositories in my system. These lists are .list extension files that contain information about the available packages, their versions and the sources from which they can be downloaded. When I run apt update, I update these lists. / var / lib / dpkg / available:**This file contains information about the installed packages and their versions. It is used by my dpkg package management system to keep a record of the packages I have installed and their states. It provides information on available packages and their dependencies. / var / lib / dpkg / status:**This file also contains information about the packages installed in my system, but provides a more detailed view than / var / lib / dpkg / available. It contains information on the status of the packages, as if they are installed, uninstalled or if there are problems with their configuration. / var / cache / apt / files /:**This directory stores the package files that I download before they are installed in my system. When I run commands like apt-get install or apt-get upgrade, the packages are downloaded first in this directory and then installed. Keeping a copy of the packages downloaded in this directory can be useful if you want to reinstall or uninstall a package without redownloading it from the repositories, which helps save time and bandwidth. ","date":"November 29, 2023","hero":"/images/sistemas/ejercicios_de_manejo_de_modulos/ejercicios_de_manejo_de_modulos.jpg","permalink":"https://www.javiercd.es/en/posts/sistemas/comandos_linux/ejercicios_gestion_de_paqueteria/ejercicios_gestion_de_paqueteria/","summary":"\u003ch3 id=\"work-with-apt-aptitude-dpkg\"\u003eWork with apt, aptitude, dpkg\u003c/h3\u003e\n\u003ch2 id=\"exercise-1-what-actions-i-get-when-performing-apt-update-and-apt-upgrade-explain-in-detail\"\u003eExercise 1 What actions I get when performing apt update and apt upgrade. Explain in detail.\u003c/h2\u003e\n\u003cp\u003eThe apt update command is the first fundamental step in the package update. It takes the following actions:\u003c/p\u003e\n\u003cp\u003e-**Recovers Remote Metadata:**apt update communicates with online software repositories and recovers metadata related to available packages. These metadata include information on the latest versions of the packages, their dependencies and other essential information.\n-\u003cstrong\u003eUpdate the Local Metadata Copy:\u003c/strong\u003e Then apt reconstructs and updates the local copy of these metadata. This allows the system to quickly access information about the packages without having to download it repeatedly.\u003c/p\u003e","tags":["Sistemas","ISO","ASO","Linux"],"title":"Paid management exercises"},{"categories":null,"contents":"Creation of the LVM scheme We installed the LVM2 package\nNow we\u0026rsquo;ll create the partitions on the second disk:\nWe create the group of volumes:\nWe create the root and home volumes:\nThe partitions must have the following format:\n-vdb2 etx4\nFJCD-vg-home ext4 -FJCD-vg-raiz ext4\nWe would have to format the efi:\nSo would our partition scheme:\nCopy the partition content Now let\u0026rsquo;s ride the partitions:\nNow let\u0026rsquo;s copy the partitions, start with the boot:\nWe continue with the efi:\nWe continue with the root:\nWe end with home:\nInstall the grub on the second disk We can use it to change the / etc / fstab file of the second disk:\nI leave you on video the live proof that the system starts by removing the first disco. https: / / youtu.be / zAlMqKIaLCQ\n","date":"November 29, 2023","hero":"/images/sistemas/ejercicios_de_manejo_de_modulos/ejercicios_de_manejo_de_modulos.jpg","permalink":"https://www.javiercd.es/en/posts/sistemas/migraciones/transformacion_instancia_cloud/transformacion_instancia_cloud/","summary":"\u003ch2 id=\"creation-of-the-lvm-scheme\"\u003eCreation of the LVM scheme\u003c/h2\u003e\n\u003cp\u003eWe installed the LVM2 package\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/migraciones/transformacion_instancia_cloud/img/Aspose.Words.1d1b77d6-c571-465c-8927-e55061548549.001.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eNow we\u0026rsquo;ll create the partitions on the second disk:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/migraciones/transformacion_instancia_cloud/img/Aspose.Words.1d1b77d6-c571-465c-8927-e55061548549.002.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eWe create the group of volumes:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/migraciones/transformacion_instancia_cloud/img/Aspose.Words.1d1b77d6-c571-465c-8927-e55061548549.003.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eWe create the root and home volumes:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/migraciones/transformacion_instancia_cloud/img/Aspose.Words.1d1b77d6-c571-465c-8927-e55061548549.004.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eThe partitions must have the following format:\u003c/p\u003e\n\u003cp\u003e-vdb2 etx4\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFJCD-vg-home ext4\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e-FJCD-vg-raiz ext4\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/migraciones/transformacion_instancia_cloud/img/Aspose.Words.1d1b77d6-c571-465c-8927-e55061548549.005.jpeg\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eWe would have to format the efi:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/migraciones/transformacion_instancia_cloud/img/Aspose.Words.1d1b77d6-c571-465c-8927-e55061548549.006.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eSo would our partition scheme:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/migraciones/transformacion_instancia_cloud/img/Aspose.Words.1d1b77d6-c571-465c-8927-e55061548549.007.jpeg\" alt=\"\"\u003e\u003c/p\u003e\n\u003ch2 id=\"copy-the-partition-content\"\u003eCopy the partition content\u003c/h2\u003e\n\u003cp\u003eNow let\u0026rsquo;s ride the partitions:\u003c/p\u003e","tags":["Sistemas","ISO","ASO","Linux"],"title":"Transformation instance cloud"},{"categories":null,"contents":"LAMP Stack Installation in Debian 12 If you are using Debian 12, follow the steps below to install a full LAMP web server on Debian GNU/Linux 12 \u0026ldquo;Bookworm\u0026rdquo; (Stable). Note that Debian 12 includes PHP 8.2 in its repositories, which may differ from previous Debian versions.\nWeb Server Installation The first component of a LAMP server is Apache, represented by the \u0026ldquo;A.\u0026rdquo; To install Apache, run the following commands:\nsudo apt install apache2 sudo systemctl enable apache2 \u0026amp;\u0026amp; sudo systemctl start apache2 With these commands, you will have installed and activated the Apache web server. You can verify its functionality by entering the server\u0026rsquo;s IP address in your favorite browser; it should display the default Apache home page.\nPHP Installation You will likely need to install specific PHP packages, called modules, depending on the database you use. Install them with the following command:\nsudo apt install php8.2 libapache2-mod-php8.2 php8.2-mysql If you install a CMS like WordPress, Moodle, or Prestashop, additional packages may be required for proper operation. These applications usually indicate which packages need to be installed.\nTo apply the changes and activate PHP, restart Apache with the following command:\nsudo systemctl restart apache2 MariaDB Installation and Configuration You can use either MariaDB or MySQL. In this case, we will use MariaDB:\nsudo apt install mariadb-server sudo systemctl enable mysql \u0026amp;\u0026amp; sudo systemctl start mysql During installation, you will be prompted to set a password for the MySQL root user. Once the installation is complete, run the following command to secure your MariaDB installation:\nsudo mysql_secure_installation Follow the instructions to enhance security, such as setting the root user password, removing anonymous users, and deleting test databases.\nAfter completing these steps, you will have configured MariaDB and can connect through the terminal:\nsudo mysql -u root -p Enter password: Welcome to the MariaDB monitor. Commands end with ; or \\g. Your MariaDB connection id is 32 Server version: 10.11.4-MariaDB-1~deb12u1 Debian 12 Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others. Type \u0026#39;help;\u0026#39; or \u0026#39;\\h\u0026#39; for help. Type \u0026#39;\\c\u0026#39; to clear the current input statement. MariaDB [(none)]\u0026gt; With this, you now have a fully installed LAMP stack on Debian 12.\n","date":"October 28, 2023","hero":"/images/iweb/lamp/portada_lamp.png","permalink":"https://www.javiercd.es/en/posts/iaw/lamp/lamp/","summary":"\u003ch2 id=\"lamp-stack-installation-in-debian-12\"\u003eLAMP Stack Installation in Debian 12\u003c/h2\u003e\n\u003cp\u003eIf you are using Debian 12, follow the steps below to install a full LAMP web server on Debian GNU/Linux 12 \u0026ldquo;Bookworm\u0026rdquo; (Stable). Note that Debian 12 includes PHP 8.2 in its repositories, which may differ from previous Debian versions.\u003c/p\u003e\n\u003ch3 id=\"web-server-installation\"\u003eWeb Server Installation\u003c/h3\u003e\n\u003cp\u003eThe first component of a LAMP server is Apache, represented by the \u0026ldquo;A.\u0026rdquo; To install Apache, run the following commands:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo apt install apache2\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo systemctl enable apache2 \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e sudo systemctl start apache2\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWith these commands, you will have installed and activated the Apache web server. You can verify its functionality by entering the server\u0026rsquo;s IP address in your favorite browser; it should display the default Apache home page.\u003c/p\u003e","tags":["WordPress","CMS","IWEB","AW","Debian","LAMP"],"title":"LAMP Stack Installation in Debian 12"},{"categories":null,"contents":"LEMP Stack Installation in Debian 12 with PHP 8 In this guide, we will go through the steps to install a LEMP stack (Linux, Nginx, MariaDB, and PHP) on a Debian 12 server. The configuration includes PHP 8.2 as the main version. The LEMP stack is essential for hosting PHP-based websites and applications, such as WordPress or other dynamic applications. Follow the detailed steps below to configure your LEMP server with PHP 8.2.\nPrerequisites Before starting, ensure you meet the following requirements:\nA Linux server. A non-root user with sudo privileges. A fully qualified domain name (FQDN) that points to the server. First, update and upgrade the system packages:\nsudo apt update \u0026amp;\u0026amp; sudo apt upgrade -y Additionally, install the following essential packages:\nsudo apt install wget nano unzip tar -y PHP Installation Debian 12 includes PHP 8.2 by default. Install it using the following command:\nsudo apt install php-fpm php-cli php-mysql php-mbstring php-xml php-gd -y This installs PHP along with MySQL, CLI, GD, Mbstring, and XML extensions. You can install additional extensions based on your requirements. To verify the PHP installation, run:\nphp --version MariaDB Installation You can use either MariaDB or MySQL. In this case, we will use MariaDB:\nsudo apt install mariadb-server -y sudo systemctl enable mysql \u0026amp;\u0026amp; sudo systemctl start mysql During installation, you will be prompted to set a password for the MySQL root user. Once installation is complete, secure your MariaDB installation with:\nsudo mysql_secure_installation Follow the instructions to enhance security, such as setting the root user password, removing anonymous users, and deleting test databases.\nTo verify MariaDB, log in via the terminal:\nsudo mysql -u root -p Enter password: Nginx Installation To install Nginx, run:\nsudo apt install nginx -y Once Nginx is installed, configure PHP-FPM to use a TCP socket.\nOpen the PHP-FPM configuration file:\nsudo nano /etc/php/8.2/fpm/pool.d/www.conf Find the following line and comment it out:\n;listen = /run/php/php8.2-fpm.sock Then, replace it with:\nlisten = 127.0.0.1:9000 Save and close the file.\nNow, configure Nginx to work with PHP-FPM by editing the default server block:\nsudo nano /etc/nginx/sites-available/default Modify the file as follows:\nserver { listen 80 default_server; listen [::]:80 default_server; root /var/www/html; index index.html index.php index.htm index.nginx-debian.html; server_name _; location / { try_files $uri $uri/ =404; } location ~ \\.php$ { include snippets/fastcgi-php.conf; fastcgi_pass 127.0.0.1:9000; include fastcgi_params; } } Save the changes and exit.\nTesting Configuration and Restarting Services Check for syntax errors in Nginx:\nsudo nginx -t Check PHP-FPM configuration:\nsudo php-fpm8.2 -t If no errors are found, restart both services:\nsudo systemctl restart php8.2-fpm nginx Verifying PHP Processing Create a test PHP file to confirm PHP processing:\nsudo nano /var/www/html/info.php Add the following content:\n\u0026lt;?php phpinfo(); ?\u0026gt; Save and close the file. You can access it in your browser at:\nhttp://your_domain_or_IP/info.php If PHP information is displayed, your LEMP stack is correctly installed.\nWith this, you now have a fully installed and configured LEMP stack on Debian 12.\n","date":"October 28, 2023","hero":"/images/iweb/lamp/portada_lemp.png","permalink":"https://www.javiercd.es/en/posts/iaw/lemp/lemp/","summary":"\u003ch2 id=\"lemp-stack-installation-in-debian-12-with-php-8\"\u003eLEMP Stack Installation in Debian 12 with PHP 8\u003c/h2\u003e\n\u003cp\u003eIn this guide, we will go through the steps to install a LEMP stack (Linux, Nginx, MariaDB, and PHP) on a Debian 12 server. The configuration includes PHP 8.2 as the main version. The LEMP stack is essential for hosting PHP-based websites and applications, such as WordPress or other dynamic applications. Follow the detailed steps below to configure your LEMP server with PHP 8.2.\u003c/p\u003e","tags":["WordPress","CMS","IWEB","AW","Debian","LEMP"],"title":"LEMP Stack Installation in Debian 12 with PHP 8"},{"categories":null,"contents":"WordPress installation in Debian 12 with LAMP PHP-8 battery WordPress is a very popular open source content management system (CMS) that is used to create and manage websites and blogs. It was first released in 2003 and has since won a wide user base and an active community of developers and designers.\nPreparation Before we start installing WordPress, we will make clear in a list what the ecosystem of our server is so everything works out properly:\nFull LAMP server: Apache + MySQL (or MariaDB) and PHP 8.x. Set up a VirtualHost for our domain. Develop the database with a user. If you don\u0026rsquo;t have the LAMP stack installed, you can do it in this link.\nCreation of VirtualHost We copy Apache\u0026rsquo;s default configuration file and rename it to wordpress.conf.\njaviercruces@IWEB:/etc/apache2/sites-available$ sudo cp 000-default.conf wordpress.conf We set the virtual site, remember to change the ServerName and DocumentRoot.\n\u0026lt;VirtualHost *:80\u0026gt; # The ServerName directive sets the request scheme, hostname and port that # the server uses to identify itself. This is used when creating # redirection URLs. In the context of virtual hosts, the ServerName # specifies what hostname must appear in the request\u0026#39;s Host: header to # match this virtual host. For the default virtual host (this file) this # value is not decisive as it is used as a last resort host regardless. # However, you must set it for any further virtual host explicitly. ServerName wordpress.fjcd.es ServerAdmin webmaster@localhost DocumentRoot /var/www/wordpress # Available loglevels: trace8, ..., trace1, debug, info, notice, warn, # error, crit, alert, emerg. # It is also possible to configure the loglevel for particular # modules, e.g. # LogLevel info ssl:warn ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined # For most configuration files from conf-available/, which are # enabled or disabled at a global level, it is possible to # include a line for only one particular virtual host. For example, the # following line enables the CGI configuration for this host only # after it has been globally disabled with \u0026#34;a2disconf\u0026#34;. # Include conf-available/serve-cgi-bin.conf \u0026lt;/VirtualHost\u0026gt; Enable the virtual site wordpress.conf.\njaviercruces@IWEB:/etc/apache2/sites-available$ sudo a2ensite wordpress.conf Enabling site wordpress. To activate the new configuration, you need to run: systemctl reload apache2 Reload Apache to apply the new configuration.\njaviercruces@IWEB:/etc/apache2/sites-available$ sudo systemctl reload apache2 To access this VirtualHost, on the machine where you want to access WordPress, as there is no DNS server, remember to add the IP of your server and the ServerName to the hosts file.\njaviercruces@HPOMEN15:~$ cat /etc/hosts # Añade la IP de tu servidor y el ServerName correspondiente (wordpress.fjcd.es) # Ponlo al final del fichero y no modifiques las líneas existentes en tu fichero 192.168.125.27 wordpress.fjcd.es Creating the database with a user I recommend that you note the data entered below as you will need them later.\nWe connect to the database:\njaviercruces@IWEB:~$ sudo mysql -u root -p Enter password: Welcome to the MariaDB monitor. Commands end with ; or \\g. Your MariaDB connection id is 31 Server version: 10.11.4-MariaDB-1~deb12u1 Debian 12 Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others. Type \u0026#39;help;\u0026#39; or \u0026#39;\\h\u0026#39; for help. Type \u0026#39;\\c\u0026#39; to clear the current input statement. Create a database:\nMariaDB [(none)]\u0026gt; CREATE DATABASE fjcd_wordpress; Query OK, 1 row affected (0.001 sec) Create the user for the database:\nMariaDB [(none)]\u0026gt; CREATE USER \u0026#39;fjcd-wordpress\u0026#39;@\u0026#39;localhost\u0026#39; IDENTIFIED BY \u0026#39;tu_contraseña\u0026#39;; Query OK, 0 rows affected (0.013 sec) Grant privileges on the database:\nMariaDB [(none)]\u0026gt; GRANT ALL PRIVILEGES ON fjcd_wordpress.* TO \u0026#39;fjcd-wordpress\u0026#39;@\u0026#39;localhost\u0026#39;; Query OK, 0 rows affected (0.010 sec) Update the privileges:\nMariaDB [(none)]\u0026gt; FLUSH PRIVILEGES; Query OK, 0 rows affected (0.000 sec) Exit MySQL:\nMariaDB [(none)]\u0026gt; EXIT; Bye WordPress installation The first thing we will do is download WordPress. We can do this using wget, or if we have it downloaded to our host, we can transfer it using SCP or FTP.\njaviercruces@IWEB:~$ wget https://wordpress.org/latest.tar.gz --2023-10-27 12:33:17-- https://wordpress.org/latest.tar.gz Resolviendo wordpress.org (wordpress.org)... 198.143.164.252 Conectando con wordpress.org (wordpress.org)[198.143.164.252]:443... conectado. Petición HTTP enviada, esperando respuesta... 200 OK Longitud: 23465047 (22M) [application/octet-stream] Grabando a: «latest.tar.gz» latest.tar.gz 100%[=====================================\u0026gt;] 22,38M 14,8MB/s en 1,5s 2023-10-27 12:33:19 (14,8 MB/s) - «latest.tar.gz» guardado [23465047/23465047] Then, we\u0026rsquo;ll uncompress the file and copy the files into the DocumentRoot of our VirtualHost:\njaviercruces@IWEB:~$ sudo mkdir /var/www/wordpress/ javiercruces@IWEB:~$ sudo tar -zxf latest.tar.gz -C /var/www/ We navigate to the WordPress directory to set the correct permissions:\njaviercruces@IWEB:~$ cd /var/www/ Change the user and group:\njaviercruces@IWEB:/var/www$ sudo chown -R www-data:www-data wordpress/ Once all this is set up, we can now access our browser and go to our domain to start installing WordPress.\nWeb installation We access the URL we have set in the ServerName of our virtual site and also set in the hosts file.\nThe first thing is to select the language:\nBelow is a brief explanation of what the CMS WordPress is:\nYou will now need to enter the user data and the name of the database you created earlier:\nOnce the correct data is entered, we will continue with the installation:\nNow you must enter the data for your WordPress site, such as the site name and the creation of an administrator user so that you can later access wp-admin:\nReady! You\u0026rsquo;ve already installed WordPress.\nNow, to access the WordPress management panel, you must enter the following URL into your browser and log in with the user you created:\nReady! This is how you see the WordPress management panel:\n","date":"October 28, 2023","hero":"/images/iweb/wordpress/wordpress_lamp.png","permalink":"https://www.javiercd.es/en/posts/iaw/wordpress/instalacion_wordpress/","summary":"\u003ch1 id=\"wordpress-installation-in-debian-12-with-lamp-php-8-battery\"\u003eWordPress installation in Debian 12 with LAMP PHP-8 battery\u003c/h1\u003e\n\u003cp\u003eWordPress is a very popular open source content management system (CMS) that is used to create and manage websites and blogs. It was first released in 2003 and has since won a wide user base and an active community of developers and designers.\u003c/p\u003e\n\u003ch3 id=\"preparation\"\u003ePreparation\u003c/h3\u003e\n\u003cp\u003eBefore we start installing WordPress, we will make clear in a list what the ecosystem of our server is so everything works out properly:\u003c/p\u003e","tags":["WordPress","CMS","IWEB","AW","debian"],"title":"WordPress installation in Debian 12 with LAMP PHP-8"},{"categories":null,"contents":"#WordPress installation in Debian 12 with PHP-8 LEMP battery\nWordPress is a very popular open source content management system (CMS) that is used to create and manage websites and blogs. It was first released in 2003 and has since won a wide user base and an active community of developers and designers.\nPrevious requirements Linux server: You must have a server that runs Linux, the guide is designed for Debian 12. User with superuser permissions: You must have access to a user with sudo privileges on the server in order to perform the installation and configuration tasks. Full Domain Name (FQDN): If you want to access your WordPress site through a custom domain, make sure you have a full domain name (FQDN) set up and pointed to the server. Internet access: You need Internet access to download packages and make updates during the installation process. Make sure you meet all these requirements before you start installing WordPress on your server.\nIf you do not have the LEMP battery, you can follow it in this link.\nCreating a VirtualHost in Nginx The creation of a VirtualHost in Nginx allows you to configure multiple websites on a single server. Follow these steps to create a VirtualHost in Nginx.\nCopy the default Nginx configuration file to use as an example and name it as you like. In this example, we will name it \u0026ldquo;wordpress,\u0026rdquo; as we will install it however the name is merely informative.\njaviercruces@IWEB:~$ sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/wordpress We will edit the content of it, for this purpose:\njaviercruces@IWEB:~$ sudo nano /etc/nginx/sites-available/wordpress Here I leave the example of my site configuration file, make sure you define the server name (your domain) and the site root directory.\nserver { listen 80; root /var/www/wordpress; # Cambia esta linea por la ubicación del directorio root de tu wordpress index index.php index.html index.htm; server_name wordpress.fjcd.es; # Cambia esta linea y pon el FQDN , a traves de este accederás a tu wordpress client_max_body_size 500M; location / { try_files $uri $uri/ /index.php?$args; } location = /favicon.ico { log_not_found off; access_log off; } location ~* \\.(js|css|png|jpg|jpeg|gif|ico)$ { expires max; log_not_found off; } location = /robots.txt { allow all; log_not_found off; access_log off; } location ~ \\.php$ { include snippets/fastcgi-php.conf; fastcgi_pass 127.0.0.1:9000; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; } } To make this configuration active we will create a symbolic link\njaviercruces@IWEB:~$ sudo ln -s /etc/nginx/sites-available/wordpress /etc/nginx/sites-enabled/ Now let\u0026rsquo;s restart nginx, so that the changes are applied:\njaviercruces@IWEB:~$ sudo systemctl reload nginx To access this VirtualHost, in the machine where you go to access the wordpress, by having no dns server remember to put in the host file the ip of your server with the Server:\njaviercruces@HPOMEN15:~$ cat /etc/hosts #Añade la IP de tu servidor y el ServerName correspondiente (wordpress.fjcd.es) #Ponlo al final del fichero y no modifiques las lineas existentes en tu fichero 192.168.125.27 wordpress.fjcd.es Creating the database with a user. I recommend that you point the data entered below as you need them later. We connect to the database:\njaviercruces@IWEB:~$ sudo mysql -u root -p Enter password: Welcome to the MariaDB monitor. Commands end with ; or \\g. Your MariaDB connection id is 31 Server version: 10.11.4-MariaDB-1~deb12u1 Debian 12 Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others. Type \u0026#39;help;\u0026#39; or \u0026#39;\\h\u0026#39; for help. Type \u0026#39;\\c\u0026#39; to clear the current input statement. #Creamos una base de datos : MariaDB [(none)]\u0026gt; CREATE DATABASE fjcd_wordpress; Query OK, 1 row affected (0,001 sec) #Nos creamos el usuario para nuestra base de datos MariaDB [(none)]\u0026gt; CREATE USER \u0026#39;fjcd-wordpress\u0026#39;@\u0026#39;localhost\u0026#39; IDENTIFIED BY \u0026#39;tu_contraseña\u0026#39;; Query OK, 0 rows affected (0,013 sec) #Le damos permisos sobre la base de datos que hemos creado: MariaDB [(none)]\u0026gt; GRANT ALL PRIVILEGES ON fjcd_wordpress.* TO \u0026#39;fjcd-wordpress\u0026#39;@\u0026#39;localhost\u0026#39;; Query OK, 0 rows affected (0,010 sec) #Actualizamos los permisos: MariaDB [(none)]\u0026gt; FLUSH PRIVILEGES; Query OK, 0 rows affected (0,000 sec) #Nos salimos de la CLI de mysql MariaDB [(none)]\u0026gt; EXIT; Bye WordPress installation The first thing we will do is download WordPress, we can do it using wget or if we have it downloaded to our host pass it by using SCP or FTP.\njaviercruces@IWEB:~$ wget https://wordpress.org/latest.tar.gz --2023-10-27 12:33:17-- https://wordpress.org/latest.tar.gz Resolviendo wordpress.org (wordpress.org)... 198.143.164.252 Conectando con wordpress.org (wordpress.org)[198.143.164.252]:443... conectado. Petición HTTP enviada, esperando respuesta... 200 OK Longitud: 23465047 (22M) [application/octet-stream] Grabando a: «latest.tar.gz» latest.tar.gz 100%[=====================================\u0026gt;] 22,38M 14,8MB/s en 1,5s 2023-10-27 12:33:19 (14,8 MB/s) - «latest.tar.gz» guardado [23465047/23465047] And we\u0026rsquo;ll uncompress the file and copy the files within the \u0026lsquo;DocumentRoot\u0026rsquo; of our \u0026lsquo;VirtualHost\u0026rsquo;:\njaviercruces@IWEB:~$ sudo mkdir /var/www/wordpress/ javiercruces@IWEB:~$ sudo tar -zxf latest.tar.gz -C /var/www/ We enter the * * WordPress * * route to make the permit scheme correctly:\njaviercruces@IWEB:~$ cd /var/www/ We change user and groups:\njaviercruces@IWEB:/var/www$ sudo chown -R www-data:www-data wordpress/ And we put the right permissions to WordPress:\nfind . -type d -exec chmod 755 {} \\; find . -type f -exec chmod 644 {} \\; Once we have set all this up, we can now access our browser to our domain to start installing WordPress.\nWeb installation We access the url we have put in the ServerName of our virtual site and then set up in the hosts file.\nThe first thing is to select the language:\n!! Untitled\nBelow is a brief explanation of what the CMS WordPress is:\nYou will now need to enter the user data and the name of the database you have created before.\nOnce the correct data is entered we will continue with the installation:\nNow you must enter the data for your wordpress, such as the name of the site as well as the creation of an administrator user so that you can then access wp-admin:\nReady! You\u0026rsquo;ve already installed wordpress\nNow to access the wordpress management panel you must enter the following url into your browser and log in with the user you have created:\nReady! This is how you see the wardpress management panel:\n","date":"October 28, 2023","hero":"/images/iweb/wordpress/wordpress_lemp.png","permalink":"https://www.javiercd.es/en/posts/iaw/wordpress_lemp/instalacion_wordpress_lemp/","summary":"\u003cp\u003e#WordPress installation in Debian 12 with PHP-8 LEMP battery\u003c/p\u003e\n\u003cp\u003eWordPress is a very popular open source content management system (CMS) that is used to create and manage websites and blogs. It was first released in 2003 and has since won a wide user base and an active community of developers and designers.\u003c/p\u003e\n\u003ch3 id=\"previous-requirements\"\u003ePrevious requirements\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eLinux server:\u003c/strong\u003e You must have a server that runs Linux, the guide is designed for Debian 12.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eUser with superuser permissions:\u003c/strong\u003e You must have access to a user with sudo privileges on the server in order to perform the installation and configuration tasks.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eFull Domain Name (FQDN):\u003c/strong\u003e If you want to access your WordPress site through a custom domain, make sure you have a full domain name (FQDN) set up and pointed to the server.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eInternet access:\u003c/strong\u003e You need Internet access to download packages and make updates during the installation process.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMake sure you meet all these requirements before you start installing WordPress on your server.\u003c/p\u003e","tags":["WordPress","CMS","IWEB","AW","debian"],"title":"WordPress installation in Debian 12 with PHP-8 LEMP battery"},{"categories":null,"contents":"Throughout this guide, we will explore the configuration of a basic scenario using IPv6 networks on both Linux and Cisco devices. We will also address the configuration of an Apache server using IPv6 capabilities.\nLinux IPV6 Self-Configuration Connect two Linux machines to the same switch and check that they have IPv6 connectivity using the local link address.\nWe\u0026rsquo;ll check the IPV6 that the different pcs have. PC1 has - \u0026gt; fe80::ef7:42ff:fe92:0/64\nWhile PC2 has - \u0026gt; fe80:: e5f: 61ff: feee: 0 / 64\nThese two addresses are called local link and are automatically assigned to each network interface. This type will only allow us to communicate with the devices of our local network and have the prefix - \u0026gt; FE80:: / 10\nIf we do a ping from one of these to another with the local link address we can communicate:\nSLAAC Add a third Linux machine to the same network and connect it as a router so that it gives global IPv6 addresses to the other two using SLAAC. Do not forget to install RADVD. Check that they have connectivity.\nThe first thing we will do is set the network interface per ipv6 of our router in this case I will assign you the prefix 3333: db7::\nWe calculate the fixed part of our address:\nR1 - \u0026gt; 0c: 01: 30: a0: 00: 00 - \u0026gt; 0c: 01: 30: ff: faith: a0: 00: 00 - \u0026gt; 0E: 01: 30: FF: FE: A0: 00: 00\nWe edit the interfaces and apply the configuration of our network card:\nWe restarted the service and would have a global address:\nSLAAC (Stateless Address Self-reliability) is a unique configuration mechanism for IPV6. There is no equivalent in IPV4. Which allows the nodes in our network to be automatically configured.\nFrom the local link address that all hosts have, by means of the neghbour discovery protocol requests if there is any router within the local network will provide you with the network configuration parameters\nThe first thing we will do to configure SLAAC will be to install the radvd package:\nIf we look at the state of the demon this will tell us that you do not find your configuration file:\nSo we will generate you one by indicating the interface that is going to distribute directions and we will also tell you the behavior that you will have on our network:\n-**MinRtrAdvInterval:**Indicates the minimum time in seconds by which the router will send a message in seconds. -**MaxRtrAdvInterval:**Indicates the maximum time in second by which the router will send a message.\n-**AdvSendAdvert:**Indicates whether or not the interface sent warnings. -**AdvManagedFlag:**Indicates whether we want the service to use DHCPv6 (on) or not (off). -**Prefix:**Indicates the network prefix using SLAAC to assign addresses. -**AdvValidLifetime:**Indicates time in seconds that an IPV6 address will be valid. -**AdvPreferenredLifetime:**Indicates time in seconds that an address generated from the prefix will be preferred instead of other directions.\nOnce done we restart the service and the demon will start setting up our customers:\nWe will also have to set the forwarding bit for ipv6 in our router, as with ipv4 we edit the / etc / sysctl.conf file:\nSLAAC messages\nWe can see how the PC1 has been configured using SLAAC:\nThe PC2 has also been configured:\nWe will study the messages that have intervened in this SLAAC configuration, if we number them as in this Wireshark capture:\n-Router application(RS) (It does not appear in the capture): The PC sends an RS message to all routers to indicate that it needs an RA, this message is sent if it does not receive any RA after a while. -Router Advertising(RA): Once the router receives the RS or periodically sends an RA in which the network prefix and its length are included. The RA message is sent to the IPv6 address of all nodes, FF02:: 1, with the link-local address of the router as the IPv6 address of origin. (N0 6 and 12). -Multicast Listar Report Message v2: Indicates that the x device has started a listening session for multicast traffic (No 7 and 9). -Needbor Application(NS): It is used to know the MAC address of a device in your network, it is similar to the ARP protocol. (No 10,11,613). -Neighbbor Advertising(NA): It is the response message of an NS (No 614).\nOnce the client has received an RA, it then sets its IPV6 address, with a 64-bit network prefix but needs an IID (Interface Identifier).\nThere are two ways that customers can create their own unique IID:\n-**EUI-64:**via the EUI-64 process, PC1 creates an IID using its 48-bit MAC address. -**Random generation:**The 64-bit IID can be a random number generated by the client operating system.\nSince SLAAC is a state-of-the-art process, for customers to use this recently created IPv6 address, you must verify that it is unique. The customer will send an NS with its own address as the target IPv6 address. If no other device responds with a neighbor\u0026rsquo;s ad message, the address is unique and can be used by the customer. If it receives an NA, the address is not unique, and the operating system must determine a new interface ID to use.\nThis process is part of the detection of ICMPv6 neighbors and is known as \u0026ldquo;detection of duplicate addresses (DAS).\u0026rdquo;\nThis image explains the configuration of an interface by SLAAC. Now let\u0026rsquo;s check that different customers have connectivity between themselves:\nPC1 - \u0026gt; 3333:db7::ef7:42ff:fe92:0 PC2 - \u0026gt; 3333:db7::e5f:61ff:feee:0 R1 - \u0026gt; 3333:db7::e01:30ff:fea0:0\nRouter 1:\nPC2:\nWe have to keep in mind that these address \u0026ldquo;concessions\u0026rdquo; are not stored anywhere, i.e. on the server we do not store the settings that the service has performed.\nDHCPv6 with SLAAC Change the settings to use DHCPv6 instead of SLAAC by also sending DNS servers. Check that the machines have connectivity.\nFor this we install the DHCPv6 server, the package is the same for ipv4:\nWe edit the configuration file for IPV6 - \u0026gt; sudo nano /etc/dhcp/dhcpd6.conf:\nIn the /etc/default/isch-dhcp-server file we will indicate not only the interface we want to distribute addresses if we will not also specify that the server will work for IPV6:\nWe restart the service and check that it is working with the parameters we have assigned to you in the set up:\nLet\u0026rsquo;s check that customers were configured using ipv6, for which the configuration on the network interfaces is quite similar to IPV4:\nWe restart the networking.service and get the DHCP configuration on the card:\nWe can also see the concessions file on the server on the following route /var/lib/dhcp/dhcpd6.leases:\nI haven\u0026rsquo;t mentioned it before, but in order for the configuration to occur, the client will obtain the parameters we have configured by DHCPv6, we will have to put this parameter to ON in the SLAAC configuration file:\nAs we can see the only parameter we have specified on the DHCP server to be the google DNS has been correctly configured on our client:\nDHCPv6 messages with SLAAC We just set up SLAAC and DHCPv6 without status, this means that:\nUse SLAAC to get a unique global IPV6 address, in addition to the link door. Use the status-free DHCPv6 server for the rest of our network configuration parameters. That is, we have set the second option in the following image:\n{\u0026lt; alert type = \u0026ldquo;info\u0026rdquo; \u0026gt;} The catches you will see below are NOT cut because they look pixelated. The communication messages are in order. {\u0026lt; / alert \u0026gt;}\nIf we look at the capture of Wireshark and compare it to the unique configuration of SLAAC:\nSLAAC operations:\nWe can see that the PC1 has requested an RS, to all the routers on the network (Multicast) R1 responds to PC1 with an RA (Indicates if you need to communicate with a DHCPv6 with or without a state) NS, to check that the assigned address is not duplicated DHCPv6 operations:\nRequest all DHCPv6 servers on the network (Multicast at ff02:: 1: 2) includes a CID client identifier. Warning: It is the DHCPv6 server response to a request, this includes the appropriate configuration options, including an IPv6. It also includes a CID and an XID (Id transaction). Request: The customer sends this message to all DHCPv6 servers to indicate that he wants the parameters offered in the Adverstide. They also include CID and XID. Reply: The DHCPv6 server responds and confirms that the address has been assigned as well as all additional configuration parameters. They also include CID and XID. Here I leave you an image in which we observe the order of the messages we have received and a brief description of it, and it also tells us if the messages are unicast or multicast:\nApache on IPV6 For Apache versions above 2.X have support for IPV6 enabled by default so when installing the service we will already be listening for this protocol without any additional configuration in the service.\nWe can check if by installing it our server is listening through that port:\nIn the event that we create a virtualhost we can specify how we want you to work whether using both IPV6 and IPV4 protocols or just one of them. We see that ssh also uses ipv6 by default.\nAccess to the web server from within the network We will access from the machines of our network in my case I have mounted it on the router as it is the only one who has Internet access in this scenario.\nI will connect to the one using the global address but we could use the local without problem as we belong to the same local network.\nAccess from PC2:\nAccess to the web server from outside the network For this we must configure R1 and \u0026lsquo;PC3\u0026rsquo; on the same network using IPV6:\nPC3:\nR1:\nWe will ask PC1 from PC3 to be outside that local network, as we see no need to do NAT.\nI can even ping a host from another network:\nSi analizamos estas peticiones con Wireshark podemos ver que en ningún momento se produce\nNAT:\nOutside the network:\nWithin the network:\nOf course a host of our local network can access the web server:\nCISCO Setting up a swan router in IPV6 The first thing we will do is calculate the IPV6 address that corresponds to the MACS:\nF 0/0 –\u0026gt; CA:01:6C:FA:00:00 –\u0026gt; CA:01:6C:FF:FE:FA:00:00 –\u0026gt; C801:6CFF:FEFA:0\nF 1/0 –\u0026gt; CA:01:6C:FA:00:1C-→ CA:01:6C:FF:FE:FA:00:1C –\u0026gt; C801:6CFF:FEFA:001C\nSo that our router is configured using SLACC and we do not have to do this manually we will enter the following commands for each of the interfaces that we want to be configured by SLAAC:\nWe will also have to indicate no shut for the interface to be lifted.\nWith the following command we will check that our router has been set up automatically using SLAAC:\nWith the local link addresses we will have connectivity with the router:\nSLAAC Now let\u0026rsquo;s get the router to configure the customers using SLAAC.\nWe will set a global address to our router in the interface that gives the network that we want to give this service, with the network prefix: 3333: db7:\nWe will use EUI-64 to configure our interfaces:\nFastEthernet 0/0 –\u0026gt; 3333::C801:6CFF:FEFA:0/64\nFastEthernet 1/0 –\u0026gt; 2222::C801:6CFF:FEFA:1C/64\nWe checked the IPV6 addresses have been \u0026ldquo;generated\u0026rdquo; correctly:\nFor the router to configure us to customers we will need to enter the following command this, will cause our router to command RA and respond to RS requests:\nOnce this has been done our customers will have been set up correctly:\nPC1:\nPC2:\nThe messages that have been produced when setting up the customers:\nRouter application(RS): The PC sends an RS message to all routers to indicate that it needs an RA, this message is sent if it does not receive any RA after a while.\nRouter Advertising(RA): Once the router receives the RS or regularly sends an RA in which the network prefix and its length are included. In case the router responds to a RS, it sends a specific RA to the host who requested it. In case it is a periodic RA message it is sent to the IPv6 address of multidissemination of all nodes, FF02:: 1, with the link-local address of the router as the original IPv6 address.\nNeedbor Application(NS): It is used to know the MAC direction of a device in your network, it is similar to the ARP protocol.\nNeighbbor Advertising(NA): It is the response message of an NS.\nDHCPv6 with SLAAC Configure a status DHCPv6 server is similar to setting a status-free server. The most important difference is that a state server also includes IPv6 address information similar to a DHCPv4 server.\nThe first thing we\u0026rsquo;ll have to do will be to enable the IPv6 routing. This command is not necessary for the router to be a state-of-the-art DHCPv6 server, but is required for the router to originate the ICMPv6 RA messages.\nipv6 unicast-routing\nWe have it set in the previous section so we won\u0026rsquo;t do it again. We will set up a DHCPV6 pool:\nWith DHCPv6 with status, all steering parameters and other configuration parameters must be assigned by the DHCPv6 server. The address prefix command is used to indicate the set of addresses to be assigned by the server. The lifetime option indicates the valid and preferred lease time in seconds. As with non-state DHCPv6, the client uses the original IPv6 address of the package containing the RA message.\nWe indicate the network prefix and the life time of each address:\nWe now indicate DNS servers:\nWe can still set up more parameters like the domain name but in my case I\u0026rsquo;m only interested in this, so we\u0026rsquo;ll proceed to tell you where the interface has to work the service:\nWe will now check that the DHCP server, is working on our interface:\nWe\u0026rsquo;ll see how the DNS service has been assigned to the customer:\nAnd the concession on the DHCP server:\nSLAAC operations:\nWe can see that the PC2 has requested an RS, to all the routers on the network (Multicast) R1 responds to PC1 with an RA (Indicates if you need to communicate with a DHCPv6 with or without a state) DHCPv6 operations:\nRequest all DHCPv6 servers on the network (Multicast at ff02:: 1: 2) includes a CID client identifier. Warning: It is the DHCPv6 server response to a request, this includes the appropriate configuration options, including an IPv6. It also includes a CID and an XID (Id transaction). Request: The customer sends this message to all DHCPv6 servers to indicate that he wants the parameters offered in the Adverstide. They also include CID and XID. Reply: The DHCPv6 server responds and confirms that the address has been assigned as well as all additional configuration parameters. They also include CID and XID. Access to the web server from within the network From our local network we can make the request to the web server using both the local link address and the global address:\nAccess to the web server from outside the network SWEB \u0026ndash;\u0026gt; 3333:db7::ef7:42ff:fe92:0\nWe see that with the previous configuration we had in Apache we can easily access the web server from a machine outside our network:\nBasic Apache Settings for IPV6 As I said before, it is not necessary from version 2.X below to set anything further in apache for our server to work using the IPV6 protocol already by default this listener in IPV4 and IPV6.\nHowever, we can set it up for this one only to listen for IPV6, for which we will have to make a simple configuration in the service. We will access the file - \u0026gt; /etc/apache2/ports.conf\nWe will comment on the Listen 80 line as it refers to IPV4 and we will add the reference to ipv6.\nWith this configuration we will listen to all requests from any IPV6 address, in the square brackets we can specify an address to answer requests only to this one.\nWe will now access our virtual host and change the statement of this, as we have done above by modifying the label that refers to all IPV4 addresses and we will change it for this to refer to all IPV6 addresses for port 80:\nWe will now restart apache service and check that the state of apache is successful:\nWith this already our apache server would work only on IPV6:\nBibliography What is SLAAC? - Alberto Molina SLAAC messages Mounting a DHCPv6 Debian server DHCPv6 messages with SLAAC Apache IPV6 ","date":"October 8, 2023","hero":"/images/redes/escenario_ipv6_basico/portada.png","permalink":"https://www.javiercd.es/en/posts/redes/escenario_ipv6_basico/escenario_ipv6_basico/","summary":"\u003cp\u003eThroughout this guide, we will explore the configuration of a basic scenario using IPv6 networks on both Linux and Cisco devices. We will also address the configuration of an Apache server using IPv6 capabilities.\u003c/p\u003e\n\u003ch2 id=\"linux-ipv6-self-configuration\"\u003eLinux IPV6 Self-Configuration\u003c/h2\u003e\n\u003cp\u003eConnect two Linux machines to the same switch and check that they have IPv6 connectivity using the local link address.\u003c/p\u003e\n\u003cp\u003eWe\u0026rsquo;ll check the IPV6 that the different pcs have. PC1 has - \u0026gt; fe80::ef7:42ff:fe92:0/64\u003c/p\u003e","tags":["Redes","Enrutamiento","IPV6"],"title":"Basic IPv6 Scenario"},{"categories":null,"contents":"In this post, we will explore how to set up an Active Directory environment on an Ubuntu server using tools such as Kerberos and Samba. Active Directory is an integral Microsoft solution for identity management and access control in business networks. Through this guide, we will learn step by step how to implement a Ubuntu server as a domain controller, establish Kerberos-based authentication and configure directory services by using Samba.\nIntroduction You want to set up a Linux server (Ubuntu Server 20.04 LTS) to service a set of client equipment (Windows and Linux).\nI will take advantage that the stage is mounted from previous class activities and I will restore the snapshots to have the clean machines.\nPreparation of the environment 1. The Linux server will not have a graphic environment. You will have at least the partitions: root, home and exchange. Here we can see that I have no graphic environment installed, we can see that the service is active, however, no environment is launched. Also, if we look for any process with the best known desktop names, it doesn\u0026rsquo;t give us any results.\nHere I show you the partitions that my Ubuntu server has (root, boot, home and swap):\n#2. The server must be prepared for remote administration (from now on all management will be done remotely from another network equipment).\nTo manage it remotely I will use ssh, for this we install it on the server:\nOnce it is installed we will have it running, no configuration is necessary.\nIf we check the service status we can see that you have taken the default configuration:\nTo connect remotely we will need to know the IP of the equipment or the name:\nIn my case I will connect from the external network to our server (enp0s3), we have previously configured the network with netplan:\nAnd we have implemented the changes:\nOnce we know this data we will connect by ssh from a machine in our network to follow with the other sections, in my case I will use my host machine, for this I have installed the openssh-client package previously:\n#3. Create the following users and groups\nGroups: teachers, students, smr, asir. I believe the groups: User to create: profedesiree, profejose, proferaul, erik, manu, olive, sandra, fabio and domi I believe the users:\nI created them with home directory and assigned them the 1234 password:\nTeachers: profedesiree, profejose and proferaul. We add them: We can check that they have been added with the following command:\nStudents: erik, manu, olive, sandra, fabio and domi. We add them:\nWe check that they have been added:\nUsers of the group smr: profedesiree, profejose, proferaul, erik, manu and olive. We add them:\nWe check that they have been added:\nUsers of the asir group: sandra, fabio and domi. We check that they have been added:\n4. All users will be Samba users. For this we must have installed samba: To add a samba user we must enter the following command and assign a password:\nWe will do this with the 9 users, once added we can use this command to list the samba users we have:\nSamba domain controller 5. Create and configure a Samba domain controller on the Server. Before starting the installation we must take into account a number of data:\nActive Directory * domain controller name: FJCD Name of the domain of * Active Directory *: javiercrucies.local Name of the Kerberos Kingdom: javiercrucies.local NetBIOS name of the domain: javiercrosses Fixed IP address of the server: 192.168.0.1 Server role: Domain Controller (DC) DNS Reporter: 192.168.0.1 Once with these clear data we will start with the installation, the first thing is to update the system:\nNext we will need to change the name of our server to be in line with the data we have selected before, for this I have selected my initials, for this we edit the file * / etc / hostname *:\nNow we need to reboot the equipment to apply the changes, we will lose the connection by ssh:\nLet\u0026rsquo;s take the ssh remote control back in a few minutes when you have restarted:\nAs you can see we have connected using the old name that our server had, this is because the / etc / hosts file, contains an IP address ratio with its corresponding logical names. This file contained a reference to the old name of the server itself, which we will change to refer to the new name:\nOnce we have applied these two changes, before we continue we would only have to make sure that our server has the network properly configured. In our stage we have two network cards on our server:\nenp0s3 (External card, gives us internet access) enp0s8 (Internal card, is the one that communicates with our local network) Because of this the first is configured by DHCP, as we do not care about the configuration that is assigned to it, however, the second is configured statically, as we must control the configuration of it so that we have control over it and then join the equipment to the domain.\nOnce this is clarified, at the beginning of the document I indicate how the interfaces are configured, here I leave a screen to remember the addresses:\nWe will now need to have some packages that must be installed before starting, these are:\nsamba: file server, printing and authentication for SMB / CIFS. smbclient: command line customers for SMB / CIFS. krb5-config: Configuration files for Kerberos Version 5. winbind: Service to solve information about users and groups of Windows NT servers. We can install these four packages with a simple command:\nKerberos, will ask us about the kingdom (domain name) during the installation of the packages, in our case it will be javiercrucies.local:\nHere we will enter the name of our server team:\nHere we will re-enter the name of our server:\nAfter this, the installation will continue a little further, but without need for more information:\nWe will now configure samba, but before we do so we will change the name to the * smb.conf * configuration file so that you do not use it while we configure it and so we will also have a copy of the original file:\nWe will use the samba-tool domain provision command, so that it is the command itself that requests the values you need and, where possible, suggests its default values. So, if these match those we expect, it will be very likely that the previous steps have been the right ones:\nAs you can see, it is very intuitive to do so, since except for the forwarder IP and the administrator password we have chosen the answers that the same command offers us. This must meet minimum complexity requirements:\nat least 8 characters 1 capital 1 number or symbol This, in addition to setting up Samba, has generated a configuration file for Kerberos on the route / var / lib / samba / private / krb5.conf. So we\u0026rsquo;ll copy it to / etc:\nThe following will be to configure the resolution of names, for this we will start by stopping the services involved:\nWe will also remove them from starting automatically when restart the equipment:\nWe will then make sure that the samba- and ad- dc service can be started without difficulty, avoiding any masking that may exist:\nThen we delete the resolv.conf file which, in fact, will be a link to stub-resolv.conf. So we eliminate it and create a new one to remove it:\nWe now introduce the right values according to our domain, for my case:\nWe save the changes and get out of the file.\nWe will start the samba-ad@-@ dc service and enable it to start when restart the equipment:\nCheck the installation If we have managed to get here, we have all the ballots so that our installation has been correct. But it\u0026rsquo;s never too much to do a few checks.\nConsult the domain level and create a new user To know our domain level we simply enter this command:\nIn doing so, we check that the level of the domain, and of the forest where it is located, is equivalent to a Windows Server 2008 R2 installation\nWe will try to create a new user account in the domain with the command (we will need to take into account password policy):\nConfirm that the DNS server works properly The first thing is to check the LDAP service on the TCP protocol, for which we will write the following order:\nIf we have an answer similar to that, it all works as it should.\nWe will then check the SRV record for the Kerberos protocol on UDP, for which we use the following order:\nThe answer must be similar to the previous one, if so SRV record is correct.\nFinally, we check the resolution of the name of our server:\nCheck the operation of Kerberos To check the operation we can, for example, use the smbclient command to check the services that a particular user can get. For this we will use the following command:\nIf authentication is correct, we\u0026rsquo;ll know Kerberos is doing his job. If we want, we can even log into the server using the administrator account. To achieve this, we will use a syntax like this:\nWe\u0026rsquo;ve already checked everything so we can start joining customers to our domain.\nJoin the domain #6. It integrates at least one Windows client into the Samba domain.\nWindows client\nThe first thing we will do is set up our client\u0026rsquo;s network:\nIP: 192.168.0.10 Subnet mass: / 24 Liaison door 192.168.0.1 DNS 192.168.0.1 Both cards (Internal server and Windows client) must be in internal network for communication.\nOnce the card is configured, we will do a ping to the server to check the connectivity:\nNow we access control panel → system and security → system → advanced system configuration → team name → network id. We select the first option to join the domain\nWe will select the first option, as our network has a domain:\nWe will now need to enter the data of the administrator user and the name of our domain:\nThe administrator user that is created by default in samba is called the administrator\nOnce you enter the data you will ask us if we want to create a domain account on this computer, I will select that no:\nAnd for the changes to be applied, we must restart:\nOnce restart we can log in with the different users of our domain:\nWe can see that we can log into the team with the accounts of our domain:\nLinux client\nThe first thing is to set up the network, for which I have assigned the IP address 192.168.0.2\nWe will now have to add to our server in the host file, a line in which the IP address of our server will go followed by the name of this server and the full domain name of our server:\nTo check this change we have made we will do a ping to the server using its name:\nWe will now update the equipment to download the latest versions from the repositories:\nTo have the Internet on the client I have previously configured NAT on the server.\nOnce the system is updated we will install the following packages:\nsssd (System Security Services Daemon): Manages authentication mechanisms and access to remote directories. It replaces the classic Winbind with more speed and stability. heimdal-clients: This is a free implementation of Kerberos 5 created with the intention of being compatible with the Kerberos protocol implemented by the MIT. msktutil: The utility of Kerberos\u0026rsquo; keytabs in a Microsoft Active Directory environment. We can do it with 1 command:\nAs we install you will request the name of our active directory server so we enter it:\nNow you will ask us the name of the computer that acts as a server in our case is:\nFinally, he will ask us about the administrative server that in our case is the same:\nOnce this is done, the installation will continue without having to enter more data.\nNow let\u0026rsquo;s add additional data to Kerberos to make sure it behaves properly. We will start by changing the name of the configuration file, so that we can return to the original parameters if necessary:\nWe will now use nano to edit the file settings, it will be empty so we will add the following:\nOnce filled in with our domain data, we save the files and check if we can log into the domain:\nIf the output does not offer us any error, it is because the authentication process has worked properly.\nWe will proceed to join the domain, for this we will use the following command:\nThis command will have to be completed according to the data of our domain, in case we do not get any output, we will have joined the domain.\nTo complete the task, we will remove the kerberos authorization tickets that we activate when running kinit. To achieve this, just use the kdestroy command.\nShare folders #7. Personal folders are needed on the server for each user. There will also be a folder for each group, to which only the members of each group can access and write.\nWe will create the directories in the root partition for each user and one for each group. These will be created by the name of the group or user:\nWe have to bear in mind that the samba users we have generated at the beginning of the document have been removed when installing the domain and we will have to produce them again.\nWe will share these folders through samba, for this we edit the / etc / samba / smb.conf file:\nTo indicate that you can access a group we will have to put an @ in front of the group name:\nWe would only be able to correctly assign the appropriate local permissions for our resources and change the folder owners so that users can write on them:\nThis would be the right thing to do, but if we assign you the 775 permissions we can\u0026rsquo;t write in the folder, so we\u0026rsquo;ll assign you all the permissions:\nNow we\u0026rsquo;ll repeat this with all the directories, first I\u0026rsquo;ll give you the permissions:\nAnd finally we will change the folder owners and make each user or group their respective owners:\nLet\u0026rsquo;s make sure we have applied these changes correctly:\nWe will check that we can access the shared resources from the olive user, we will access the Oliver folder and create a directory within:\n8. From Windows access these folders through network drives. From the file browser we can see all the shared resources on the network. Now we will create network units, so for example we will add the Oliver folder to the Oliver user as a network drive, for this, we right click on the folder \u0026gt; connect to network drive:\nAnd we will select a letter to assign to the network unit:\nNow this unit will appear on this team:\nMobile profiles 9. Define mobile profiles on the Linux server using Samba, so that users can authenticate on different Windows machines, maintaining their configuration. To do this we will install RSAT (Remote Server Administration Tools) that will allow us to manage our samba domain controller identical to windows server. To add them we will search the search for Windows * * * Add optional features * * once here we will give you to add feature:\nOnce here we will look for the following features with RSAT and install them:\nOnce installed we will be created an application similar to that of a Windows server called administrative tools:\nWe will be opened a folder with the management tools:\nAnd we will search for user management and active directory equipment or write in running dsa.msc, this we will do with the user managing our domain to be able to access this:\nBefore creating our mobile user we will create a network resource as we have previously done called profiles and we will give the mobile group permission to write on them:\nFor our user to write in this directory we will add it to the group:\nNow we go to the configuration of our user and we change the profile path. We will put the path of our shared folder profiles followed by * *% username% * *:\nWe kept and we would have made our mobile profile created.\nWe will demonstrate the operation of the mobile profile, for which I have changed the background and created two folders:\nNow let\u0026rsquo;s log in and start it on the Windows on the right:\nWe see that the mobile profile has been properly performed.\nNFS 10. Through NFS, folders: projects, documentation, programs _ and _ drivers will be shared on the server. The first can only be read; the last two can also be written. Linux equipment will automatically mount the folders in the boot. The first thing we will do is install the following packages:\nNow we\u0026rsquo;ll create in the root the directories we\u0026rsquo;re going to share:\nAnd we\u0026rsquo;ll change the owner and the permissions to these directories:\nAfter this, we must edit the / etc / exports file. This is the file where the folders we are going to share are indicated to NFS. The first one will be read only and the last two can be written:\nTo access these resources on the server we will install the following packages:\nNow we will create the directories where we will mount our folders:\nTo manually mount them in Linux we will do the following command:\nLet\u0026rsquo;s check that in projects we can\u0026rsquo;t write:\nWhile in the other two we can write:\nIf we want to access these resources in Windows \u0026ndash; \u0026gt;\\ 192.168.0.1\\ documentation\n\\ 192.168.0.1\\ projects (reading only directory)\n\\ 192.168.0.1\\ programs\\ _ and\\ _ drivers\nTo view them you need to have the following features installed in Windows (We can access this program through the Windows search engine by writing Windows features)\nTo end with this point we will set that Linux equipment automatically mount when you start the directories. We will edit the / etc / fstab file by adding the following lines:\nOnce this is done we will reboot and we will see that we will have been automatically mounted:\nQuotas\n#11. The server / home folder will have a quota system to avoid saturation with user files (100 MB per user).\nThe first thing we will do is install the packages to implement quotas:\nWe will now allow the shares in the partition / home by adding this to the fstab of our server:\nWe take the home partition to apply these changes:\nAnd we apply quotas on the partition / home\nWe will check that at the root of the partition we have been created two files (afuca.group and afuca.user):\nWe will now apply the 100Mb quota to olive using edcupa:\nWe will now use a tool which is * gawk, * which will allow us to focus on this command, apply the quota we have just created for Oliver to all our users:\nThe order we just launched has drawn a list of all users and has applied Oliver\u0026rsquo;s quota to all users with an ID greater than 499.\nWe will now review the quotas to see how they are:\nTo check that it works we will exhaust the proferaul user\u0026rsquo;s share, for this we will create a 30 MB file:\nNow we\u0026rsquo;ll move him to the home directory of him and make him the owner of the file:\nWe see that the space used in the user directory is updated:\nWebmin #12. Install Webmin on the server to have the possibility to manage it graphically from a client. Show some of your functionalities.\nWebmin is a modern web control panel that allows you to manage your Linux server through a browser-based interface.\nWe will need to install apache to be able to install webmin on our server:\nWe will now have to add the webmin repository, so we will edit the sources.list and add it:\nWe save the file and make an apt update to update the repositories, we will be wrong warning us that the repository is not reliable.\nSo now we will download the PGP key from Webmin and add it to our system:\nWe go back to making an apt update and see that now the repository is reliable\nBelow we will download the webmin package:\nThe latest lines of the installation will give us the data to access this service web:\nSo in a client we go to the browser and access this url:\nIt will tell us that the connection is not private, to skip this warning Advanced configuration \u0026gt; access\nWe will have a portal where we will need to enter with an administrator user of our server:\nThe first thing we will see on the web interface will be a resource monitor, as well as data from our team:\nWe will see a resource monitor history, which will show us the hours and percentage of use of our hardware, as well as system information:\nWe have more sections such as recent login or network interfaces, which will give us information about who has connected and their settings respectively:\nTo end with the panel we will have a last window which will tell us the use of the disk and partitions:\nOnce we have taken a look at the main page we are going to take advantage of a functionality that has to allow us to view the directories shared by nfs, to access here we are going to networking \u0026gt; NFS exports:\nCome on, it also allows us to edit the current shared directories as well as add or delete these.\nIn addition, this tool allows us to set up a Firewall with iptables, which is now of vital importance to have security on our network:\nIt even has a web terminal so that we can manage the server from a client, to access it we deploy the menu and click on the terminal symbol or we press Alt + K:\nWe see you using ssh with the user connected in the application, in my case javiercrosses:\nWebmin includes many more management functions that help us work with the server in a graphic way to make it more friendly to manage it, from updating packages to setting up a Firewall. In addition, it uses https, so our traffic would travel encrypted, which would allow us to configure nat to be able to access from a device that is outside our network, without a snifer being able to decipher our traffic easily. It is advisable that we change the self-signed certificate that uses webmin to one of our own that we can generate with Let\u0026rsquo;s encrypt, for example.\nCUPS #13. There will be a CUPS printing server, which will be administered from a Ubuntu client. The first thing we need to do is install on the cup server:\nOnce this is done we will configure the service to allow to be managed from our Ubuntu client, for this we edit the following file:\nWe will now add the following parameters:\nListen 192.168.0.1: 631 allow 192.168.0.0 / 24 To allow our client Ubuntu to be able to manage the service\nNow we\u0026rsquo;d only have to restart the service:\nWe will move to the client and in the browser we will enter the ip of our server followed by two points and 631:\nWith this we have checked that the client can manage coups.\n#14. Set up a network printer for all users, with daily page limits for all users.\nTo share our network printer, we access the web panel and in the management section we mark sharing printers connected to this system:\nBefore setting the limits we will enable the service to register the name of the users when sending files, for that in the cups.conf file we change this default value to none:\nWe will now restart the service:\nTo set a daily limit for each 20-page user for example, we would apply the following command for our printer.\nOnce this command has been applied, users will only be able to print the indicated number of pages, when they exceed the limit the works will be sent to cups, but it will remove them from the tail and will not print them:\nIn other words, work 21 in this example will not be created until 24 hours.\nBibliography [How to know what desktop I have] (https: / / www.sysadmit.com / 2020 / 06 / linux-as-know-that-scriptorio@-@ tengo.html) [Mounting samba domain controller] (http: / / somebooks.es / create -a-controller-de-domino-de-active-directory-con-samba-en-ubuntu-18-04-lts /) [Configure the network with netplan] (http: / / somebooks.es / establish -a -direction-ip-estatica-ubuntu-server-17-10-posterios /) [Unite client linux to domain part 1] (http: / / somebooks.es / unir-a-cliente-ubuntu-20-04-a-a-domine-of-active-directory-over-windows-server-2019-part-1 /) [Unite client linux to domain part 2] (http: / / somebooks.es / unir-a-cliente-ubuntu-20-04-a-a-domine-of-active-directory-over-windows-server-2019-part-2 /) [Manage domain with RSAT] (http: / / somebooks.es / 12-7-administrar-el-control-de-domino-resara-con-rsat /) [Access shared folders w10] (http: / / somebooks.es / nfs-parte-6-acceder-a-la-carpeta-comparta-de-a-cliente-windows-10 /) [Contributions] (https: / / www.linuxtotal.com.mx / index.php? cont = info _ admon _ 018) [Installation and use of webmin] (https: / / www.digitalocean.com / community / tutorials / how-to-install-webmin-on-ubuntu-20-04-es) [CUPS Commands] (https: / / docs.oracle.com / cd / E26921 _ 01 / html / E25809 / gllgm.html) ","date":"September 20, 2023","hero":"/images/sistemas/ad_ubuntu/portada.jpeg","permalink":"https://www.javiercd.es/en/posts/sistemas/ad_ubuntu/ad_ubuntu/","summary":"\u003cp\u003eIn this post, we will explore how to set up an Active Directory environment on an Ubuntu server using tools such as Kerberos and Samba. Active Directory is an integral Microsoft solution for identity management and access control in business networks. Through this guide, we will learn step by step how to implement a Ubuntu server as a domain controller, establish Kerberos-based authentication and configure directory services by using Samba.\u003c/p\u003e","tags":["Debian 12","Sistemas","ISO","ASO"],"title":"Active Directory in Ubuntu"},{"categories":null,"contents":"Step 1 Install system -journal-remote In our environment, the first step will be to install the system-journal- remote package, which will allow us to access these machines remotely. To carry out the installation on our stage machines, we will use the apt package manager in Odin, which runs Debian 12. We will also install the same package in Thor and Loki, which are containers housed within Odin. As for Hela, a Rocky operating system, it will require the use of dnf for installation.\njaviercruces@odin:~$ sudo apt install systemd-journal-remote -y javiercruces@thor:~$ sudo apt install systemd-journal-remote -y javiercruces@loki:~$ sudo apt install systemd-journal-remote -y [javiercruces@hela ~]$ sudo dnf install systemd-journal-remote -y On the server, enable and activate the two systems components needed to receive log messages with the following command:\njaviercruces@odin:~$ sudo systemctl enable --now systemd-journal-remote.socket javiercruces@odin:~$ sudo systemctl enable systemd-journal-remote.service In the client, enable the component that you use to send the registration messages to the server:\n[javiercruces@hela ~]$ sudo systemctl enable systemd-journal-upload.service Then on the server, open ports 19532 and 80 on the firewall. This will allow the server to receive the customer\u0026rsquo;s registration messages. The port 80 is the port that certbot will use to generate the TLS certificate. In our case there\u0026rsquo;s no firewall so it won\u0026rsquo;t be necessary.\nStep 2: Generation of keys and certificates\nSince we will use the encrypted service to ensure that no one can access our records, I will proceed to generate the certificates using OpenSSL.\nWe can generate the certificates manually, but there is a tool called Easy RSA that automates this process. I will generate in Odin all the certificates of the machines and then take them to the corresponding machines.\njaviercruces@odin:~$ sudo apt install easy-rsa openssl -y This utility brings an example file to make it easier for us to generate the certificates, within this we will change the following values:\njaviercruces@odin:/usr/share/easy-rsa$ sudo cp vars.example vars javiercruces@odin:/usr/share/easy-rsa$ sudo nano vars set_var EASYRSA_REQ_COUNTRY \u0026#34;ES\u0026#34; set_var EASYRSA_REQ_PROVINCE \u0026#34;Sevilla\u0026#34; set_var EASYRSA_REQ_CITY \u0026#34;Dos Hermanas\u0026#34; set_var EASYRSA_REQ_ORG \u0026#34;iesgn\u0026#34; set_var EASYRSA_REQ_EMAIL \u0026#34;contacto@javiercd.es\u0026#34; set_var EASYRSA_REQ_OU \u0026#34;Informatica\u0026#34; We will create the directory and file structure needed to start working with EasyRSA:\njaviercruces@odin:/usr/share/easy-rsa$ sudo ./easyrsa init-pki * Notice: init-pki complete; you may now create a CA or requests. Your newly created PKI dir is: * /usr/share/easy-rsa/pki Let\u0026rsquo;s build our CA:\njaviercruces@odin:/usr/share/easy-rsa$ sudo ./easyrsa build-ca nopass ----- Common Name (eg: your user, host, or server name) [Easy-RSA CA]:odin.javiercd.gonzalonazareno.org * Notice: CA creation complete and you may now import and sign cert requests. Your new CA certificate file for publishing is at: /usr/share/easy-rsa/pki/ca.crt We will generate the private thor key and we will generate at the same time an application for signature of the certificate:\njaviercruces@odin:/usr/share/easy-rsa$ sudo ./easyrsa gen-req thor nopass ----- Common Name (eg: your user, host, or server name) [thor]:thor.javiercd.gonzalonazareno.org * Notice: Keypair and certificate request completed. Your files are: req: /usr/share/easy-rsa/pki/reqs/thor.req key: /usr/share/easy-rsa/pki/private/thor.key We will generate the private loki key and we will generate at the same time an application for signature of the certificate:\njaviercruces@odin:/usr/share/easy-rsa$ sudo ./easyrsa gen-req loki nopass ----- Common Name (eg: your user, host, or server name) [loki]:loki.javiercd.gonzalonazareno.org * Notice: Keypair and certificate request completed. Your files are: req: /usr/share/easy-rsa/pki/reqs/loki.req key: /usr/share/easy-rsa/pki/private/loki.key We\u0026rsquo;ll do the same with din:\njaviercruces@odin:/usr/share/easy-rsa$ sudo ./easyrsa gen-req odin nopass ---- Common Name (eg: your user, host, or server name) [odin]:odin.javiercd.gonzalonazareno.org * Notice: Keypair and certificate request completed. Your files are: req: /usr/share/easy-rsa/pki/reqs/odin.req key: /usr/share/easy-rsa/pki/private/odin.key We\u0026rsquo;ll do the same with hela:\njaviercruces@odin:/usr/share/easy-rsa$ sudo ./easyrsa gen-req hela nopass ---- Common Name (eg: your user, host, or server name) [odin]:hela.javiercd.gonzalonazareno.org * Notice: Keypair and certificate request completed. Your files are: req: /usr/share/easy-rsa/pki/reqs/hela.req key: /usr/share/easy-rsa/pki/private/hela.key Once the private keys and the requests for signature of the certificates are generated, it is necessary to sign them, in order not to repetitive it will show the signature of odin, the others are done in the same way:\njaviercruces@odin:/usr/share/easy-rsa$ sudo ./easyrsa sign-req server odin * Notice: Using Easy-RSA configuration from: /usr/share/easy-rsa/vars * WARNING: Move your vars file to your PKI folder, where it is safe! * Notice: Using SSL: openssl OpenSSL 3.0.11 19 Sep 2023 (Library: OpenSSL 3.0.11 19 Sep 2023) You are about to sign the following certificate. Please check over the details shown below for accuracy. Note that this request has not been cryptographically verified. Please be sure it came from a trusted source or that you have verified the request checksum with the sender. Request subject, to be signed as a server certificate for 825 days: subject= commonName = odin.javiercd.gonzalonazareno.org Type the word \u0026#39;yes\u0026#39; to continue, or any other input to abort. Confirm request details: yes Using configuration from /usr/share/easy-rsa/pki/06312595/temp.f57dfbc5 Check that the request matches the signature Signature ok The Subject\u0026#39;s Distinguished Name is as follows commonName :ASN.1 12:\u0026#39;odin.javiercd.gonzalonazareno.org\u0026#39; Certificate is to be certified until May 5 18:34:45 2026 GMT (825 days) Write out database with 1 new entries Database updated * Notice: Certificate created at: /usr/share/easy-rsa/pki/issued/odin.crt Take the certificates to the corresponding machines Now we\u0026rsquo;ll have to get him to the different machines using ssh. For each of them we will take the signed certificate that we have generated in / usr / share / easy-rsa / pki / issued / and its private key that is in / usr / share / easy-rsa / pki / private /.\nIn addition for customers we will have to send the CA certificate, which is in / usr / share / easy-rsa / pki / ca.crt\nOnce we have the files in the corresponding machines, we will have to store it with the following permissions:\n#Cliente hela [javiercruces@hela ~]$ sudo ls -l /etc/letsencrypt/live/hela.javiercd.es/ total 60 -rw-r-----. 1 systemd-journal-upload systemd-journal-upload 1294 Jan 31 18:59 ca.crt -rw-r-----. 1 systemd-journal-upload systemd-journal-upload 4841 Jan 25 11:17 hela.crt -rw-r-----. 1 systemd-journal-upload systemd-journal-upload 1704 Jan 25 11:17 hela.key #Servidor Odin javiercruces@odin:~$ sudo ls -l /etc/letsencrypt/live/javiercd.es/ total 20 -rw-r--r-- 1 root systemd-journal-remote 7840 Jan 31 18:39 combined.pem -rw-r----- 1 root systemd-journal-remote 4841 Jan 31 18:35 odin.crt -rw-r----- 1 root systemd-journal-remote 1704 Jan 31 18:35 odin.key As you will have noticed in din there is a file called combined.pem, to get this you will have to concatenate your certificate with your private key in a single file\njaviercruces@odin:~$ sudo cat /etc/letsencrypt/live/javiercd.es/odin.crt /etc/letsencrypt/live/javiercd.es/odin.key \u0026gt; /etc/letsencrypt/live/javiercd.es/combined.pem Although I have used the directory where Let\u0026rsquo;s Encrypt certificates are kept, I have not been able to use it as we do not have control of the gonzalonazareno.org domain. That\u0026rsquo;s why I\u0026rsquo;ve generated them manually before. Puntualize that the directory where you keep these does not matter as long as you have the right permissions. Step 3: Configure the server We would only have to indicate the service configuration, you would only have to change the routes corresponding to your files:\njaviercruces@odin:~$ sudo cat /etc/systemd/journal-remote.conf [Remote] Seal=false SplitMode=host ServerKeyFile=/etc/letsencrypt/live/javiercd.es/odin.key ServerCertificateFile=/etc/letsencrypt/live/javiercd.es/odin.crt TrustedCertificateFile=/etc/letsencrypt/live/javiercd.es/combined.pem Once configured, we restart the service and check that it is up:\njaviercruces@odin:~$ sudo systemctl restart systemd-journal-remote.service javiercruces@odin:~$ sudo systemctl status systemd-journal-remote.service ● systemd-journal-remote.service - Journal Remote Sink Service Loaded: loaded (/lib/systemd/system/systemd-journal-remote.service; indirect; preset: disabled) Active: active (running) since Wed 2024-01-31 18:46:25 UTC; 49min ago TriggeredBy: ● systemd-journal-remote.socket Docs: man:systemd-journal-remote(8) man:journal-remote.conf(5) Main PID: 4623 (systemd-journal) Status: \u0026#34;Processing requests...\u0026#34; Tasks: 1 (limit: 2313) Memory: 7.9M CPU: 238ms CGroup: /system.slice/systemd-journal-remote.service └─4623 /lib/systemd/systemd-journal-remote --listen-https=-3 --output=/var/log/journal/remote/ Step 4: Configure the client\nWe will add the files corresponding to the configuration, your private key and your corresponding certificate as well as the CA certificate with which you have generated these:\n[javiercruces@hela ~]$ sudo cat /etc/systemd/journal-upload.conf [Upload] URL=https://odin.javiercd.gonzalonazareno.org/ ServerKeyFile=/etc/letsencrypt/live/hela.javiercd.es/odin.key ServerCertificateFile=/etc/letsencrypt/live/hela.javiercd.es/odin.crt TrustedCertificateFile=/etc/letsencrypt/live/hela.javiercd.es/ca.crt We restart the service and check the state of the service:\n[javiercruces@hela ~]$ sudo systemctl restart systemd-journal-upload.service [javiercruces@hela ~]$ sudo systemctl status systemd-journal-upload.service ● systemd-journal-upload.service - Journal Remote Upload Service Loaded: loaded (/usr/lib/systemd/system/systemd-journal-upload.service; enabled; preset: disabled) Active: active (running) since Wed 2024-01-31 19:38:53 UTC; 2s ago Docs: man:systemd-journal-upload(8) Main PID: 4628 (systemd-journal) Status: \u0026#34;Processing input...\u0026#34; Tasks: 1 (limit: 10840) Memory: 4.1M CPU: 53ms CGroup: /system.slice/systemd-journal-upload.service └─4628 /usr/lib/systemd/systemd-journal-upload --save-state Jan 31 19:38:53 hela.javiercd.gonzalonazareno.org systemd[1]: Started Journal Remote Upload Service. Step 5: Operating check\nOnce the two services are up, we will be saved on the server a file with our client\u0026rsquo;s login:\njaviercruces@odin:~$ sudo ls -la /var/log/journal/remote/ total 8204 drwxr-xr-x 2 systemd-journal-remote systemd-journal-remote 4096 Jan 31 18:59 . drwxr-sr-x+ 4 root systemd-journal 4096 Jan 24 13:01 .. -rw-r----- 1 systemd-journal-remote systemd-journal-remote 8388608 Jan 31 19:38 remote-172.16.0.200.journal We can see the logs of the different services, for example will filter by httpd:\njaviercruces@odin:~$ sudo journalctl -u httpd --file=/var/log/journal/remote/remote-172.16.0.200.journal Jan 30 08:32:30 hela.javiercd.gonzalonazareno.org systemd[1]: Starting The Apache HTTP Server... Jan 30 08:32:31 hela.javiercd.gonzalonazareno.org httpd[775]: [Tue Jan 30 08:32:31.395719 2024] [so:warn] [pid 775:tid 775] AH01574: module rewrite_module is already loaded, skipping Jan 30 08:32:31 hela.javiercd.gonzalonazareno.org httpd[775]: Server configured, listening on: port 80 Jan 30 08:32:31 hela.javiercd.gonzalonazareno.org systemd[1]: Started The Apache HTTP Server. ","date":"September 20, 2023","hero":"/images/sistemas/recoleccion_logs_journald/journal.jpg","permalink":"https://www.javiercd.es/en/posts/sistemas/recoleccion_logs_journald/recoleccion_logs_journald/","summary":"\u003ch3 id=\"step-1-install-system--journal-remote\"\u003eStep 1 Install system -journal-remote\u003c/h3\u003e\n\u003cp\u003eIn our environment, the first step will be to install the system-journal- remote package, which will allow us to access these machines remotely. To carry out the installation on our stage machines, we will use the apt package manager in Odin, which runs Debian 12. We will also install the same package in Thor and Loki, which are containers housed within Odin. As for Hela, a Rocky operating system, it will require the use of dnf for installation.\u003c/p\u003e","tags":["ASO","DEBIAN"],"title":"Centralized collection of system log, using journald"},{"categories":null,"contents":"Systemd and System V (SysV) are two start-up systems used in Linux distributions to manage system and service boot. System V (SysV) is a traditional start-up system that uses shell scripts stored at different running levels (runlevels) to start and stop services sequentially. It was widely used in many Unix and Linux distributions for decades. On the other hand, Systemd is a more modern and advanced start-up system that replaces SysV. Incorporated to improve system start speed and efficiency, systemd uses a unit-based approach and depends on paralleling to start services simultaneously. It also includes additional features such as service management, sockets, timers, and dependencies, making it a more robust and flexible option compared to SysV.\nMigration from systemd to systemV Modify /etc/apt/sources.list to point to Daedalus repositories that is the equivalent of Debian 12 in Devuan.\nroot@ASOjaviercruces:~# nano /etc/apt/sources.list Modify sources.list to look like the one provided. Comes on all the other lines.\nroot@ASOjaviercruces:~# cat /etc/apt/sources.list deb http://deb.devuan.org/merged daedalus main deb http://deb.devuan.org/merged daedalus-updates main deb http://deb.devuan.org/merged daedalus-security main deb http://deb.devuan.org/merged daedalus-backports main It updates the package lists from the Daedalus repositories, allowing unsafe origins as it is signed the repositories.\nroot@ASOjaviercruces:~# apt-get update --allow-insecure-repositories Install Devuan\u0026rsquo;s key ring to authenticate the repository and packages.\nroot@ASOjaviercruces:~# apt-get install devuan-keyring --allow-unauthenticated Update the package lists again to authenticate the repositories and packages.\nroot@ASOjaviercruces:~# apt-get update Update the installed packages to the latest versions. Note that this does not complete migration to system-v.\nroot@ASOjaviercruces:~# apt-get upgrade (ten cuidado de NO usar dist-upgrade aquí) We install the eudev and sysvinit@-@ core packages to efficiently manage the detection and configuration of devices through eudev, while sysvinit@-@ core is in charge of the control of the start and process system.\nroot@ASOjaviercruces:~# apt-get install eudev sysvinit-core The last command may cause package breakages, but they will be resolved as part of the migration process.\nroot@ASOjaviercruces:~# apt-get -f install A reboot is required to change the change from systemd to systemV.\nroot@ASOjaviercruces:~# reboot We will update the distribution to move the packages from using systemd to systemV.\nroot@ASOjaviercruces:~# apt-get dist-upgrade Once migration to Devuan is completed, it eliminates the packages related to systemd.\nroot@ASOjaviercruces:~# apt-get purge systemd libnss-systemd Eliminates any orphan package generated by the migration process and any unusable cache file.\nroot@ASOjaviercruces:~# apt-get autoremove --purge root@ASOjaviercruces:~# apt-get autoclean # Checking and using systemV Check that process 1 is init, this means that the system has started using systemV:\nroot@ASOjaviercruces:~# ps -s1 PID TTY TIME CMD 1 ? 00:00:00 init I will install a service that should depend on systemd but as we have changed to systemv, I will not use it as we now use Devuan\u0026rsquo;s repositories:\ndebian@ASOjaviercruces:~$ sudo apt install apache2 -y Then to manage the service we will do it from the / etc / init.d / directory and looking for the \u0026ldquo;service\u0026rdquo; of each demon:\n#Para iniciar el servicio debian@ASOjaviercruces:~$ sudo /etc/init.d/apache2 start Starting Apache httpd web server: apache2. #Para parar el servicio debian@ASOjaviercruces:~$ sudo /etc/init.d/apache2 stop Stopping Apache httpd web server: apache2. #Para reiniciar el servicio debian@ASOjaviercruces:~$ sudo /etc/init.d/apache2 restart Restarting Apache httpd web server: apache2AH00558: apache2: Could not reliably determine the server\u0026#39;s fully qualified domain name, using 192.168.122.208. Set the \u0026#39;ServerName\u0026#39; directive globally to suppress this message . #Para ver el estado debian@ASOjaviercruces:~$ sudo /etc/init.d/apache2 status apache2 is running. ","date":"September 20, 2023","hero":"/images/sistemas/eliminar_systemd/eliminar_systemd.jpg","permalink":"https://www.javiercd.es/en/posts/sistemas/migraciones/eliminacion_systemd/eliminacion_systemd/","summary":"\u003cp\u003eSystemd and System V (SysV) are two start-up systems used in Linux distributions to manage system and service boot. System V (SysV) is a traditional start-up system that uses shell scripts stored at different running levels (runlevels) to start and stop services sequentially. It was widely used in many Unix and Linux distributions for decades. On the other hand, Systemd is a more modern and advanced start-up system that replaces SysV. Incorporated to improve system start speed and efficiency, systemd uses a unit-based approach and depends on paralleling to start services simultaneously. It also includes additional features such as service management, sockets, timers, and dependencies, making it a more robust and flexible option compared to SysV.\u003c/p\u003e","tags":["ASO","DEBIAN"],"title":"Disposal of systemd"},{"categories":null,"contents":"Samba is a free and open source implementation of the Server Message Block (SMB) protocol, which is used to share files and printers on computer networks. The SMB protocol is a network protocol that allows Windows operating systems to communicate with other network devices, such as file servers, printers and other shared resources.\nSamba facilitates interoperability between Windows systems and Unix / Linux-based operating systems by allowing Unix systems to share files and resources with Windows systems using the SMB / CIFS protocol. This means that a Samba server can act as a file server for Windows customers, allowing them to access and share files as if they were in a Windows environment.\n1.Installation The first thing is to install the samba server:\nIn the / etc / samba / smb.conf file we will make the configuration of our folder:\nWe will create a samba user to access the resources:\nWe will restart the service to apply the configuration:\n2.Access from Windows Now we can access from a Windows client with the user we just created \u0026ndash; \u0026gt;\\ IP\\ DIRECTORY\\ PARTICIPING\nHe will ask us to become self-conscious:\nWe can see the content and create:\n3.Access from Linux We install the smbclient package to connect to shared units with samba:\nList shared directories:\nWe connect to the shared resource\nI will create a directory and check that it exists:\nBibliography [Enable guest access] (https: / / learn.microsoft.com / es-en / troubleshoot / windows-client / networking / cannot-access-share-folder-file-explorer) ","date":"September 20, 2023","hero":"/images/sistemas/samba_debian/portada.png","permalink":"https://www.javiercd.es/en/posts/sistemas/samba_debian/samba_debian/","summary":"\u003cp\u003eSamba is a free and open source implementation of the Server Message Block (SMB) protocol, which is used to share files and printers on computer networks. The SMB protocol is a network protocol that allows Windows operating systems to communicate with other network devices, such as file servers, printers and other shared resources.\u003c/p\u003e\n\u003cp\u003eSamba facilitates interoperability between Windows systems and Unix / Linux-based operating systems by allowing Unix systems to share files and resources with Windows systems using the SMB / CIFS protocol. This means that a Samba server can act as a file server for Windows customers, allowing them to access and share files as if they were in a Windows environment.\u003c/p\u003e","tags":["Debian 12","Sistemas","ISO","ASO"],"title":"Install and configure samba in Debian"},{"categories":null,"contents":"The efficient management of programmed tasks is essential for system managers as it facilitates the automatic execution of routine processes. In this context, having a solid set of Linux commands to program and control tasks becomes a fundamental tool.\nSleep command The sleep command stops running in the terminal for a specified time interval before returning to the command line. You can indicate the time in seconds, minutes, hours or days. This command is found in the choreutils package.\ns: seconds m: minutes hours d: days Ej: sleep 10m - \u0026gt; wait 10 min\nIn case it is not of any use, however it is very useful in Scripts. Here is a small example:\ndate + \u0026ldquo;% H:% M:% S \u0026lsquo;; sleep 5; date +\u0026rdquo;% H:% M:% S\u0026rsquo;\nWatch command The watch utility is part of the procps (or procps-ng) package that is pre-installed in almost all Gnu / Linux distributions.\nWhen used without arguments, this utility will run the specified command every two seconds:\nWe can specify the repetition time using the -n parameter, specifying the parameter in seconds:\nwatch -n 5 date - \u0026gt; Every 5 seconds\nIf we want to remove the header, that is to say to show us every time it is repeated, we use the -t parameter:\nIf we want to put an error message in case the command cannot be executed we use the -and parameter followed by the error message:\nwatch -e \u0026rsquo;error'\nThe -b watch option emits a beep every time the command comes out with a different state code from zero.\nwatch -b\nWith the parameter -d it points to the changes that have occurred in the execution of the command: watch -d\nCommand at This command is used to run commands at a certain time, mainly used to program periodic tasks such as can be, backup.\nThe main parameters are:\nV: print the version number on the standard error and come out successfully.\nm: Send mail to the user when the work has been completed even if there has been no output. -M: He never sends mail to the user.\nf: Read the work file from a file instead of the standard input.\nt: time Executs work on time, given in the format [[CC] YY] MMDDhhmm [.ss]\nl: It\u0026rsquo;s an alias for atq.\nr: It\u0026rsquo;s an alias for atrm.\nd: It\u0026rsquo;s an alias for atrm.\nb: It\u0026rsquo;s an alias for batch.\nv: It shows the time the work will run before reading it.\nThe times shown will be in the format \u0026ldquo;Thu Feb 20 14: 50: 00 1997.\u0026rdquo;\nc collects the works listed in the command line on the standard output.\nWe can program tasks from the command line, with echo:\necho \u0026ldquo;sh copia-segurity.sh\u0026rdquo; ¦ 124; at 10: 00 PM\nHas this task will be assigned a number automatically, to list the tasks we have we invoke the at command without any parameter\nIf we want to delete a scheduled task, we use the -c parameter followed by the task number to be removed.\nExamples to schedule tasks include:\nWithin 30 min: at now + 30 minutes 11AM of next 14 April: at 11: 00 AM April 14 Crontab command The crontab command is used in UNIX systems to program the execution of other commands, that is, to automate tasks. We can see the chrontabs that are being programmed and also edit them, logically.\nTo see them, we use this command: sudo crontab -l To edit: sudo crontab -e\nThe cron tasks follow a certain syntax. They have 5 asterisks followed by the command to run. Now I\u0026rsquo;ll explain what it\u0026rsquo;s all about.\n\\ *\\ *\\ *\\ **/ bin / run / script.sh\nThe 5 asterisks, from left to right, the asterisks represent:\nMinutes: from 0 to 59. Hours: 0 to 23. Day of the month: from 1 to 31. Month: 1 to 12. Day of the week: from 0 to 6, being 0 on Sunday. If you leave an asterisk, you mean \u0026ldquo;every minute, time, day of month, month or day of the week.\nIf we want a file to run at 5 in the morning every day: 0 5\\ *\\ *\\ * path\\ _ absolute\\ _ from the\\ _ script\nTo run twice a day at 6 AM and 6 PM: 0 6,18\\ *\\ **path\\ _ absolute\\ _ of the\\ _ script\nWe often have words reserved to facilitate the use of programming programs or languages. Cron couldn\u0026rsquo;t be less, so we have some that are usually the most common. Now everyone who sets it up according to their needs. Here they go:\n@ reboot: runs once at the start. @ early / @ annual: run every year. @ monthly: run once a month. @ weekly: once a week. @ daily / @ midnight: once a day. @ hourly: every hour. We must also know the uses of the parameters:\ncrontab archivo.cron (set the file as the user\u0026rsquo;s crontab)\ncrontab -e (will open the pre-established editor where you can create or edit the crontab file) crontab -l (list the current user crontab, your cron tasks)\ncrontab -r (removes current user crontab)\nWhen we make some change we must restart the service to make sure that our changes take effect:\nservice crow restart\nThese commands will give us the possibility to automate processes, making the management of our systems more comfortable and friendly.\nBibliography Watch command Crontab command ","date":"September 20, 2023","hero":"/images/sistemas/programacion_tareas/portada.png","permalink":"https://www.javiercd.es/en/posts/sistemas/comandos_linux/programacion_tareas/programacion_tareas/","summary":"\u003cp\u003eThe efficient management of programmed tasks is essential for system managers as it facilitates the automatic execution of routine processes. In this context, having a solid set of Linux commands to program and control tasks becomes a fundamental tool.\u003c/p\u003e\n\u003ch3 id=\"sleep-command\"\u003eSleep command\u003c/h3\u003e\n\u003cp\u003eThe sleep command stops running in the terminal for a specified time interval before returning to the command line. You can indicate the time in seconds, minutes, hours or days. This command is found in the choreutils package.\u003c/p\u003e","tags":["Debian 12","Sistemas","ISO","ASO"],"title":"Linux task programming commands"},{"categories":null,"contents":"Enable SELinux on a Rocky-based server and make sure that the samba and nfs services work properly with a strict and secure SELinux configuration. Conducts the corresponding access tests.\nThe stage consists of two machines, our server is based on Rocky 9 and our client is a Debian 12.\nOn our server we will have SELinux enabled in enforcing mode.\n[rocky@rocky-javiercruces ~]$ sestatus SELinux status: enabled SELinuxfs mount: /sys/fs/selinux SELinux root directory: /etc/selinux Loaded policy name: targeted Current mode: enforcing Mode from config file: enforcing Policy MLS status: enabled Policy deny_unknown status: allowed Memory protection checking: actual (secure) Max kernel policy version: 33 We will start by updating the packages needed to configure samba and nfs:\n[rocky@rocky-javiercruces ~]$ sudo dnf update -y [rocky@rocky-javiercruces ~]$ sudo dnf install samba samba-common samba-client nfs-utils -y Samba A shared samba resource is essentially a directory that will be shared among the network\u0026rsquo;s client systems. So, we\u0026rsquo;ll create a directory as shown. I\u0026rsquo;ll do it in my user\u0026rsquo;s home directory:\n[rocky@rocky-javiercruces ~]$ mkdir sambashare We will give you the permissions and property corresponding to the directory we have just created to make it accessible through the service:\n[rocky@rocky-javiercruces ~]$ sudo chmod -R 755 /home/rocky/sambashare [rocky@rocky-javiercruces ~]$ sudo chown -R nobody:nobody /home/rocky/sambashare [rocky@rocky-javiercruces ~]$ sudo chcon -t samba_share_t /home/rocky/sambashare Now we will create a shared resource within the samba configuration, I will add it at the end of the file:\n[rocky@rocky-javiercruces ~]$ sudo vim /etc/samba/smb.conf [sambashare] path = /home/rocky/sambashare browsable =yes writable = yes guest ok = yes read only = no To verify the configuration file, run the following command:\n[rocky@rocky-javiercruces ~]$ sudo testparm With the current configuration we can access the resource anonymously, although we can configure samba users:\n[rocky@rocky-javiercruces ~]$ sudo smbpasswd -a rocky Then add to the configuration file the \u0026ldquo;valid users = user\u0026rdquo; line at the end of each resource statement, leaving you an example:\n[sambashare] path = /home/rocky/sambashare guest only = no writable = yes force create mode = 0666 force directory mode = 0777 browseable = yes valid users = rocky Now let\u0026rsquo;s start the service:\n[rocky@rocky-javiercruces ~]$ sudo systemctl start smb [rocky@rocky-javiercruces ~]$ sudo systemctl enable smb [rocky@rocky-javiercruces ~]$ sudo systemctl start nmb [rocky@rocky-javiercruces ~]$ sudo systemctl enable nmb Let\u0026rsquo;s confirm that both services are working:\n[rocky@rocky-javiercruces ~]$ sudo systemctl status smb ● smb.service - Samba SMB Daemon Loaded: loaded (/usr/lib/systemd/system/smb.service; enabled; preset: disabled) Active: active (running) since Mon 2024-02-05 11:21:45 UTC; 1min 50s ago Docs: man:smbd(8) man:samba(7) man:smb.conf(5) Main PID: 49025 (smbd) Status: \u0026#34;smbd: ready to serve connections...\u0026#34; Tasks: 3 (limit: 4340) Memory: 8.6M CPU: 70ms CGroup: /system.slice/smb.service ├─49025 /usr/sbin/smbd --foreground --no-process-group ├─49027 /usr/sbin/smbd --foreground --no-process-group └─49028 /usr/sbin/smbd --foreground --no-process-group Feb 05 11:21:45 rocky-javiercruces.novalocal systemd[1]: Starting Samba SMB Daemon... Feb 05 11:21:45 rocky-javiercruces.novalocal smbd[49025]: [2024/02/05 11:21:45.649440, 0] ../../source3/smbd/server.c:1746(main) Feb 05 11:21:45 rocky-javiercruces.novalocal smbd[49025]: smbd version 4.18.6 started. Feb 05 11:21:45 rocky-javiercruces.novalocal smbd[49025]: Copyright Andrew Tridgell and the Samba Team 1992-2023 Feb 05 11:21:45 rocky-javiercruces.novalocal systemd[1]: Started Samba SMB Daemon. [rocky@rocky-javiercruces ~]$ sudo systemctl status nmb ● nmb.service - Samba NMB Daemon Loaded: loaded (/usr/lib/systemd/system/nmb.service; enabled; preset: disabled) Active: active (running) since Mon 2024-02-05 11:22:49 UTC; 1min 7s ago Docs: man:nmbd(8) man:samba(7) man:smb.conf(5) Main PID: 49065 (nmbd) Status: \u0026#34;nmbd: ready to serve connections...\u0026#34; Tasks: 1 (limit: 4340) Memory: 2.8M CPU: 48ms CGroup: /system.slice/nmb.service └─49065 /usr/sbin/nmbd --foreground --no-process-group Feb 05 11:22:49 rocky-javiercruces.novalocal nmbd[49065]: [2024/02/05 11:22:49.116367, 0] ../../source3/nmbd/nmbd.c:901(main) Feb 05 11:22:49 rocky-javiercruces.novalocal nmbd[49065]: nmbd version 4.18.6 started. Feb 05 11:22:49 rocky-javiercruces.novalocal nmbd[49065]: Copyright Andrew Tridgell and the Samba Team 1992-2023 Feb 05 11:22:49 rocky-javiercruces.novalocal systemd[1]: Started Samba NMB Daemon. Feb 05 11:23:12 rocky-javiercruces.novalocal nmbd[49065]: [2024/02/05 11:23:12.157234, 0] ../../source3/nmbd/nmbd_become_lmb.c:398(become_local_master_stage2) Feb 05 11:23:12 rocky-javiercruces.novalocal nmbd[49065]: ***** Feb 05 11:23:12 rocky-javiercruces.novalocal nmbd[49065]: Feb 05 11:23:12 rocky-javiercruces.novalocal nmbd[49065]: Samba name server ROCKY-JAVIERCRUCES is now a local master browser for workgroup SAMBA on subnet 10.0.0.150 Feb 05 11:23:12 rocky-javiercruces.novalocal nmbd[49065]: Feb 05 11:23:12 rocky-javiercruces.novalocal nmbd[49065]: ***** The above results indicate that services are being implemented. Now let\u0026rsquo;s enable the samba protocol on the firewall to allow customers to connect:\n[rocky@rocky-javiercruces ~]$ sudo firewall-cmd --permanent --add-service=samba success [rocky@rocky-javiercruces ~]$ sudo firewall-cmd --reload success Now in our client, we install the client and check to connect remotely:\njaviercruces@odin:~$ sudo apt install samba-client -y javiercruces@odin:~$ sudo smbclient //172.22.201.86/sambashare -U rocky Password for [WORKGROUP\\rocky]: Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; ls . D 0 Mon Feb 12 09:42:09 2024 .. D 0 Mon Feb 5 11:50:24 2024 fichero_prueba N 0 Mon Feb 12 09:42:09 2024 9286656 blocks of size 1024. 7952516 blocks available smb: \\\u0026gt; We\u0026rsquo;ll check that at both ends we have the same files:\n[rocky@rocky-javiercruces ~]$ sudo ls -l /home/rocky/sambashare/ total 0 -rwxr-xr-x. 1 nobody nobody 0 Feb 12 09:42 fichero_prueba NFS We install the nfs server in Rocky:\n[rocky@rocky-javiercruces ~]$ sudo dnf install nfs-utils In the debian client, in this case we download \u0026ldquo;the client\u0026rdquo;\njaviercruces@odin:~$ sudo apt install nfs-common We create the directory we want to share:\n[rocky@rocky-javiercruces ~]$ sudo mkdir /var/nfs/general -p We give you the right permissions to make nfs work properly.\n[rocky@rocky-javiercruces ~]$ sudo chown nobody /var/nfs/general We show the current configuration of the services allowed through the firewall using firewall:\n[rocky@rocky-javiercruces ~]$ sudo firewall-cmd --permanent --list-all | grep services services: cockpit dhcpv6-client samba ssh Since we are not allowed nfs, we will allow it by making use of the service:\n[rocky@rocky-javiercruces ~]$ sudo firewall-cmd --permanent --add-service=nfs success [rocky@rocky-javiercruces ~]$ sudo firewall-cmd --permanent --add-service=mountd success [rocky@rocky-javiercruces ~]$ sudo firewall-cmd --permanent --add-service=rpc-bind success [rocky@rocky-javiercruces ~]$ sudo firewall-cmd --reload success We relist the services allowed and make sure that this nfs, mountd and rcp-bind:\n[rocky@rocky-javiercruces ~]$ sudo firewall-cmd --permanent --list-all | grep services services: cockpit dhcpv6-client mountd nfs rpc-bind samba ssh Now in the client we will choose where we will set up the shared directory, I will create a new one:\njaviercruces@odin:~$ sudo mkdir -p /nfs/general And we\u0026rsquo;ll set up the new directory:\njaviercruces@odin:~$ sudo mount 172.22.201.86:/var/nfs/general /nfs/general We check that it has been mounted:\njaviercruces@odin:~$ df -h Filesystem Size Used Avail Use% Mounted on udev 965M 0 965M 0% /dev tmpfs 197M 684K 197M 1% /run /dev/vda1 15G 7.0G 7.1G 50% / tmpfs 984M 0 984M 0% /dev/shm tmpfs 5.0M 0 5.0M 0% /run/lock /dev/vda15 124M 12M 113M 10% /boot/efi tmpfs 197M 0 197M 0% /run/user/1000 172.22.201.86:/var/nfs/general 8.9G 1.3G 7.6G 15% /nfs/general And we check that at both ends we have the same files:\n[rocky@rocky-javiercruces ~]$ sudo ls -l /var/nfs/general/ total 0 -rw-r--r--. 1 nobody nobody 0 Feb 12 09:38 fichero_prueba javiercruces@odin:~$ ls -l /nfs/general total 0 -rw-r--r-- 1 nobody nogroup 0 Feb 12 09:38 fichero_prueba ","date":"September 20, 2023","hero":"/images/sistemas/selinux/selinux.jpg","permalink":"https://www.javiercd.es/en/posts/sistemas/activacion_selinux/activacion_selinux/","summary":"\u003cp\u003eEnable SELinux on a Rocky-based server and make sure that the samba and nfs services work properly with a strict and secure SELinux configuration. Conducts the corresponding access tests.\u003c/p\u003e\n\u003cp\u003eThe stage consists of two machines, our server is based on Rocky 9 and our client is a Debian 12.\u003c/p\u003e\n\u003cp\u003eOn our server we will have SELinux enabled in enforcing mode.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003erocky@rocky-javiercruces ~\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e$ sestatus\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eSELinux status:                 enabled\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eSELinuxfs mount:                /sys/fs/selinux\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eSELinux root directory:         /etc/selinux\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eLoaded policy name:             targeted\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eCurrent mode:                   enforcing\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eMode from config file:          enforcing\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ePolicy MLS status:              enabled\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ePolicy deny_unknown status:     allowed\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eMemory protection checking:     actual \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003esecure\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eMax kernel policy version:      \u003cspan style=\"color:#ae81ff\"\u003e33\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWe will start by updating the packages needed to configure samba and nfs:\u003c/p\u003e","tags":["ASO","REDHAT","ROCKY","CENTOS"],"title":"SELinux activation configuration"},{"categories":null,"contents":"Install an Apache web server for use in an Intranet To install the server we must run as root the following command:\nCreate within the / var / www / html directory a file called intrada.html where you put a welcome message\nNow I\u0026rsquo;ll put it inside the route:\nNext we will post a more complete page on our server, for it\nuse your web application website.\nWe must also give reading permits to others so that we can view it:\nAccess from customers, putting the following URL in a browser:\nFrom debian client:\nBelow we will post a more complete page on our server, for this use your web application website:\nLocal name resolution: modify the required files in the BIND service and access using the name you have indicated:\nAs I had the dns before I used this name:\nConfiguration of virtual websites using Apache The first website will have the base directory will be / var / www / iesgn and will contain a page called index.html, where you will only see a welcome to the page of the Gonzalo Nazarene Institute.\nThe second website will have the base directory will be / var / www / departments. On this site we will only have a home page index.html, welcoming the page of the departments of the institute.\nWe need to have two files to make the configuration of the two virtual sites, for that we will copy the file 000-default.conf\nOnce we have created the files we will add within each the following content:\nWe will now have to create a symbolic link in the / etc / apache2 / sites-enabled directory.\nFor these changes to be implemented, we must restart the service:\nNow we should update the dns:\nOnce the dns are restarted, we can access both sites from the browser:\nauthenticated access to the Apache web server To enable the basic authentication we must add the following lines to our site configuration file:\nNow we create the password file, with the previously created user:\nWe restart the service and connect:\nNow let\u0026rsquo;s have the department page access only the director and the teacher, and to address only the director, for that we add in departments:\nNow let\u0026rsquo;s add the users of the areas for that, we use this command:\nUser teacher to departments: Director user to departments: User to address area: We will now restart the service and check that we can access:\nWe will access departments:\nNow to the area management team:\n","date":"September 8, 2023","hero":"/images/servicios/apache/portada-apache.jpg","permalink":"https://www.javiercd.es/en/posts/servicios/apache/apache/","summary":"\u003ch3 id=\"install-an-apache-web-server-for-use-in-an-intranet\"\u003eInstall an Apache web server for use in an Intranet\u003c/h3\u003e\n\u003cp\u003eTo install the server we must run as root the following command:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/servicios/apache/img/Aspose.Words.5fca9cc1-3c81-4853-a5ed-a70b0122341b.125.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eCreate within the / var / www / html directory a file called intrada.html where you put a welcome message\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/servicios/apache/img/Aspose.Words.5fca9cc1-3c81-4853-a5ed-a70b0122341b.126.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eNow I\u0026rsquo;ll put it inside the route:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/servicios/apache/img/Aspose.Words.5fca9cc1-3c81-4853-a5ed-a70b0122341b.127.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eNext we will post a more complete page on our server, for it\u003c/p\u003e\n\u003cp\u003euse your web application website.\u003c/p\u003e","tags":["Servicios","NAT","SMR","IPTABLES","SNAT","SSH","FORWARDING","APACHE"],"title":"Apache configuration under debian"},{"categories":null,"contents":"The Address Resolution Protocol (ARP) is fundamental in computer networks to map IP addresses to physical link layer addresses (MAC). Its main function is to find the MAC address associated with a specific IP address on a local network. When one device needs to communicate with another on the same network, it uses ARP to determine the MAC address of the destination before sending data.\nDo you think the ARP question is a message of dissemination? Make a Wireshark capture of an ARP request and analyze it to justify your response. Yes, it is a message of dissemination as in the header we can see that the destination has a broadcast address. This address is the one that has all its bits at 1 which in the mac addresses is translated into FF:FF:FF:FF:FF:FF.\nWhen it comes to you, in this case to whom it has IP address 192.168.1.1 will return the request and in the origin we will get its MAC address.\nDo you think the ARP response is a message of dissemination? Make a Wireshark capture of an ARP response and analyze it to justify your response. We can see in the answer that in the destination direction comes that of the pc that I send the question, so the answer is not a broadcast message but a point-by-point communication.\nThe computers of a network store in memory a cache with the IP-MAC correspondences they know. It explains the process of updating the ARP cache after observing how it is being filled on the machines of a small GNS3 scenario with a local network with four computers connected to a switch. See how the ARP cache of all computers changes when you go ping between one computer and another. When we do a ping the issuer and the receiver \u0026ldquo;add each other to the ARP table\u0026rdquo;, if we consult them in both we will see that they are included:\nWe can see that the time they are kept in cache is 120 seconds, when this time is over, the entrance is deleted.\nWhile in the pcs that have not intervened they will not store anything in the cache arp on the \u0026ldquo;transaction made\u0026rdquo;:\nAnalyze the ip neigh command to see the possibilities it offers and think about what the real use of each of them can be. This command allows us to interact with the arp table where the IP-MAC address ratio is saved. For example, we can view it, add inputs or delete them and modify them. We can also change the time during which a request is saved in the table.\nFor example, list the content:\nWe can summarize your functions:\nShow the full ARP table: ip neighbourhood show Add an entry to the ARP table: ip near add (IP) laddr {MAC} dev {interface} Remove an entry from the ARP table: ip nearby from the {IP} dev {interface} Set the life time of an entry in the ARP table: ip neighbourhood change {IP} dev {interface} nud {state} Search for a specific entry in the ARP table: ip near 124; grep {IP} Basically this is what we need to know to be able to control the ARP tables with the IP command in replacement (or as a complement) to \u0026ldquo;arp.\u0026rdquo;\nFind out what a free ARP is and what the meaning of its existence is. It is a request issued by a device in order to update the arp table of the other devices of a network. It simply informs other network devices of its own IP and MAC address.\nThe main purpose of free ARP is to ensure that all devices on a network have the most up-to-date information possible on the IP and MAC addresses of other devices on the network.\nOne of its utilities is to detect IP\u0026rsquo;s conflicts, \u0026ldquo;this ip is already taken\u0026rdquo; this is because another team has responded with these packages.\nTherefore, from this information this incidence can be resolved.\nExplain with your words what an ARP Spofing attack is based on and how it is carried out. Can it be used as an attack technique from your home to an alien network? How could we defend ourselves against him? The attack changes the flow of data sent from a Victim PC that passes through a Gateway to make a MITM (Man in the Middle) attack by getting the victim\u0026rsquo;s traffic through an Attack machine in a manner that is safe for the victim.\nThus the attacker intercepts the messages and is able to obtain all the traffic from the network by obtaining passwords and confidential or sensitive information.\nThe steps followed by an attacker in carrying out this attack are:\nScanning the network, to get a relationship of the connected devices. Send false arp packages to associate your ip address to your own mac. Once the client has been \u0026ldquo;deceived,\u0026rdquo; the attacker will start intercepting all the traffic. These attacks only occur if the attacker gets access to your local network, so to protect ourselves we can use:\nARP Spofing detection tools. Use a firewall as it is able to block suspicious ARP packages. Use protocols like Ipsec and SSL / TLS. Configure the arp table in a static way. There are two types of switch attacks called MAC Flooding and MAC Spofing. What are they and how can we defend ourselves from them? MAC Flooding consists of filling the arp table of a network device, for example a switch and making it not able to locate to which mouth the traffic goes to if it sends it through all the mouths causing at worst to leave the device out of service.\nTo mitigate this attack it is recommended to set a limit on the size of the ARP table and the detection and blocking of suspicious traffic.\nWhile the MAC Spofing consists of falsifying a MAC address to intercept a particular traffic, it can have access to private content.\nTo mitigate this attack in the event that you supply a machine from my network and have access to content we can implement second factor authentication tools or use digital certificates.\nWe can also implement the following strategies in our network:\nStatic inputs to ARP table\nThe first solution that exists is to work with static routes in network equipment. This allows to invalidate ARP messages, because the IP is associated with a MAC address and this does not change over time. It is a simple and generally applied solution to ensure that the predetermined link door is really that of the network and not an attacker. However, it is a difficult strategy to apply if you have a network with a lot of terminals.\nDHCP snooping\nIt is a strategy that keeps a record of the MAC that are connected in each port and immediately detects if there is a subplanting. Several network equipment manufacturers incorporate this solution into their equipment, such as CISCO.\nDynamic ARP Inspection\nTo prevent the supplanting of ARP (ARP spoofing) and the resulting ARP poisoning (ARP poisoning), a switch should ensure that only ARP Requests and ARP Replies are transmitted valid.\nThe Dynamic ARP / Dynamic ARP Inspection (DAI) Dynamic Inspection requires DHCP snooping and helps prevent ARP attacks as follows:\nNot transmitting invalid or free / free ARP responses / Replies to other ports in the same VLAN. Intercept all requests / Requests and answers / Replies ARP in unreliable ports. Checking each intercepted package for a valid IP to MAC link. Discard and record invalid ARP responses to prevent ARP poisoning. Error-disabling the interface if you exceed the number of ARP DAI packages configured. RARP RARP is Reversal ARP, which means that you consult the corresponding IP from a MAC address. In case you return more than one IP address, then the MAC has been cloned.\nBibliography ip neigh arp spoofing Free ARP mitigation measures ","date":"September 8, 2023","hero":"/images/redes/arp/portada.png","permalink":"https://www.javiercd.es/en/posts/redes/arp/arp/","summary":"\u003cp\u003eThe Address Resolution Protocol (ARP) is fundamental in computer networks to map IP addresses to physical link layer addresses (MAC). Its main function is to find the MAC address associated with a specific IP address on a local network. When one device needs to communicate with another on the same network, it uses ARP to determine the MAC address of the destination before sending data.\u003c/p\u003e\n\u003ch3 id=\"do-you-think-the-arp-question-is-a-message-of-dissemination-make-a-wireshark-capture-of-an-arp-request-and-analyze-it-to-justify-your-response\"\u003eDo you think the ARP question is a message of dissemination? Make a Wireshark capture of an ARP request and analyze it to justify your response.\u003c/h3\u003e\n\u003cp\u003eYes, it is a message of dissemination as in the header we can see that the destination has a broadcast address. This address is the one that has all its bits at 1 which in the mac addresses is translated into FF:FF:FF:FF:FF:FF.\u003c/p\u003e","tags":["Redes","ARP"],"title":"ARP Protocol"},{"categories":null,"contents":"Dnsmasq The dnsmasq package allows you to start a DNS server in a very simple way. Simply by installing and starting the dnsmasq service, without any additional configuration, our PC will become a DNS cache server and will also solve the names we have configured in the / etc / hosts file of our server. The resolution will work both directly and inversely, that is, it will solve the IP given a PC name and the PC name given the IP.\nInstallation To install it only the following command will be necessary:\nConfiguration Then we edit the / etc / dnsmasq.conf file and modify the following lines:\nWe discomment strict-order for DNS requests to be made to the servers that appear in the / etc / resolv.conf file in the order in it appear. 2.We include network interfaces that must accept DNS requests, discomment the interface line for example: interface = eth0\nWe will now create our configuration file:\nWe create the configuration file of our area: The domain we have chosen is iesgn.org We assume that the name of the server is miseror. 6.We will assume that we have a ftp server called ftp.iesgn.org and that it is in 192.168.1.201 (this is fictitious) and that we have two websites: www.iesgn.org and departments.iesgn.org.\nWe also want to name the client who had a reservation assigned: smooth. We restart the service modification on DHCP server Configure the customers and indicate that your DNS is our server. If you have a DHCP server modify it to send the new DNS to the customers.\nWe edit the file:\nAnd we restart the service:\nNow we\u0026rsquo;ll check if the client has changed our dns by looking at the following file:\nWe have been successfully changed.\nCommand to check the operation of dns Check the operation using the dig / nslookup command from the customers asking for the different names. Check that the DNS server makes forwarder asking with dig / nslookup the address ip of www.josedomingo.org.\nFor the Jose Sunday page the answer is unauthorized because our server does not have the resolution in your file and has to use a forwarder\nAs you see above I have created my own area and despite having followed the steps of this [page] (https: / / www.josedomingo.org / pledin / 2020 / 12 / servo-dns-dnsmasq /) of Jose Domingo, I have not managed to get the answers authorized.\nI created the dns.conf file.\nAnd I created my area:\nI have also tried more things however the only way I have got to give me an authorized response is by having only the resolutions in the host file of the server, without creating my area.\n","date":"September 8, 2023","hero":"/images/servicios/dns/dnsmasq.png","permalink":"https://www.javiercd.es/en/posts/servicios/dns/dnsmasq/instalacion_basica/dnsmasq/","summary":"\u003ch3 id=\"dnsmasq\"\u003eDnsmasq\u003c/h3\u003e\n\u003cp\u003eThe dnsmasq package allows you to start a DNS server in a very simple way. Simply by installing and starting the dnsmasq service, without any additional configuration, our PC will become a DNS cache server and will also solve the names we have configured in the / etc / hosts file of our server. The resolution will work both directly and inversely, that is, it will solve the IP given a PC name and the PC name given the IP.\u003c/p\u003e","tags":["Servicios","NAT","SMR","DHCP","SNAT","DNS","DNSMASQ"],"title":"DNS server configuration in Debian"},{"categories":null,"contents":"FTP server under debian Installation and configuration of the authenticated proFTPd server First we will create a group called ftpgroup: Create two local users from the ftp group we have created: Jose and Maria\nWe install the ftp service: Basic configuration of the proftpd.conf file: All users access your directory only:\nWe can now access from the browser with users Jose and Maria:\nEach of these I have created a folder with your name within your personal directories in order to identify them.\nIn order for each user to really connect to the FTP server in Debian and you can upload and download the data into your own directory, you must enter your input directory into proftpd.conf:\nWe can transfer files correctly:\nProFTPd configuration to create anonymous ftp The first thing we have to do is create the directory and give it the right owner:\nNow we will change this rule and allow everyone to join:\nWe also add the following lines and will indicate the route to which the anonymous will access:\nSo when we reboot, anonymous users can connect:\nBut not with the users we\u0026rsquo;ve created before:\nTo allow our users to connect in addition to the anonymous:\nNow we apply these changes and try to connect. We see that with anonymous we can\u0026rsquo;t copy anything to the server but if we can download.\nNow with a group user, we can copy files:\n","date":"September 8, 2023","hero":"/images/servicios/ftp/portada-ftp.png","permalink":"https://www.javiercd.es/en/posts/servicios/ftp/ftp/","summary":"\u003ch2 id=\"ftp-server-under-debian\"\u003eFTP server under debian\u003c/h2\u003e\n\u003ch3 id=\"installation-and-configuration-of-the-authenticated-proftpd-server\"\u003eInstallation and configuration of the authenticated proFTPd server\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eFirst we will create a group called ftpgroup:\n\u003cimg src=\"/servicios/ftp/img/Aspose.Words.5fca9cc1-3c81-4853-a5ed-a70b0122341b.160.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eCreate two local users from the ftp group we have created: Jose and Maria\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg src=\"/servicios/ftp/img/Aspose.Words.5fca9cc1-3c81-4853-a5ed-a70b0122341b.161.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003col start=\"3\"\u003e\n\u003cli\u003eWe install the ftp service:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg src=\"/servicios/ftp/img/Aspose.Words.5fca9cc1-3c81-4853-a5ed-a70b0122341b.162.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003col start=\"4\"\u003e\n\u003cli\u003eBasic configuration of the proftpd.conf file:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eAll users access your directory only:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/servicios/ftp/img/Aspose.Words.5fca9cc1-3c81-4853-a5ed-a70b0122341b.163.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eWe can now access from the browser with users Jose and Maria:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/servicios/ftp/img/Aspose.Words.5fca9cc1-3c81-4853-a5ed-a70b0122341b.164.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/servicios/ftp/img/Aspose.Words.5fca9cc1-3c81-4853-a5ed-a70b0122341b.165.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eEach of these I have created a folder with your name within your personal directories in order to identify them.\u003c/p\u003e","tags":["Servicios","NAT","SMR","IPTABLES","SNAT","SSH","FORWARDING","APACHE","FTP"],"title":"FTP under debian"},{"categories":null,"contents":"You will learn to configure switches in GNS3, both generic devices and Cisco switches, using the VLans concept to segment the network and explore the complexities of network management.\nStage preparation The first thing I\u0026rsquo;ll do is set up the stage:\nCustomer network configuration Then set up the network cards of the customers, taking advantage that the NAT cloud includes a DHCP server.\nTo do this, we write on the VPCS the following command:\nExercise A 1 PC1 and PC3 belong to VLAN 10, PC2 and PC4 belong to VLAN 20. It shows the correct functioning of both VLAN and that there is no connectivity between PC2 and PC3. Can you do it with the Ethernet switches that GNS3 brings? You find any limitations? What are the different types (types) that a port can have and where do they differ?\nTo configure the VLANS in the switches, we right-click and then we make the following configuration:\nFor switch 3 (PC1 and PC2)\nFor switch 2 (PC3 and PC4)\nFor switch (PC5 and NAT1)\nPC1, you will only have connectivity with the PCs that belong to your VLAN:\nPC2, you will only have connectivity with the PCs that belong to your VLAN:\nWith their respective partners from the other switch we will get the same result. PC3, you will only have connectivity with the PCs that belong to your VLAN:\nPC4, you will only have connectivity with the PCs that belong to your VLAN:\nWe have to keep in mind that devices that do not belong to the VLAN 10 must be manually configured as they do not have connectivity to the DHCP server.\nExercise A can do it perfectly with the switches that GNS3 brings, we will find an important limitation, as the switches only allow the mouths to belong to a VLAN.\nIn performing the exercise we must take into account the types that a port can have, the ones we have used are the first two:\nAccess: This is the one for a final team, that is a customer, as it is responsible for removing the labelling that goes on the header. Dot1q: This is in charge of interconnecting network devices with each other, is in charge of adding the labelling in the header to send the package to another device and let it know to which VLAN belongs. QinQ: It is similar to dot1q but it is also in charge of adding the type of package to the label to identify them. With this in mind we can do an analogy with the practice of physical switches: The untagged ports \u0026ndash;\u0026gt; Access\nThe ports tagged \u0026ndash;\u0026gt; Dot1q\nBy using these switches protocol 802.1Q but \u0026ldquo;with less functions\u0026rdquo; we cannot indicate that VLANS we want you to use the ports configured as Dot1q, but that through the VLAN by default pass the labelled packages of all VLANS.\nExercise B 2 All computers must be able to access the data server, but only PC1 and PC3 must access the Internet. They will do it through your physical machine using the element called NAT, which you will need to understand and configure. Can you do it with the Ethernet switches that GNS3 brings? What limitation do you find? To overcome this limitation, download the CISCO 3725 as application and use it instead of the Ethernet switches by setting them up properly.\nSwitches Ethernet Here we find the first limitation of these switches, as we can only have 1 VLAN per port this means that only a VLAN will have access to these resources.\nAs we want only VLAN 10 to browse the Internet we will set the mouth of our cloud to a mouth with access type and belong to this VLAN:\nSo for this point there is no problem, our PC1 and PC3 will both be able to browse the Internet:\nAs these 2 PCS belong to the same VLAN that the NAT cloud can communicate smoothly and use the DHCP server that includes the same to configure. While PC2 and PC4 cannot navigate or be configured by DHCP by not belonging to the same VLAN as the NAT cloud:\nWith the data server we will run into the limitation as only a port can belong to a VLAN, only a couple of our PCs can communicate. This could be avoided by setting up the server as a \u0026ldquo;real machine\u0026rdquo; with 2 virtual interfaces and telling the switch that each one belongs to a different VLAN.\nCISCO 3725 To start using this device, we will have to add space to the disk so that we can start it, and we can add the 16-mouth Ethernet module by default so we won\u0026rsquo;t have to do it by hand later.\nTo make this configuration we must have imported the router and access Edit \u0026gt; preferences \u0026gt; IOS routers.\nOnce the template is modified, we will place the 3725 on the stage and set up the same scenario:\nWe must bear in mind that the FastEthernet0/0 and FastEthernet0/1 interfaces work as routers, that is, we cannot use them as switch. The ports that behave as a switch are all of FastEthernet1 so it will be the ones we use.\nWe will then tell these ports that they have to work as if they were a switch for it we will introduce the following commands in each of the 3725.\nWe will now create the vlans using the following commands, for each of the switches:\nWe can list them with the following command:\nWe will now assign your corresponding VLAN to the ports:\nThen we will configure the port that unites the two 3725, for this we put it in trunk mode and allow the encapsulated traffic of all the VLANS through this port.\nFinally, we will save the changes so that if the equipment is turned off, it will maintain the modifications we have made:\nWith this we will have configured the first 3725, its homologue to this, that is to say the one that connects to PC3 and PC4, we would have to do the same adapted to the ports in which the devices are connected.\nWe will continue to configure the 3725 that unites both \u0026ldquo;switches\u0026rdquo; and gives output to the data server and the Internet. For this we will create VLANS 10 and 20:\nAnd we will assign both VLANs to the data server, while only VLAN 10 will be assigned to the internet connection.\nWe will now set up the interfaces that interconnect the switches:\nThen we will create the two subintrants to allow traffic between them and we will assign you ip addresses.\nNow the data server will connect it to the Fe0/0 port and in it will create two subintrants, I will use a debian machine. This will be done by editing it on network interfaces:\nWe check that the interfaces are up:\nWe will now create the routing routes:\nOnce this is done, we can do ping to the data server from the two interfaces:\nWe can ping the data server and we will have connectivity with the:\nWe see that the traffic is able to reach the data server however it is not able to \u0026ldquo;make the way back.\u0026rdquo;\nI have also set up inter vlan routing, following the links of the literature but it has not worked for me either.\nExercise C It answers the following questions on the above paragraphs:\nC.1 What about the direction when you add the NAT cloud? What is the reason for this change?\nWhen we put the NAT cloud, it includes a DHCP server which has the address ip 192.168.122.1 and assigns addresses to the network 192.168.122.1/24. Through the configuration provided by this will allow us to browse the Internet.\nC.2 Why is it necessary to assign a hard drive to each of the devices and what minimum size should it have for the scenario to work?\nFor the 3725 cisco routers, for it to start and exceed the initial check it must have at least 1MB space, and if we want to save the settings this will be necessary. For example to save the information of the vlans it will be necessary.\n**C.3 What is the difference between setting up a switch port in mode **access **and mode **trunk and when each of them should be used?\nThe access mode is designed to connect a final client that is, a pc. It is the equivalent of the \u0026ldquo;untagged port,\u0026rdquo; however this has a limitation which is that it can only belong to a van, this port is also in charge of removing the header that the trunk ports add so that the final devices can understand the packages.\nOn the other hand, the trunk mode allows to connect a network device to another, for example a switch to another switch, would be the equivalent of a \u0026ldquo;tagged port,\u0026rdquo; this also allows the traffic of several vlans, tagging the tracks so that the other devices can interpret the VLAN to which the package belongs.\nExercise D **Now replace PC1 and PC3 with two machines **Linux with Firefox installed (you can find the images in the GNSS Market Place) and check that they navigate correctly.\nWe added it to the stage and connected them to the same mouths that our VPCS had to maintain the previous configuration of the VLANS and have access to the NAT cloud.\nOnce this is done, we will access the machine interface and configure your network card by DHCP, so we will access the control panel:\nIn the control panel we access network to configure the network:\nIn the network panel we will say to use DHCP and save the configuration:\nIn the terminal we can make sure that the network configuration has been performed correctly.\nAnd we can see that by doing this procedure we can already navigate with the tinycore with Firefox:\nHere\u0026rsquo;s the test with the second tiny core:\nExercise E Set up a Port Bonding between the header switch and the other two. It shows its proper functioning and explains in detail how you set it up. Explain the lags that a carrier can have.\nThen we must set up the extra ports we have added to the stage to be in trunk mode and respect our scenario with the VLANS, is to repeat what we have done before.\nThe first thing we will have to do will be to create the logical interfaces, however this step can be omitted as later if the interface does not exist it will automatically create it.\nWe will indicate that interfaces we want them to belong to the port-channel 1 for the logical link between R1-R2 and to belong to the port-channel 2 for the logical link between R2-R3.\nFor R1-R2:\nFor R2-R1:\nFor R2-R3:\nFor R3-R2:\nWe can also configure the EtherChannel as a trunk link, and so we get statistical multiplexation of the traffic of the VLANs and that when one link falls it still works with both VLANs. We will do this with all the logical links:\nOnce this is done we can check if the etherchannels are working:\nThe EtherChannel configuration can be done using one of these protocols: Port Aggregation Protocol (PagP) or Link Aggregation Control Protocol (LACP). Both ends must be configured in the same way.\nThese have a series of \u0026ldquo;modes\u0026rdquo; in which the behaviour of the port will change when creating links:\non: In this mode, group member links will be added manually and not automatically monitored. This mode is used when you want to have greater control over group member links. desirable: In this way, the switch will try to negotiate with the connected device at the other end of the link. If the other end device is also configured in \u0026ldquo;desirable\u0026rdquo; mode, the link will be automatically added. car: In this mode, the switch will not attempt to negotiate but will automatically add the link if the connected device at the other end of the link is configured in \u0026ldquo;desirable\u0026rdquo; mode. active: In this mode, the switch will constantly send LACP PDUs to determine whether the connected device at the other end of the link is available and also configured to use LACP. If the other end device is available and also configured to use LACP, the link will be automatically added. Exercise F Port Mirroring: Connects a PC5 to Switch1 and monitors the traffic leaving PC1. It makes a Wireshark capture in the PC5 mouth and explains the traffic captured.\nThe first thing we will do is set up the port mirroring, in my case will send the traffic from the 1 / 5 mouth to the 1 / 4.\nI will make the pc5 a ping to google and monitor the cable that goes from the router to pc4, to check that the port mirroring is working:\nWe see that we have been able to \u0026ldquo;intercept\u0026rdquo; a ping, coming from the ip6 address.\nThis will make the incoming and outgoing traffic from the port we have put as a sniffer send it back to the port we hear.\nWe can check the status of the port viewing session with this command:\nBibliography Switching and GNS3 The NAT node Simulando switch cisco en GNS3 GNS3, adding hosts to our topologies Working with switch in GNS3: VLAN and Trunk LACP and PAGP InterVLAN routing VLAN routing Configure Port Bonding Link Aggregation Control Protocol (LACP) and Port Aggregation Protocol (PAGP) Wiki EtherChannel Inter VLAN Communication ","date":"September 8, 2023","hero":"/images/redes/switches_gns3/portada.png","permalink":"https://www.javiercd.es/en/posts/redes/switches_gns3/configuracion_de_switches_en_gns3/","summary":"\u003cp\u003eYou will learn to configure switches in GNS3, both generic devices and Cisco switches, using the VLans concept to segment the network and explore the complexities of network management.\u003c/p\u003e\n\u003ch3 id=\"stage-preparation\"\u003eStage preparation\u003c/h3\u003e\n\u003cp\u003eThe first thing I\u0026rsquo;ll do is set up the stage:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/redes/switches_gns3/img/Aspose.Words.1880b7c0-3050-4e53-a32a-505911fdf872.001.jpeg\" alt=\"\"\u003e\u003c/p\u003e\n\u003ch3 id=\"customer-network-configuration\"\u003eCustomer network configuration\u003c/h3\u003e\n\u003cp\u003eThen set up the network cards of the customers, taking advantage that the NAT cloud includes a DHCP server.\u003c/p\u003e\n\u003cp\u003eTo do this, we write on the VPCS the following command:\u003c/p\u003e","tags":["Redes","Wireshark","GNS3","Cisco","Switches"],"title":"GNS3 switch configuration"},{"categories":null,"contents":" **This post was developed for Debian 11. If you have a more recent version, you can review the Debian 12 post you will find in the network section of the same page. The only part you should not follow if you meet this condition is the installation of GNS3. The rest of the content is still valid.\n\u0026ndash;\u0026gt;\n1. Introduction Wireshark is a protocol analyzer used to analyse and solve problems in communications networks, for data and protocol analysis, and as a didactic tool.\nAdd a graphic interface and many organization and filtering options. So, it allows you to see all the traffic that passes through a network by setting the configuration in promiscuous mode of our network card. It also includes a text-based version called tshark.\nIt allows you to examine data or a saved capture file on disk. The information captured can be analysed through the details and summaries for each package. Wireshark includes a complete language to filter what we want to see and the ability to show the reconstructed flow of a TCP session.\nWireshark is free software, and runs on most Unix and compatible operating systems.\nThe minimum requirements for using this software are:\nAny modern AMD64 /x86-64 64 bit or 32 bit x86 processor. 500 MB RAM available. The larger capture files require more RAM. 500 MB of available disk space. Capture files require additional disk space. Any modern screen. A resolution of 1280 × 1024 or more is recommended. Wireshark will use HiDPI or Retina resolutions if available. Advanced users will find several monitors useful. A compatible network card to capture 1.1 Download the package in due To download the package on our computer we will need to look at the official page downloads if it includes support for our operating system.\nWe see that no GNU/Linux operating system appears on the list, this is because Wireshark is available through the default packaging system on most of these platforms. That is to say this present in the repositories of our distribution, in the event that it is not there we have the source code as a free software and we could compile it.\nWe can check if it is available in our operating system by visiting the official page:\nWe see that Debian appears on the list this means that the package is in the official repository of due.\nIn Debian we have the apt package manager, so we can check the version of the package available for installation and check from when repositories are downloaded with the following command:\nTo perform the wireshark installation we will enter the following command:\nThen to make network catches on the equipment we will need permissions for our user to do so, we will use the following command:\n1.2 Operating check We will now open the program to check that everything works properly:\nNow we will start a package capture for it if we want to do it on a specific interface we press on it, in my case I will use the wlo1 wireless network card and I will make a web request to the jagger.es page.\nHere I show you the DNS request that has traveled from my laptop to the router.\n1.3 General wireshark components Wireshark makes use of certain packages:\n**Wireshark:**the network protocol analyzer we all know. **TShark:**a command line network protocol analyzer. **Supplements and extensions:**extras for Wireshark and TShark dissection engines **Dissector supplements:**supplements with some extended dissections. Complements of tree statistics: Extended statistics. **Mate:**monitoring engine and meta analysis: user-configurable extensions of the screen filter engine; see Chapter 12, MATE for more details. **MIB **of SNMP: SNMP MIB for a more detailed SNMP dissection. **Tools:**additional command line tools to work with capture files **Editcap:**reads a capture file and writes some or all of the packages in another capture file. **Text2Pcap:**reads an ASCII hexadecimal overflow and writes the data in a pcap capture file. **Reordercap:**reorders a capture file by time mark. **Mergecap:**combines several captured files saved in a single output file. **Capingos:**provides information about the capture files. Rawshark: unprocessed package filter. **User guide:**local user guide installation. The Help buttons in most dialog boxes will require an Internet connection to show the help pages if the User Guide is not installed locally. 2 Installation of GNS3 in Debian 11 2.1 Introduction GNS3 is a graphical network simulator launched in 2008, which allows you to design complex network topologies and launch simulations on them, allowing the combination of both real and virtual devices.\nTo complete simulations, GNS3 is closely linked to:\n**Dynamipes:**an IOS emulator that allows users to run IOS images. **Dynagen:**a text-based front-end for Dynamips. Qemuand **VirtualBox:**to allow the use of virtual machines such as a PIX firewall or workstations. **VPCS:**a PC emulator with basic networking functions. IOU:(IOS in Unix), special IOS compilations provided by Cisco to run directly on UNIX systems and derivatives. The minimum requirements for making use of this tool are:\n**Processor:**2 or more logical cores **Virtualization:**Virtualization extensions are required. You may need to enable this through your computer\u0026rsquo;s BIOS. **RAM memory:**4 GB RAM **Storage:**1 GB of available space (Windows installation is \u0026lt; 200 MB). **Additional notes:**You may need additional storage for your operating system and device images. 2.2 Installation The first thing we will do before we install will be to check that our system is up-to-date, so we will make an apt update and if we have outdated packages we will make an apt upgrade.\nBelow we will install all the units you need GNS3:\nI will now describe the function of the packages that we will install:\nPackage Description python3-pip The pip module is the package installer for Python. python3-pyqt5 The PyQt5 module exposes the Qt5 API to Python 3. python3-pyqt5.qtsvg The PyQt5 SVG module provides classes for displaying the contents of SVG files. python3-pyqt5.qtwebsockets The PyQt5 WebSockets module provides Python 3 bindings for the WebSockets specification (both client and server). qemu Virtualization software, currently divided into several packages. qemu-kvm Full system emulation binaries for QEMU. qemu-utils Utilities for QEMU emulation. libvirt-clients Libvirt is a set of C tools for interacting with the virtualization capabilities of recent Linux versions. libvirt-daemon-system This package contains configuration files to run the libvirt daemon as a system service. virtinst This package contains command-line utilities for creating and editing virtual machines. wireshark A network analyzer that captures packets for further analysis. xtightvncviewer A remote display system that allows you to view a \u0026lsquo;desktop\u0026rsquo; environment not only on the machine where it is running but from anywhere on the Internet. apt-transport-https This is a dummy transitional package: support for HTTPS. ca-certificates Contains the certificates of the certificate authorities included in the Mozilla browser to enable SSL-based applications. curl curl is a command-line tool for transferring data with URL syntax. gnupg2 Can be used to encrypt data and create digital signatures. It includes an advanced key management feature and complies with the proposed OpenPGP Internet standard. software-properties-common Allows you to easily manage your distribution and software sources from independent software vendors. Once these packages are installed, we will download GNS3 using pip3:\nWe will also look at the command output to check for any errors:\nThe following will be to install docker, which will allow us to create containers. For this we will import your GPG key so that our system trusted the:\nThe following will be to add the repository to our system for this we will use the following command:\nWe will update the repositories you use apt by making an apt update:\nAnd we can finally install docker:\nAdd the following lines to your /etc/apt/sources.list, so that we can install dynamps and ubridge:\nIn order to install the necessary packages of these repositories, we will add the gpg keys of it:\nWe will update the repositories you use apt by making an apt update:\nWe will install the Dynamips and ubridge packages:\nA box like this will come out to indicate if users who are not superusers can capture packages, we will tell you that if in our case:\nTo avoid accidental installation of anything else in that repository (for now), delete or comment those two lines in your /etc/apt/sources.list file and make an apt update:\nWe can also remove the GPG key from these repositories if we want to:\nWe will add users who will use the tool to the following groups:\nReset your user session by closing and relaunching it, or by relaunching the system to apply these changes.\n2.3 Our first topology in GNS3 Once the system is restarted, we will start the application, and we will get a box like this:\nHere we will indicate that I will run the applications locally in my machine. Below we will select the server route, host name and associated port:\nIf everything has been right, he will tell us that it has been done correctly:\nWhen we open the program, it will give us a choice to create a project or we can create a new one, in my case I will create one:\nIf we look at the left side of the program, we will see the following symbols, which serve the following purposes:\nWe will add by dragging 2 VPCS:\nWe\u0026rsquo;ll add an Ethernet swicht:\nWe will click on the Add a link button to stop adding links, so we would have the scenario:\nWe can make visible the interface to which we have connected them by clicking on the following button:\nThe green \u0026ldquo;Play\u0026rdquo; button in the GNS3 toolbar will power on all devices in the topology, while the yellow \u0026ldquo;Pause\u0026rdquo; button will suspend them, and the red \u0026ldquo;Stop\u0026rdquo; button will power off everything in the topology.\nWe\u0026rsquo;ll get a warning, so we can confirm if we want to add all the devices, we\u0026rsquo;ll give you if:\nWe will see that both left in the device summary and in the outgoing connections of the devices their state \u0026ldquo;light\u0026rdquo; to changed from red to green, since these are now on:\nWe will now open a terminal on all of our VPCS with the following button:\nThrough these terminals we will assign ips addresses to our devices with the following command:\nOnce the network cards are configured, we will check for connectivity between them by doing a ping:\nWe will add a third VPCS to our scheme:\nWe will turn it on and open a terminal to configure it as we have done with the above:\nAnd I\u0026rsquo;ll check that this new machine has connectivity to the above:\nIf we want to save our equipment settings we will enter the save command:\n2.4 Internet access via NAT on GNS3 The easiest way to get access to the Internet is through the NAT cloud.\nThis has Internet access as well as a DHCP service running with IPV4. To make use of it, we will put it on our stage and connect it on a swicht.\nThen if we want to get out on the Internet, we will have to set up our customers to get them the right network configuration. We\u0026rsquo;ll take advantage we have a DHCP server.\nFor customers to configure through this service we will enter the dhcp command:\nWe\u0026rsquo;ll try to do a ping to google.es to check the connectivity:\n3 Common problems in installation 3.1 VPCS error exectable version must be \u0026gt; = 0.6.1 but not 0.8 This error comes when installing the VPCS, a version that does not currently support the program is downloaded from the repositories.\nLuckily it is very easy to solve, we will access the repository of the developer in github and we will download the following package:\nOnce downloaded we will uncompress it using the following command:\nWhere we do this command will create a directory in which we will access to compile the program:\nWe will run the following script:\nThe vpcs directory will create us on this route, this one will have to be added in gns3:\nWe will access gns3, press CTRL + SHIFT + P to access the preference panel. Once here we move to the vpcs section and select the directory route we just generated:\nWe applied the changes and we could already use the vpcs.\n3.2 Xterm not installed This error appears when we want to access a console of a device of our network typology. To solve this problem the first thing is to close GNS3 and then direct to a terminal to download it, we will use the following command:\nWe\u0026rsquo;ll reopen the program and we can access the consoles of our machines.\n4 Install IOS images If we want to add to our real hardware system as can be a swan router for example we must access the official GNS3 page and download specifically the one we want to add in my case I will add a swan 3725.\nIf we click on the download button we will download an extension file, which is a template.\nIf you look at this case we do not have the possibility to download the image from this repository, it tells us that there is no link available. For these cases there is a cisco repository which has all the images of its products \u0026ndash;\u0026gt; tfr.org/cisco-ios\nTo find out which one to get from here, we will open gns3 and through the top left menu we will click on the file \u0026gt; import applilance section, select the template that we will import. We will give you to install on our local computer:\nOnce here we are, we will see the name of the file and search it in the external repository, as we can see that the file is not found\nIn this case I will download, this version that matches the template I have downloaded:\nWhen we have done this we will have the following problem, the image signatures will not match to mitigate that step we will mark the option allow custom files at the bottom and import the binary we have just downloaded:\nPlease inform us that for the selected template, the file we downloaded from the repository does not match the hashes. In our case it is normal since the image is not the same as it would have to come with the template, so we will accept the risks.\nWe\u0026rsquo;ll see you change the state to ready to install, so we\u0026rsquo;ll give you the next on the bottom.\nYou will ask us for confirmation to add our device, we will confirm the action:\nPlease inform us that our device has been added to the router templates for this case.\nAlso inform us of the name given to you.\nAs I tell us, we\u0026rsquo;ll find it in the routers section:\nNow we\u0026rsquo;ll do a little running test, add it to our stage and check that we can start it and connect to the console:\n\u0026lsquo;We\u0026rsquo;ll see the connection to the console is correct:\n5 Installation on GNSS Windows 5.1 Packages needed for Windows Even if we have installed the GNS3 software it will make use of additional packages to perform some functions or even add new features such as emulating routers of certain manufacturers.\nArticle Required Description WinPCAP Required Required to connect GNS3 to your computer network. Used by Cloud and NAT nodes to allow your projects to communicate with the outside world. Npcap Optional The modern replacement for WinPCAP, known to solve issues but is less tested than WinPCAP. Install Npcap with the \u0026ldquo;Support WinPcap API mode\u0026rdquo; option selected if used without WinPcap. Npcap can coexist with WinPcap if that option is not selected. Wireshark Recommended Allows you to capture and view network traffic sent between nodes. Dynamips Required Required to run a local GNS3 installation with Cisco routers. QEMU 3.1.0 and 0.11.0 Optional Virtualization software. The older version of Qemu 0.11.0 is installed to support legacy ASA devices. It is recommended to use the GNS3 VM instead. VPCS Recommended A very lightweight PC emulator that supports basic commands like ping and traceroute. Cpulimit Optional Used to prevent QEMU from using 100% of your CPU (when running) in some cases, such as with legacy ASA devices. GNS3 Required The main GNS3 software. This is always mandatory. TightVNC Viewer Recommended A VNC client used to connect to device graphical user interfaces. Solar-Putty Recommended The new default console application. Virt-viewer Recommended Alternative viewer for Qemu desktop virtual machines that have qemu-spice preinstalled. Intel Hardware Acceleration Manager (HAXM) Optional Only available on systems with Intel CPUs (and VT-X enabled) that are not using Hyper-V. Used for hardware acceleration of Android emulation as well as QEMU. 5.2. Minimum requirements For small environments on Windows developers require to have at least the following features:\nFeature Requirements Operating System Windows 7 (64-bit) or later Processor 2 or more logical cores Virtualization Virtualization extensions are required. You may need to enable this in your computer\u0026rsquo;s BIOS. Memory 4 GB of RAM Storage 1 GB of available space (Windows installation is \u0026lt; 200 MB). 5.3 GNSS 3 installation The first thing that we will have to download the official executable of your website, for this we will have to be registered in advance.\nWe will launch the executable and ask for the permission of the administration, we will grant them:\nA screen will come out informing us about the product, we give it to next.\nWe will then have to accept the terms and licences for use:\nYou will ask us where we want to create the shortcuts of the program, I will leave it by default as this will add them to the desktop:\nNext, we need to pay close attention because we must select local installation and all the packages we intend to use. If we have already installed any of them beforehand, we should uncheck them (those mentioned in section 5.1).\nWe will select the route where the program is installed, I will leave the default. It also informs us of the space required by the installation:\nWe will wait for the installation:\nWinCap installation\nRequired to connect GNS3 to your computer network. Used by the Cloud and NAT nodes to allow their projects to communicate with the outside world.\nAs the installation of GNS3 is carried out, the installation of all the programs we have previously marked will begin.\nIt will show us information about the program this first window so we give you the following:\nWe accept the license of terms and use:\nWe mark the option for you to automatically boot the driver and we give you to install\nIt informs us that the installation was correct and we close the window:\nNcap installation\nThe modern WinPCAP replacement can solve problems but is less proven than WinPCAP.Instale Npcap with the selected \u0026ldquo;WinPcap API-compatible mode\u0026rdquo; option, if used without WinPcap.Npcap can coexist with WinPcap, if that option is not selected.\nAgain the same process, we accept the terms and licenses of use.\nWe leave the default marked option and give it to install\nWhen the installation is finished we give you the following:\nAnd we close the installer:\nWe return to GNS3 because the installation process was paused while we installed the components it will use. It will resume automatically.\nOnce the installation is finished, we give you the next\nGNS3 offers us a free Solarwinds license, we will give you if:\nWe will have successfully completed the installation of GNS3\nWe will open the program and select to run the devices in our local machine:\nHere we will configure our local GNSS server 3\nPreviously leave it by default, if our configuration is correct, it will tell us that the connection has been performed successfully:\nIt will show us a summary of the configuration given above:\n5.4 Operating test We will set up the same scenario as in debian to check its operation, the process is the same.\nWe will set up the ips addresses of the machines and check that they have connectivity through solarputty.\nPC1:\nPC2:\nWe can see that both teams have connectivity across the stage.\n6 Wireshark installation on Windows 6.1 Installation The installation of this product is very simple, if we have installed GNS3 previously and marked the box of this, we will have been installed automatically.\nOn the contrary, if we start from scratch we can do your installation, let\u0026rsquo;s get it off your official website:\nWhen we open the installer you will ask us for administrator\u0026rsquo;s permissions, we will grant it to you:\nIf, like I installed it with GNS3, we were to find that there is already one installed, so I will cancel it.\nIf we didn\u0026rsquo;t have it the installation is identical to any program we have installed in practice. Here I show you, the first thing you\u0026rsquo;ll see is an executable information screen:\nLike all programs you will be asked to accept the terms and conditions of use:\nWe will select the products we want to install in my case all:\nIt will also ask us to access them directly and where we want to create them.\nWe will select the route where we want it to be installed:\nWe will select if we are interested in the Ncap package. (We have installed it with GNS3)\nNext you will ask us to install the extension that allows us to analyze USB traffic, in my case the desmarcare as I am not interested.\nWe will wait for the installation to complete and give you the following:\nPlease inform us that the installation has been properly performed:\n6.2 Operating test I have made a DNS request to www.sevillafc.es and here we can see the DNS consultation:\n7 GNSS VM If we want to deploy virtual machines in a virtual instance we will deploy the virtual machine that gives us GNS3 to carry the Virtualization charge.\nWe will download the OVA from the official website\nOnce downloaded we will import it into Vmware and give you the hardware features we consider appropriate:\nOnce I do this we will open GNS3 and edit the preferences of GNSS VM and select the virtual machine that we just imported:\nWe will start the virtual machine and we can see the data from it in the info tab:\nWe will launch the set-up wizard from the GNS3 help tab and select the option to run the stacks in a virtual machine:\nWe will select the configuration of our virtual machine:\nWe will again select our virtual machine and the hardware features we want:\nWe would only have to import the devices into the virtual machine, this does just like we did before changing the place where we imported it:\nIf we want to see where a device will run we can see it through preferences:\nWe can also see in section servers sumarry the resource consumption of our machines:\n8 Conclusion We can see that the installation is infinitely more comfortable on Windows as it automatically installs your dependencies, being the typical \u0026ldquo;next to next\u0026rdquo; installation.\nAlso on Windows when the installation was finished the product was ready to use and I have not suffered any errors when starting the program or using its features as if it happened to me in Debian.\n9 Bibliography Official documentation Wireshark Debian Wireshark package Minimum Wireshark requirements Error \u0026ldquo;VPCS executable version must be \u0026gt;= 0.6.1 but not 0.8\u0026rdquo; VPCS download ","date":"September 8, 2023","hero":"/images/redes/instalacion_wireshark_gns3/portada_instalacion_wireshark_gns3.png","permalink":"https://www.javiercd.es/en/posts/redes/instalacion_wireshark_gns3/instalacion-gns3-y-wireshark/","summary":"\u003cblockquote\u003e\n\u003cp\u003e**This post was developed for Debian 11. If you have a more recent version, you can review the Debian 12 post you will find in the network section of the same page. The only part you should not follow if you meet this condition is the installation of GNS3. The rest of the content is still valid.\u003c/p\u003e\u003c/blockquote\u003e\n\u003c!-- \u003c! --! [2] (/ images / networks / installation _ wireshark _ gns3 / cover _ installation _ wireshark _ gns3.jpeg) --\u003e\n\u003cp\u003e\u003cimg src=\"/images/redes/instalacion_wireshark_gns3/Aspose.Words.7be2264a-b643-4cb1-9a61-896b263a0d52.003.jpeg\" alt=\"\"\u003e \u0026ndash;\u0026gt;\u003c/p\u003e","tags":["Redes","Wireshark","GNS3"],"title":"Installation GNS3 and Wireshark in Debian"},{"categories":null,"contents":"Configuring the DHCP Server on Debian In this article, you will learn how to configure the isc-dhcp-server. Additionally, we will configure an IP reservation and set it up to operate on two different scopes.\nHere is my DHCP server\u0026rsquo;s network configuration:\n# Router external network auto ens4 iface ens4 inet dhcp # Internal network 1 auto ens5 iface ens5 inet static address 192.168.10.1 netmask 255.255.255.0 # SNAT for ens5 network , ensure that bit of forwarding is activated. post-up iptables -t nat -A POSTROUTING -o ens4 -j MASQUERADE post-down iptables -t nat -D POSTROUTING -o ens4 -j MASQUERADE # Internal network 2 auto ens6 iface ens6 inet static address 192.168.20.1 netmask 255.255.255.0 Installing the isc-dhcp-server To install the DHCP server on Debian, run the following command:\nsudo apt update \u0026amp;\u0026amp; sudo apt install isc-dhcp-server When APT finishes, it will return an error indicating that the service is misconfigured. You can ignore this for now as we will configure it next.\nConfiguring the isc-dhcp-server service First, we need to configure the network interface that the DHCP server will operate on. Edit the interface configuration file:\nsudo nano /etc/default/isc-dhcp-server Add the interface that will distribute IP addresses, for example for network1:\nINTERFACESv4=\u0026#34;ens5\u0026#34; Then we configure the DHCP server with the following characteristics:\nIP address range: 192.168.10.100 - 192.168.0.110 Subnet mask: 255.255.255.0 Lease duration: 1 hour Gateway: 192.168.10.1 DNS servers: 8.8.8.8 Edit the isc-dhcp-server configuration file:\nsudo nano /etc/dhcp/dhcpd.conf The most important parameters inside this file are:\nmax-lease-time: IP address lease time default-lease-time: Lease renewal time option routers: Gateway IP address option domain-name-server: IP addresses of the DNS servers the client will use option domain-name: Domain name sent to the client option subnet-mask: Subnet sent to the clients option broadcast-address: Network broadcast address Here is the configuration I will add for network1:\nsubnet 192.168.10.0 netmask 255.255.255.0 { range 192.168.10.100 192.168.10.110; option routers 192.168.10.1; option domain-name-servers 8.8.8.8; default-lease-time 3600; max-lease-time 3600; } With this configuration, the DHCP server will provide addresses within the specified range and assign the specified gateway and DNS server.\nTo apply the changes, restart the DHCP service:\nsudo systemctl restart isc-dhcp-server Configuring clients to obtain dynamic addresses To allow clients to receive IP addresses dynamically, ensure their network settings are set to use DHCP.\nOn a Debian client Edit the network configuration to use DHCP. Open the /etc/network/interfaces file:\nsudo nano /etc/network/interfaces Ensure the interface is configured like this:\nauto ens4 iface ens4 inet dhcp Restart the network interface to apply changes:\ndebian@client1:~$ sudo ifdown ens4 \u0026amp;\u0026amp; sudo ifup ens4 You should see the DHCP client\u0026rsquo;s output as it obtains its configuration:\nifdown: interface ens4 not configured Internet Systems Consortium DHCP Client 4.4.3-P1 ... bound to 192.168.10.100 -- renewal in 1479 seconds. You can also verify the configuration using:\ndebian@client1:~$ ip -4 a ... 2: ens4: ... inet 192.168.10.100/24 brd 192.168.10.255 scope global dynamic ens4 💡 Tip:\nIf you need to modify the DHCP client configuration or simply request a new one, these commands are helpful.\nOn Windows: ipconfig /release and then ipconfig /renew\nOn Linux: dhclient -r to release and dhclient to renew.\nChecking address leases To view the IP leases on the server, open the DHCP lease file, typically located at:\nsudo cat /var/lib/dhcp/dhcpd.leases Do not edit this file manually, as it may cause issues.\nReserving an IP address To reserve an IP address for a specific client, edit the DHCP server configuration:\nsudo nano /etc/dhcp/dhcpd.conf Add the following to reserve based on the MAC address:\nhost client_name { hardware ethernet 00:11:22:33:44:55; fixed-address 192.168.10.120; } Restart the DHCP service:\nsudo systemctl restart isc-dhcp-server Verify on the client (Windows or Linux) that the reserved IP was correctly assigned using ipconfig or ip a.\nConfiguring two scopes If you want the DHCP server to handle two networks, such as 192.168.10.0 and 192.168.20.0, add another network interface.\nEdit /etc/default/isc-dhcp-server:\nINTERFACESv4=\u0026#34;ens5 ens6\u0026#34; Add a second address range to the DHCP configuration file:\nsudo nano /etc/dhcp/dhcpd.conf Add:\nsubnet 192.168.20.0 netmask 255.255.255.0 { range 192.168.20.100 192.168.2.110; option routers 192.168.20.1; option domain-name-servers 8.8.8.8; default-lease-time 3600; max-lease-time 3600; } Restart the DHCP service:\nsudo systemctl restart isc-dhcp-server Now, clients on the second network will receive the configured DHCP settings.\n","date":"September 8, 2023","hero":"/images/servicios/dhcp_v4/isc-dhcp.webp","permalink":"https://www.javiercd.es/en/posts/servicios/dhcp/instalacion_y_configuracion_de_un_servidor_dhcp_en_linux/dhcp_ipv4/","summary":"\u003ch1 id=\"configuring-the-dhcp-server-on-debian\"\u003eConfiguring the DHCP Server on Debian\u003c/h1\u003e\n\u003cp\u003eIn this article, you will learn how to configure the \u003ccode\u003eisc-dhcp-server\u003c/code\u003e. Additionally, we will configure an IP reservation and set it up to operate on two different scopes.\u003c/p\u003e\n\u003cp\u003eHere is my DHCP server\u0026rsquo;s network configuration:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# Router external network\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eauto ens4\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eiface ens4 inet dhcp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# Internal network 1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eauto ens5 \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eiface ens5 inet static \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        address 192.168.10.1\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        netmask 255.255.255.0\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#75715e\"\u003e# SNAT for ens5 network , ensure that bit of forwarding is activated.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        post-up iptables -t nat -A POSTROUTING -o ens4 -j MASQUERADE\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        post-down iptables -t nat -D POSTROUTING -o ens4 -j MASQUERADE\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# Internal network 2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eauto ens6 \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eiface ens6 inet static \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        address 192.168.20.1\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        netmask 255.255.255.0\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"installing-the-isc-dhcp-server\"\u003eInstalling the isc-dhcp-server\u003c/h2\u003e\n\u003cp\u003eTo install the DHCP server on Debian, run the following command:\u003c/p\u003e","tags":["Services","NAT","SMR","DHCP","SNAT"],"title":"Installing and Configuring a DHCP Server on Linux"},{"categories":null,"contents":"Introduction In this detailed post, we explore the process of configuring IPv6 to IPv4 tunnels and vice versa in Linux and Cisco environments. As the migration to IPv6 gains importance, the ability to establish communication between IPv4 and IPv6 networks becomes essential. We will cover the basics of tunnel configuration, including the most common types of tunnels, such as 6to4 and Teredo. Additionally, we will provide step-by-step instructions for configuration on both Linux systems and Cisco devices.\n6to4 Tunnels in Cisco 1. Configuration of Router Network Interfaces R1 FastEthernet 0/0 Network Prefix: 3333:db7::/64 Link: FE80::C801:20FF:FE69:0 Global: 3333:DB7::C801:20FF:FE69:0 FastEthernet 1/0 FastEthernet 2/0 For R1 router clients, we will configure SLAAC:\nR2 FastEthernet 0/0 Network Prefix: 3333:db7:1::/64 Link: FE80::C802:20FF:FE79:0 Global: 3333:DB7:1:0:C802:20FF:FE79:0 FastEthernet 1/0 FastEthernet 2/0 For R2 router clients, we will configure SLAAC:\nR3 FastEthernet 0/0 Network Prefix: 3333:db7:2::/64 Link: FE80::C803:20FF:FE89:0 Global: 3333:DB7:2:0:C803:20FF:FE89:0 FastEthernet 1/0 FastEthernet 2/0 For R3 router clients, we will configure SLAAC:\nNote: In this scenario, it is not necessary to manually configure IPv4 routes, as the network interface configuration will make IPv4 traffic routable.\n2. GRE Tunnels GRE is an unsecured site-to-site VPN tunneling protocol that can encapsulate a wide variety of protocol packets within IP tunnels. This allows an organization to transmit other protocols over an IP-based WAN.\nThis allows adding an IPv4 header to an IPv6 packet so it can travel over IPv4 networks.\nR1 → R3 We will create a tunnel interface:\nGRE Tunnel Configuration with IPv6 over IPv4 We set the tunnel mode to GRE with IP, which will encapsulate our IPv6 packets within IPv4:\nWe assign an IPv4 address to our tunnel:\nWe set the WAN address of our router, FastEthernet 1/0:\nWe set the WAN address of the tunnel endpoint (R2):\nWe enable OSPF, which is a dynamic routing protocol:\nThis command adds the tunnel network to OSPF:\nWe assign an IPv6 address to our tunnel, with the network prefix 2002 based on the router\u0026rsquo;s IPv4 address 2002:0A00:0001::1/64:\nWe create the route to reach the network:\nWe create a tunnel interface:\nWe set the tunnel mode to GRE with IP, which will encapsulate our IPv6 packets within IPv4:\nWe assign an IPv4 address to our tunnel:\nWe set the WAN address of our router, FastEthernet 1/0:\nWe set the WAN address of the tunnel endpoint (R2):\nWe enable OSPF, which is a dynamic routing protocol:\nThis command adds the tunnel network to OSPF:\nWe assign an IPv6 address to our tunnel, with the network prefix 2002 based on the router\u0026rsquo;s IPv4 address 2002:0A00:0002::1/64:\nWe create the route to reach the network:\nWe create a tunnel interface:\nWe set the tunnel mode to GRE with IP, which will encapsulate our IPv6 packets within IPv4:\nWe assign an IPv4 address to our tunnel:\nWe set the WAN address of our router, FastEthernet 1/0:\nWe set the WAN address of the tunnel endpoint (R2):\nWe enable OSPF, which is a dynamic routing protocol:\nThis command adds the tunnel network to OSPF:\nWe assign an IPv6 address to our tunnel, with the network prefix 2002 based on the router\u0026rsquo;s IPv4 address 2002:1400:0001:\nWe create the route to reach the network:\nR3 → R1 We create a tunnel interface:\nWe set the tunnel mode to GRE with IP, which will encapsulate our IPv6 packets within IPv4:\nWe assign an IPv4 address to our tunnel:\nWe set the WAN address of our router, FastEthernet 1/0:\nWe set the WAN address of the tunnel endpoint (R2):\nWe enable OSPF, which is a dynamic routing protocol:\nThis command adds the tunnel network to OSPF:\nWe assign an IPv6 address to our tunnel, with the network prefix 2002 based on the router\u0026rsquo;s IPv4 address 2002:1400:0002::1/64:\nWe create the route to reach the network:\nR3 → R2 We create a tunnel interface:\nWe set the tunnel mode to GRE with IP, which will encapsulate our IPv6 packets within IPv4:\nWe assign an IPv4 address to our tunnel:\nWe set the WAN address of our router, FastEthernet 1/0:\nWe set the WAN address of the tunnel endpoint (R2):\nWe enable OSPF, which is a dynamic routing protocol:\nThis command adds the tunnel network to OSPF:\nWe assign an IPv6 address to our tunnel, with the network prefix 2002 based on the router\u0026rsquo;s IPv4 address 30.0.0.2 → 2002:1e00:0002::1/64:\nWe create the route to reach the network:\nR2 → R3 We create a tunnel interface:\nWe set the tunnel mode to GRE with IP, which will encapsulate our IPv6 packets within IPv4:\nWe assign an IPv4 address to our tunnel:\nWe set the WAN address of our router, FastEthernet 1/0:\nWe set the WAN address of the tunnel endpoint (R2):\nWe enable OSPF, which is a dynamic routing protocol:\nThis command adds the tunnel network to OSPF:\nWe assign an IPv6 address to our tunnel, with the network prefix 2002 based on the router\u0026rsquo;s IPv4 address 30.0.0.1 → 2002:1e00:0001::1/64:\nWe create the route to reach the network:\n3. Functionality Verification We will verify that the tunnels have been created. To do this, we will enter the following command on the three routers in our scenario:\nThis will appear once both ends of the tunnel have been created. If not, nothing will appear. In our case, we can see that the tunnels have been successfully created.\nPing We will verify the functionality of the tunnels by performing a ping.\nPC1 → 3333:db7::e60:ddff:fea6:0 PC2 → 3333:db7:1:0:e2e:3bff:fe83:0 PC3 → 3333:db7:2:0:e62:5dff:fedf:0 PC1 → PC2\nPC1 → PC3\nPC2 → PC1\nPC2 → PC3\nPC3 → PC1\nPC3 → PC2\nWe can see that we have connectivity between all the machines in our scenario using IPv6, even though we have to traverse IPv4 networks.\nTraceroute We will verify the path that the packets follow.\nPath of a packet from PC1 to PC2:\nPath of a packet from PC1 to PC3:\nPath of a packet from PC2 to PC1:\nPath of a packet from PC2 to PC3:\nPath of a packet from PC3 to PC1:\nPath of a packet from PC3 to PC2:\n4. Study of an Encapsulated Packet Before Passing Through the Tunnel\nA packet traveling from PC1 to PC2.\nWe can see that, since it has not yet passed through the tunnel, it does not have IPv4 headers, only IPv6. We can see that the source is PC1 and the destination is PC3:\nWe will see how, in the next segment, once it passes through the tunnel, the router will add an IPv4 header so it can traverse that segment.\nAfter Passing Through the Tunnel If we look at a packet that has passed through a tunnel, we can see that it has \u0026ldquo;2 network layers\u0026rdquo;:\nIf we look at the network layer, we see that the source and destination IPs are those of the tunnel endpoints. Additionally, we see that it uses protocol 47, which means it has passed through a GRE tunnel.\nFinally, we can see in the IPv6 header that it is indistinguishable from one that has not passed through a tunnel.\nOnce It Reaches the Destination Network We see that, once it reaches the destination (i.e., after traversing the IPv4 segment and re-entering the IPv6 network), the router will remove the IPv4 header and leave the IPv6 header so the packet can reach its destination.\nWe see that the IPv6 header remains intact; it is the same throughout the packet\u0026rsquo;s journey:\n6to4 Tunnels in Linux 1. Network Interface Configuration I will respect the IPv4 addresses from the Cisco scenario.\nR1 To apply the configuration, we will run sudo systemctl restart networking.service.\nI will configure SLAAC to set up the clients on our IPv6 network. First, we need to install the radvd package with sudo apt install radvd.\nOnce the service is configured, we will restart radvd, and our clients will automatically configure themselves with the specified prefix.\nR2 To apply the configuration, we will run sudo systemctl restart networking.service.\nI will configure SLAAC to set up the clients on our IPv6 network. First, we need to install the radvd package with sudo apt install radvd.\nOnce the service is configured, we will restart radvd, and our clients will automatically configure themselves with the specified prefix.\nR3 To apply the configuration, we will run sudo systemctl restart networking.service.\nI will configure SLAAC to set up the clients on our IPv6 network. First, we need to install the radvd package with sudo apt install radvd.\nOnce the service is configured, we will restart radvd, and our clients will automatically configure themselves with the specified prefix.\nNote: In this scenario, it is not necessary to manually configure IPv4 routes, as the network interface configuration will make IPv4 traffic routable.\nHowever, it will be necessary to enable the forwarding bit for both IPv4 and IPv6 on all routers.\nTo do this, we edit the file sudo nano /etc/sysctl.conf and uncomment the following lines:\nWe will repeat this for each of our routers and reboot to apply the changes.\n2. SIT Tunnel Configuration The operation is similar to GRE tunnels in Cisco. This will take our packets and, through a tunnel interface, add an IPv4 header so they can traverse IPv4 networks.\nOnce the tunnel is up, we will tell the router that to reach the prefix of network X, it must use this tunnel to add the header to our packets.\nFor convenience, I have created a small script on each router with the necessary commands to make the tunnel work.\nIt consists of 4 commands:\nIt will create the tunnel interface with the destination and then the source. It will bring up the network interface. It will assign the IPv6 address to the tunnel based on the source IPv4 address. We will create the route for the traffic that will use the tunnel. We can name the tunnel as we wish. In my case, I have named it tunnel followed by a number to identify them.\nR2 Tunnels This is what the \u0026ldquo;script\u0026rdquo; for R2 tunnels would look like:\nOnce the script is created, we will give it permissions and execute it:\nWe will verify that the interfaces have been created correctly:\nR3 Tunnels This is what the \u0026ldquo;script\u0026rdquo; for R3 tunnels would look like:\nOnce the script is created, we will give it permissions and execute it:\nWe will verify that the interfaces have been created correctly:\n3. Functionality Verification PC1 → 3333:db7::e47:bfff:fe86:0 PC2 → 2222:db7::ebc:f6ff:fe7d:0 PC3 → 4444:db7::e43:78ff:fec6:0 Ping PC1 → PC2\nPC1 → PC3\nPC2 → PC1\nPC2 → PC3\nPC3 → PC1\nPC3 → PC2\nTraceroute Once we have verified connectivity, we will check if the packets use the tunnels.\nPC1 → PC2\nPC1 → PC3\nPC2 → PC1\nPC2 → PC3\nPC3 → PC1\nPC3 → PC2\n4. Study of an Encapsulated Packet Before Passing Through the Tunnel A packet traveling from PC1 to PC2.\nWe can see that, since it has not yet passed through the tunnel, it does not have IPv4 headers, only IPv6. We can see that the source is PC1 and the destination is PC3:\nWe will see how, in the next segment, once it passes through the tunnel, the router will add an IPv4 header so it can traverse that segment.\nAfter Passing Through the Tunnel If we look at a packet that has passed through a tunnel, we can see that it has \u0026ldquo;2 network layers\u0026rdquo;.\nIf we look at the network layer, we see that the source and destination IPs are those of the tunnel endpoints. Additionally, we see that it uses protocol 47, which means it has passed through a GRE tunnel.\nFinally, we can see in the IPv6 header that it is indistinguishable from one that has not passed through a tunnel.\nOnce It Reaches the Destination Network We see that, once it reaches the destination (i.e., after traversing the IPv4 segment and re-entering the IPv6 network), the router will remove the IPv4 header and leave the IPv6 header so the packet can reach its destination.\nWe see that the IPv6 header remains intact; it is the same throughout the packet\u0026rsquo;s journey:\nBibliography 6to4 Automatic Tunnels Automatic Tunnels for IPv6 GRE Tunnels SIT 6to4 Tunnels in Linux ","date":"September 8, 2023","hero":"/images/redes/tuneles_ipv6/portada.png","permalink":"https://www.javiercd.es/en/posts/redes/tuneles_ipv6/tuneles_ipv6/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this detailed post, we explore the process of configuring IPv6 to IPv4 tunnels and vice versa in Linux and Cisco environments. As the migration to IPv6 gains importance, the ability to establish communication between IPv4 and IPv6 networks becomes essential. We will cover the basics of tunnel configuration, including the most common types of tunnels, such as 6to4 and Teredo. Additionally, we will provide step-by-step instructions for configuration on both Linux systems and Cisco devices.\u003c/p\u003e","tags":["Networking","IPv6","IPv4","Cisco","Linux"],"title":"IPv6 Tunnels"},{"categories":null,"contents":"In the Linux ecosystem, a process is the execution of a specific program that performs a particular task. Each process has its own unique identifier (PID) and is composed of a set of resources, such as memory and CPU, that allow it to operate independently.\nIn the Linux universe, effective process management is a crucial ability to optimize performance and ensure system stability. This post will immerse you in the essential foundations of process management\nPS If we do not add any parameters, ps will show the user processes with which we are logged. On the other hand, the most basic parameters known are:\naux: List the processes of all users with added information (we highlight below).\n-a List the processes of all users.\n-u List process information such as the running user, CPU use and memory, etc.\n-x List processes of all terminals and users\n-l It shows information that includes the UID and the \u0026ldquo;nice\u0026rdquo; value.\n\u0026ndash;forest It shows the process listing in a tree-type format that allows you to see how processes interact with each other, it could be something similar to the pstree command.\nPSTREE The pstree program provides information on the completion of a number of related processes, that is, all the descendants of a particular process. The program makes it clear from the beginning that the process is primary and secondary. This avoids looking for the relationships between the various processes manually.\ncommonly used parameters:\n-H: If we are interested we can see the tree of a specific process:\n-g: Group processes:\n-n: Allows us to order the output by the PID number:\n-p: Shows the PID number\n-s: Shows parent processes\nSYSTEMCTL STATUS This command is used to see the state of a service, specifically, shows information on whether the service or unit is active or inactive, and whether it is in operation or in detention. It also shows any error or warning message related to the service or unit. This command is useful to verify the status of a service or unit in the system and to solve related problems.\nTOP It is a all-in-one program: simultaneously it performs the functions of ps and kill. It\u0026rsquo;s a console command, so you should start it from a terminal.\nWithin this we can control it using the following keys:\n-k: This command is used to send a signal to a process. Then top will ask you about the process PID, followed by the number of the signal to be sent (predetermined TERM - or 15);\n-M: this command is used to order the listing of the processes according to the memory they use (field% MEM);\n-P: this command is used for\norder the list of processes according to the CPU time they consume (field% CPU; this is the default method of ordering);\n-u: This command is used to show the processes of a particular user, top will ask you which one. You must enter the user name.\n-i: this command acts as a switch; predetermined all processes, even those that are asleep, are displayed; this command ensures that only the processes that are in the course of execution are shown:\nHTOP Htop is the improved and current version of top which has a more friendly interface and more functionalities which will help us to monitor processes. This is divided into several parts:\nThe header divides the top of the interface into left and right sections. These show the use of CPU / memory, exchange space, machine activity time, tasks and average load.\nThe upper left section shows a line for each CPU core. For example, the previous screen capture shows two CPU cores, with the percentage that represents the load in each.\nYou can also see the color code provided by htop to identify what type of processes the CPU uses:\nRed: percentage occupied by system processes Blue: percentage occupied by low priority process Green: percentage occupied by user processes The memory lines also use color codes, this time to represent:\nYellow: percentage occupied by cache content Green: percentage occupied by the memory used Blue: percentage occupied by buffer content The central panel shows all the processes in progress with its associated statistics according to the use of the CPU. It shows the following information for each process:\nProcess ID (PID) The owner (User) Virtual memory consumption percentage of processor physical memory To end this program is also interactive, below we have an index where we can check the functions that allow us to use:\nWe also have several keyboards:\nor Order processes by username p Alternate with the program route F2 or S Enter Configuration F3 or / Search process F5 or t F6 + / - Select the main process to expand / contract the tree F7 or [Increase the priority only for root F8 or] Low priority (good +) F9 or k Kill process H Alterna with user process subprocesses K Alterna with kernel process subprocesses \u0026amp; The \u0026amp; symbol is a shell operator in Unix and Linux that allows you to run a background process. When setting \u0026amp; at the end of a command, the process will be run in the background and you will be assigned a task in the background. This means that the process will run in parallel with other tasks and will not block the terminal or command line until it is finished.\nJOBS This command will list the processes that are in second hand as well as their status, let us know your PID:\nFG Complementing the previous command, it allows us to resume in the foreground the last work that was suspended.:\nListing with jobs we can send a specific process to the foreground:\nBG When a command is running you can suspend it using ctrl-Z. The command will stop immediately, and you will return to the terminal shell.\nYou can resume the execution of the command in the background, so it will continue to run but it will not prevent you from doing another job in the terminal.\nKILL Linux processes can receive and react to signals. That is one way we can interact with ongoing programmes. The kill program can send a variety of signals to a program. Not only is it used to finish a program, as the name suggests, but it is its main work by default, it sends a TERM signal to the indicated process identifier.\nWe can list the signals with kill-l:\nWe send a signal with the -s parameter followed by the number of this and the PID of the process:\nXKILL This is the simplest and most practical method. The mouse cursor will be transformed into a small skull. All that remains is to click on the window you want to close and voila. Chau proceso.\nKILLALL Similar to the kill command, killall will send the signal to multiple processes at once instead of sending a signal to a specific process identifier. For example, you can have multiple instances of the top program running, and killall top will end with all of them.\nYou can specify the signal, as with kill:\nFor example we can kill all the tops:\nPIDOF Allows you to find the process ID of a running program:\n-s: Single request - orders the program to return a single process identifier\nPID BASH echo t $→ id bash\nIt\u0026rsquo;s a quick way to find the current bash identifier:\nNICE\nRun a command with a given priority, or change the priority to a process (running program). It uses a variable priority that part of the shell priority and sums up or subtract values. The lower the value of the priority the process has.\nThe value of the priority of the find process increases by 5, decreases its priority.\nRENICE It serves to change the priority of a process:\nPKILL This command allows us to kill a process from which we know your full name or part of it. Let\u0026rsquo;s see an example:\nBibliography Pstree use guide UNIX Command-Line Guide Htop use guide Guide to use nice, renice, kill\u0026hellip; ","date":"September 8, 2023","hero":"/images/sistemas/comandos_procesos/portata_procesos.jpg","permalink":"https://www.javiercd.es/en/posts/sistemas/comandos_linux/comandos_procesos/comandos_procesos/","summary":"\u003cp\u003eIn the Linux ecosystem, a process is the execution of a specific program that performs a particular task. Each process has its own unique identifier (PID) and is composed of a set of resources, such as memory and CPU, that allow it to operate independently.\u003c/p\u003e\n\u003cp\u003eIn the Linux universe, effective process management is a crucial ability to optimize performance and ensure system stability. This post will immerse you in the essential foundations of process management\u003c/p\u003e","tags":["Debian 12","Sistemas","ISO","ASO"],"title":"Linux Process Management"},{"categories":null,"contents":"Sometimes, it is necessary to update the storage of our Debian system to meet the growing space needs and improve the organization of the disk. In this guide, we will explore the migration process from a single disk to one with greater capacity, as well as divide it into separate partitions for more efficient management.\nThis process will not only expand the available storage space, but also provide a more orderly structure to the system, facilitating tasks such as backup management, system performance and disk space management.\nCharacteristics of the machine Create a virtual machine in virt-manager with the following features:\nGNU / Linux Debian11 operating system will be installed. Memory size: 1GB. CPU: 1 Hard drive size: 2GB Details of the hypervisor: chipset: Q35 Firmware: UEFIX 86 Partition outline The debian installation will be made, with the following partition scheme: efi partition: 50MB\npartition /: 2GB\nswap: the rest of spare space.\nNo desktop environment will be installed.\nOnce the system is installed, we realize that we would be very just of space.\nExtending the disk # Partitioned Add a disk to your 10GB system.\nPartiate this disk, choosing the appropriate size for each of the partitions, keeping in mind that each partition will be assigned to a directory of those indicated:\n/ boot / efi FAT32 efi partition - \u0026gt; 100MB / ext4 - \u0026gt; 8GB\n/ home ext4 - \u0026gt; 1GB\n/ var ext4 - \u0026gt; 400MB\n/ usr ext4 - \u0026gt; 400MB\nswap swap - \u0026gt; 200MB\nGiving file system to partitions To format this partition / boot / efi FAT32 partition efi - \u0026gt; 100MB\nFor these partitions I will give you ext4 format: / ext4 - \u0026gt; 8GB\n/ home ext4 - \u0026gt; 1GB\n/ var ext4 - \u0026gt; 400MB\n/ usr ext4 - \u0026gt; 400MB\nTo give swap format: swap swap - \u0026gt; 200MB\nTo \u0026ldquo;activate the swap\u0026rdquo; - \u0026gt; sudo swapon dev / vdb6 and then to make it permanent add to / etc / fstab.\nWe would have the disk with the following formats:\nData migration # EFI partition Below we will make a reliable copy of each of our partitions for it, create a directory to mount each disk in a directory with its name:\nAnd we\u0026rsquo;ll ride the partitions in these directories:\nWe will begin to pass the information of our partitions. It is important to use the parameter a (same as dpR) that allows to make the copy recursively in addition to the permissions and links found in the system are kept intact. With parameter f, we force the copy.\nCopy of the EFI partition:\n# HOME partition We\u0026rsquo;ll set it up in any directory, then we\u0026rsquo;ll copy it with rsync and with the diff command we\u0026rsquo;ll check if there are different files in the directories to save us from doing the check manually.\nNow we\u0026rsquo;ll add it to the fstab:\nWe ride it with a mount -a. We dismount it and we delete the home directory of the old disk:\n# VAR partition We\u0026rsquo;ll set it up in any directory, then we\u0026rsquo;ll copy it with rsync and with the diff command we\u0026rsquo;ll check if there are different files in the directories to save us from doing the check manually.\nNow we\u0026rsquo;ll add it to the fstab:\nWe mount it with a mount -a. We dismount it and we will delete the var directory from the old disk:\nUSR partition We\u0026rsquo;ll set it up in any directory, then we\u0026rsquo;ll copy it with rsync and with the diff command we\u0026rsquo;ll check if there are different files in the directories to save us from doing the check manually.\nNow we\u0026rsquo;ll add it to the fstab:\nWe ride it with a mount-a:\nWe disassemble it and delete the home directory from the old disk:\nAnd we\u0026rsquo;ll ride them back with a mount-a.\n# RAIZ partition We\u0026rsquo;ll set it up in any directory, then we\u0026rsquo;ll copy it with rsync and with the diff command we\u0026rsquo;ll check if there are different files in the directories to save us from doing the check manually.\nExcluding the directories we\u0026rsquo;ve separated before:\nNow we\u0026rsquo;ll add it to the fstab:\nTo mount this partition we must restart the system.\nGenerate the new EFI For this we have to follow a different procedure, the first thing we will do is give fat32 format to the partition. Then just like the others we\u0026rsquo;ll set it up and install a new grub by specifying where we want to install it, on the second disk.\nNow we\u0026rsquo;ll add it to the fstab:\nWe will restart the equipment and check that it works:\nWe will now update the grub:\nAhora para construir el nuevo efi tendremos que a través de un cd live o desde el modo rescate construir un nuevo grub :\nWe mount our new system partition and give you to reinstall the grub boot charger:\nOnce this is done, we turn off the machine and put the second disk first and the boot order and reboot the equipment:\nWhen we restart we choose the first option that is vdb boot:\nAnd we will have managed to migrate the system to a larger disk:! [\u0026hellip;] (/ img / Asposer.Words.b81bc7a-b593-45c4-8e4d-c913a16c26ef.034.png)\nMy / etc / fstab has been as follows:\nBibliography [To migrate from one disc to another] (https: / / www.dragonjar.org / migrar-installation-de -linux-a-a-a-partition-o-disco-diferente.xhtml) [Copy partitions] (https: / / juncotic.com / partitions-copying-installation-linux /) [Recover grub] (https: / / lihuen.linti.unlp.edu.ar / index.php / Gu% C3% ADa _ of _ installation% C3% B3n _ or _ recovery% C3% B3n _ of _ GRUB) ","date":"September 8, 2023","hero":"/images/sistemas/migracion_de_sistema_de_ficheros/portada.jpg","permalink":"https://www.javiercd.es/en/posts/sistemas/migraciones/migracion_sistema_de_ficheros/sistemas-de-ficheros/","summary":"\u003cp\u003eSometimes, it is necessary to update the storage of our Debian system to meet the growing space needs and improve the organization of the disk. In this guide, we will explore the migration process from a single disk to one with greater capacity, as well as divide it into separate partitions for more efficient management.\u003c/p\u003e\n\u003cp\u003eThis process will not only expand the available storage space, but also provide a more orderly structure to the system, facilitating tasks such as backup management, system performance and disk space management.\u003c/p\u003e","tags":["Debian 12","Sistemas","ISO","ASO"],"title":"Migration of a file system"},{"categories":null,"contents":"In this article, we will explore the configuration of SNAT (Source Network Address Translation) and DNAT (Destination Network Address Translation) in scenarios with public addresses, using routers in Linux environments and Cisco devices.\nScenario with debian machines Preparation of the environment Installation of packages Once the machines are placed we must download Apache for the web servers, to do this we will connect both servers to a switch and this to the NAT cloud for Internet access.\nWe will now update the repositories by making an apt update:\nThen we can download the packages, for the servers we will install apache:\nAnd for the home router we will download the DHCP server:\nWhen the installation is finished, a similar error code will jump, because there is no valid configuration in the service:\nFor now we will ignore this and then configure the DHCP server.\nWith this we would have installed all the packages needed to install the practice so we can mount the stage.\nNetwork card configuration We will find a small obstacle in making the stage as we need some routers to have more than one network card.\nTo add more than one card with the device off and without being connected to anyone, we do over the right click and click on configure \u0026gt; network, and we select the number of adapters we need to have on each, for example for the home router I need to have two adapters:\nOnce this is done with the machines that need more than one card, we will set up the stage and proceed to set up your cards.\nTo modify the configuration of the network cards we will do it by editing the /etc/network/ interfaces file. To apply the configuration of the network cards we have made we have several options.\nUp and down the card we have modified:\nWe can also save time and restart the networking service, this will work for all cards simultaneously so it will save us time:\nRouter CASA:\nRouter R1:\nRouter ISP:\nRouter R2:\nSo it would be the relationship of ips that have the routers\u0026rsquo; network cards. To apply this configuration to the network cards we will have to restart it as indicated at the beginning of this paragraph.\nFor the stage to work we must activate the forwarding bit for these 4 routers, in this case I will do it permanently for it we edit the / etc / sysctl.conf file and discomment this line:\nnecessary routes For my current scheme the routes we need in the routers are:\nRouter R1:\nRouter ISP:\nRouter R2:\nRouter CASA:\nConnectivity check We will do ping from each of the routers to their \u0026ldquo;farthest\u0026rdquo; ends to make sure we have done the routing correctly.\nRouter R1 - \u0026gt; R2\nRouter R1 - \u0026gt; CASA\nRouter R2 - \u0026gt; R1\nRouter R2 - \u0026gt; CASA\nRouter CASA - \u0026gt; R1\nRouter CASA - \u0026gt; R2\nWe see that all devices that have public ips addresses have connectivity between themselves but what happens to those that have private addresses on our stage, they will not have connectivity as no private addresses are routed on the internet routers.\nIn other words, if we throw a ping into a private address that is from another network, for example from the service1 to the service2 it does not arrive, as there are no routes for private directions2 on the router tables of the ISP router.\nSo it will be impossible to reach a private network other than the one we belong to.\nFor example from home if we do ping a google we do it to the address PUBLIC 8.. 8.8.8 not to the private address that the server has, can be 172.22.1.2 15\nDHCP service configuration in CASA router\nBy taking back what we had previously done in the package installation section we have already downloaded the DHCP server for debian (isch-dhcp-server). So now let\u0026rsquo;s set it up.\nThe first thing we need to do is tell our server through which network card we want this to distribute directions ip, in our case is the ens5 card.\nTo do this we will edit the /etc/default/isch-dhcp-server file and add the card name in the IPV4 section:\nNow let\u0026rsquo;s tell our DHCP server that we want to be assigned to our customers for this we edit the /etc/dhcp/dhcpd.conf file, we can take advantage of one of the examples that are commented on and apply our configuration:\nThis is a very simple example of a dhcp server but with this is enough for our stage.\nThe fields mean:\nsubnet: network address from which we want to distribute ip addresses with this service. netmask: Network mask of the network which we want to set up the devices. range: range of addresses from which we want to distribute ips being the first the initial and the last the final. option routers: It would be the gateway of our network option broadcast-address: broadcast address of our network. Once configured with the parameters of our network we will restart the service:\nAnd we\u0026rsquo;ll check that the service is active:\nNow for customers to receive an address using this service, we will have to set the PC1 and PC2 network cards as follows:\nWe restart the service to be applied and the server automatically assign the network configuration to us:\nWe check that we have actually been assigned the network configuration:\nWe can also track who we have assigned the ip through the server by viewing the following file /var/lib/dhcp/dhcpd.leases which saves the concessions we have made.\nWe can see when it starts as well as who has been assigned by looking at their MAC address.\nNAT configuration Router CASA\nLet\u0026rsquo;s set up the SNAT in the home router seeing the current scheme the rule to do this is:\nHowever this would be eliminated when the machine was reinitiated so in this case I will add it to /etc/network/interfaces:\nSo we can see that they have been applied after relaunching the network service:\nLet\u0026rsquo;s check that the rule works by seeing if I launch a ping to another network (R1) if it changes my IP address:\nWe see that by doing the capture this has changed the private address of the machine to the public of the home router so the SNAT rule would be working properly.\nRouter R2\nWe will set up SNAT and DNAT to do this I will add the rules to /etc/network/interfaces:\nWe restart the network service and see if it has been applied:\nWe will check that the SNAT works by ping the server out to a public address:\nWe see that the SNAT rule is working correctly:\nSince we have changed the private ip address to the post for the router. In the subsequent paragraphs, you will test the DNAT.\nRouter R1\nFor this router we will perform the creation of the rules in a different way, for it we will create a service to raise the rules of DNAT and SNAT when the machine is restarted to avoid adding them to the interface file.\nThe rules of DNAT and SNAT for this machine are:\nThe first thing we will have to do is create a script with our rules, so volcare with the iptables-save \u0026gt; /etc/iptables/rules.v4 command to flip the existing rules.\nWe will now create a script in which we will restore the rules we have overturned and create it on the following route /usr/local/bin/:\nWe\u0026rsquo;ll have to make sure you have execution permits:\nWe will create a Systemd service file, this file must have reading and writing permissions only for root, so you must run the following command as root:\nWithin this we will add the following content, you would only have to add the route where your iptable script is found that restores the rules:\nWe\u0026rsquo;ll tell the service to start automatically when the machine is restarted:\nAnd we started it:\nIf we want to make sure you have done your job properly we will look at the state of the service:\nWe will see that the rules have been automatically added:\nWe will check that the SNAT has performed us correctly by launching a ping:\nWe see that our private address has been changed to the public.\nNavigation and DNAT check Now let\u0026rsquo;s check that from the home network we can access the web servers.\nDebian client\nFrom the debian client we can make a curl to check the correct functioning of the DNAT in the Router R1:\nFrom the debian client we can make a curl to check the correct functioning of the DNAT in the Router R2:\nNow let\u0026rsquo;s check what happens if we put the private address of the different web servers:\nWe see that we cannot reach that network because the Internet routers are unable to move us to this private network as there may be thousands of devices with the same ip:\nWe would not be answered if we made a web request.\nIf we intercept a request http we see that the SNAT is done correctly, changing the applicant\u0026rsquo;s private ip to the publication of your router:\nNow I\u0026rsquo;m going to intercept a request in which DNAT is made to check that this is done correctly:\nWe can see that the origin is a public ip address while the destination is a private ip address we can see that the DNAT has been performed correctly.\nNow I\u0026rsquo;m going to press a Firefox and I\u0026rsquo;ll check again that we can access the web servers just using their public ip address:\nServer 1:\nServer 2:\nWe see that using public ip address we can connect, however we cannot use the private ips addresses of the machines:\nServer 1:\nServer 2:\nIt works properly as we have managed to get our Linux routers to be able to make SNAT and DNAT by making them \u0026ldquo;use\u0026rdquo; the Internet and access the resources of other networks. Since private addresses are not routed in them, so if we check using them, we won\u0026rsquo;t get any results.\nNAT Debugging To see how many hits you have had a rule or to see how much information you have \u0026ldquo;used\u0026rdquo; each rule will use the following command:\nTo delete the counters from all the chains and rules we will use iptables -Z:\nIf our chain has hits the rule will be working properly if on the contrary it is kept in 0, the rule is not being applied so we will have to review it.\nScenario with Cisco routers We will repeat the same scenario as with the Linux routers but now using cisco routers 7200.\nPreparation of the environment Network card configuration The first thing we will do is add the necessary slots to our routers as we need 2 network cards in R1, R2 and CASA. Exams of 3 for the ISP router.\nFor the former we will add the PA-FE-TX slot, which will add a FastEthernet interface:\nWhile for the ISP router we will add PA-2FE-TX that will add two FastEthernet network interfaces.\nNow we can start the routers and start with the network card settings. I\u0026rsquo;ll use the same directions as in the previous scenario.\nRouter CASA\nWe set the network cards:\nSo we have our interfaces:\nRouter R1\nWe set the network cards:\nSo we have our interfaces:\nRouter R2\nWe set the network cards:\nSo we have our interfaces:\nRouter ISP\nWe set the network cards:\nSo we have our interfaces:\nnecessary routes ISP routes: CASA Routes: Rocks R2:\nRites R1:\nIt would only be necessary to add the default routes to Reters R1, R2 and CASA.\nConnectivity test R1 - \u0026gt; R2\nR1 - \u0026gt; CASA\nR2- → R1\nR2 - \u0026gt; CASA\nCASA - \u0026gt; R1\nCASA - \u0026gt; R2\nWe see that all devices that have public ips addresses have connectivity between themselves but what happens to those that have private addresses on our stage, they will not have connectivity as no private addresses are routed on the internet routers.\nDHCP service configuration in CASA router\nThe first thing we will do is to establish the range of IP\u0026rsquo;s excluded from the set (pool) of addresses that the service can assign indicating the initial and final ip of the range, both including:\nWe name the DHCP service range:\nWe define the network to which DHCP will serve:\nWe include the link door that the service will offer:\nWith this the DHCP server of the CASA router would already be configured, we went out and saved the changes. We will now turn on our machines and see that they are will automatically receive their DHCP configuration, with the following command we can see the service statistics:\nWe can also see the concessions with the following command:\nThis will be useful for us to track who has assigned each IP without having to go individually home machine.\nNAT configuration Router CASA\nThe first thing we will do is create an acl to allow the traffic we want to do SNAT:\nWe will assign to the internal interface of our network this rule:\nNow we will create a pool with public ips, the command would be this does not come full in the terminal:\nip nat pool ip_publica 102.168.0.2 102.168.0.2 netmask 255.255.255.0 We activate the NAT:\nWe indicate that interface is \u0026ldquo;inside\u0026rdquo;:\nWe indicate the \u0026ldquo;out\u0026rdquo; interface:\nThe SNAT would be working, so let\u0026rsquo;s check it out:\nWe see that it changes the private ip of our host to the public of the home router.\nRouter R1\nThe first thing we will do is create an acl to allow the traffic we want to do SNAT:\nWe will assign to the internal interface of our network this rule:\nNow we will create a pool with public ips, the command would be this does not come full in the terminal:\nip nat pool ip_publica 101.168.0.2 101.168.0.2 netmask 255.255.255.0 We activate the NAT:\nWe indicate that interface is \u0026ldquo;inside\u0026rdquo;:\nWe indicate the \u0026ldquo;out\u0026rdquo; interface:\nAnd we\u0026rsquo;ll check that it\u0026rsquo;s being done correctly:\nWe change the ip 172.22.1.1 to the 101.168.0.2 which is published by the router when performing a ping, so the SNAT is working properly.\nWe will now set the DNAT rule, the syntax is as follows:\nip nat inside source static tcp ip_privada puerto ip_publica puerto We will then check that the DNAT works properly. Router R2\nThe first thing we will do is create an acl to allow the traffic we want to do SNAT:\nWe will assign to the internal interface of our network this rule:\nNow we will create a pool with public ips, the command would be this does not come full in the terminal:\nip nat pool ip_publica 103.168.0.2 103.168.0.2 netmask 255.255.255.0 We activate the NAT:\nWe indicate that interface is \u0026ldquo;inside\u0026rdquo;:\nWe indicate the \u0026ldquo;out\u0026rdquo; interface:\nAnd we\u0026rsquo;ll check that it\u0026rsquo;s being done correctly:\nWe change the ip 10.0.0.1 to the 103.168.0.2 which is published by the router when performing a ping, so the SNAT is working properly. We will now set the DNAT rule, the syntax is as follows:\nip nat inside source static tcp ip_privada puerto ip_publica puerto We will then check that the DNAT works properly. Navigation and DNAT check Now let\u0026rsquo;s check that from the home network we can access the web servers.\nI\u0026rsquo;ll access using curl from a home network host. First I\u0026rsquo;ll connect to server 1:\nWe see that it responds correctly and the DNAT is applied, as it has changed the public ip of the router to the private web server:\nNow we\u0026rsquo;ll check server 2:\nWe see that it responds correctly and the DNAT is applied, as it has changed the public ip of the router to the private web server:\nWe will now check that I can access both servers from a Tiny Core with Firefox:\nTo server 1:\nTo server 2:\nWe see that we can also connect as NAT rules are working properly.\nLet\u0026rsquo;s check what happens if we request the web through your private ip addresses:\nWell, obviously we don\u0026rsquo;t get an answer because in our stage we\u0026rsquo;re simulating the Internet and in this one can\u0026rsquo;t routtle private ips directions as they are can be repeated in infinity of networks.\nDebugging NAT rules Also to make sure NAT rules are working.\nThe first command allows us to view the DNAT address translation table:\nWith this command we can see how many hits have our rules, if it has none, it\u0026rsquo;s not working unless we have initialized this:\nIf we want to put the counters to zero we will use the clear command ip nat statistics.\nIf we want to see in real time the packages that show information about each package that translates the router:\nWhen decode the result of this command, observe the meanings of the following symbols and values:\n-*: the asterisk next to NAT indicates that the translation is done on the fast switching route. The first package in a conversation always applies process switching, which is slower. If there is a cache input, the rest of the packages cross the fast switching route. -S: This symbol refers to the original IPv4 address. -a.b.c.d → w.x.y.z: this value indicates that the address of origin a.b.c.d is translated to w.x.y.z. -d: = This symbol refers to the target IPv4 address. -[xxxx]= The value in square brackets is the IPv4 identification number. This information may be useful for debugging, as it enables correlation with other package follow-up by protocol analysers.\nBibliography NAT Depuration ","date":"September 8, 2023","hero":"/images/redes/configuracion_nat/portada.png","permalink":"https://www.javiercd.es/en/posts/redes/configuracion_de_nat/configuracion_de_nat/","summary":"\u003cp\u003eIn this article, we will explore the configuration of SNAT (Source Network Address Translation) and DNAT (Destination Network Address Translation) in scenarios with public addresses, using routers in Linux environments and Cisco devices.\u003c/p\u003e\n\u003ch3 id=\"scenario-with-debian-machines\"\u003eScenario with debian machines\u003c/h3\u003e\n\u003cp\u003e\u003cimg src=\"/redes/configuracion_de_nat/img/Aspose.Words.5d96acd8-9177-4bad-9621-78ead201ec37.001.jpeg\" alt=\"\"\u003e\u003c/p\u003e\n\u003ch3 id=\"preparation-of-the-environment\"\u003ePreparation of the environment\u003c/h3\u003e\n\u003ch3 id=\"installation-of-packages\"\u003eInstallation of packages\u003c/h3\u003e\n\u003cp\u003eOnce the machines are placed we must download Apache for the web servers, to do this we will connect both servers to a switch and this to the NAT cloud for Internet access.\u003c/p\u003e","tags":["Redes","Enrutamiento","NAT","SNAT","DNAT","Cisco","Linux"],"title":"NAT Cisco and Linux Configuration"},{"categories":null,"contents":"NAT with iptables In this article you will learn to set up a small scenario in which you can set up a series of services. You will create the scenario described below, and you will make it through an internal network, using a Linux server, that you have access to the Internet by configuring SNAT in it by using iptables.\nInstallation of the test environment We will install the following environment:\nVirtualBox configuration Debian server:\nCustomer windows\nDebian client\nNetwork configuration The first thing we will do is set up the network cards of our machines.\n# Debian server We edit the file with nano / ect / network / interfaces as a superuser and add the following lines.\nThe red tables correspond to the configuration of the network cards enp0s3 (external card) and enp0s8 (internal network). The blue table corresponds to the ipable rules to allow requests to be made abroad and to prohibit the interior.\nDebian client We edit the file with nano / etc / network / interfaces as a superuser and add the following lines. The link door will be the ip address of the internal server card.\n# Windows 10 client In windows 10 we set up manually by accessing network connections \u0026gt; configuration of the adapter \u0026gt; ipv4 and we assign you the following. Like the client debian changing the address ip. I have put dns from Google because I use my mobile network.\nNat configuration on server Modify the / etc / sysctl.conf. file The line must be discounted:\nWe check if it has been applied.\nInternet check on customers Windows 10\nDebian 11 ","date":"September 8, 2023","hero":"/images/servicios/nat_iptables/portada_iptables.jpeg","permalink":"https://www.javiercd.es/en/posts/servicios/nat_iptables/nat_iptables/","summary":"\u003ch1 id=\"nat-with-iptables\"\u003eNAT with iptables\u003c/h1\u003e\n\u003cp\u003eIn this article you will learn to set up a small scenario in which you can set up a series of services. You will create the scenario described below, and you will make it through an internal network, using a Linux server, that you have access to the Internet by configuring SNAT in it by using iptables.\u003c/p\u003e\n\u003ch2 id=\"installation-of-the-test-environment\"\u003eInstallation of the test environment\u003c/h2\u003e\n\u003cp\u003eWe will install the following environment:\u003c/p\u003e","tags":["Servicios","NAT","SMR","IPTABLES","SNAT"],"title":"NAT with iptables"},{"categories":null,"contents":"A document in which the main commands are detailed when it comes to detecting and solving network incidents.\nWindows Command Explains the meaning of the different parameters to be configured in the TCP / IP Properties in Windows We have to keep in mind that every configuration we make is independent for each of our network adapters.\nTo access these parameters we will follow the following route in our system:\nControl panel \u0026gt; Networks and Internet \u0026gt; Network and shared resources center \u0026gt; Change adapter configuration:\nOnce here we will give you right click \u0026gt; Properties \u0026gt; Version Protocol 4 (TCP / IP)\nOnce here we will see two tabs to which we can turn to configure our card, in the general tabs we can see the following paragraphs:\nThe first subparagraph (General) related to our address ip:\nGet an ip address automatically: * * We will mark this option when we want the DHCP service to be used to assign through the IP address service, subnetwork mask and the default link door. Use the following IP address: * * Here we will manually enter the desired network configuration: IP address: * * is a numerical label that identifies our machine in a unique way on our network, it cannot be repeated. Subnetwork mask: * * numerical set whose function is to indicate to devices which part of the IP address is the network number including the subnetwork, and which part is the host. Default link door: * * It is the default ip address that is assigned to a team to send the packages to other networks. In the second section of this tab we will make the configuration concerning DNS servers which will allow us to translate names into IP addresses to be able to navigate.\nGet the DNS server address automatically: * * This option will make the address get from the DHCP server we have configured on our network. Use the following DNS server addresses: * * This option serves us to manually select the ip address of our DNS servers: preferred DNS server: * * The address we put here will be the first to consult in case you need to make a resolution Alternative DNS server: * * If the primary server failed or was down at that time, we would go on to use the secondary. In the alternative configuration tab, it is designed for equipment that needs to be used in more than one network, usually seen in professional environments:\nAutomatic private ip address: * * will make use of DHCP server to configure. User-configured: * * Let us manually enter the configuration (I will omit the fields explained above): WINS preferred: * * is a Microsoft name server for NetBIOS, which maintains a table with the correspondence between IP addresses and NetBIOS computer names. alternative WINS: * * If the primary server failed or was down at that time, we would go on to use the secondary. Utility of the ping command Ping is a command or diagnostic tool that allows a state-of-the-art verification of a particular connection of a local host with at least a remote computer in a TCP / IP type network, is the most well-known network diagnostic tool.\nThe most common uses of this tool are:\nCheck network connectivity. Measure the latency that takes two points to communicate. Know the IP address used by a domain name. Scripts that allow you to keep a record of the availability of a remote server. Scripts that allow you to know when there is connection on a computer. To make use of this we will open a cmd, press WIN + R and write cmd.\nGeneral use of Ping The simplest ping syntax is as follows: ping [Parameters] [IP / Name]\nIf we look at the command output we see that it allows us to know:\nIP address * * corresponding to the name of the remote machine. The ICMP sequence number * * (\u0026ldquo;Code that returns us, ej: 0 = inaccessible network\u0026rdquo;). TTL * *: Life time in seconds; as this value is decreed in each machine in which it is processed, it must be at least equal to or greater than the number of jumps it will give. If ever this number is zero, the router will interpret that the package is traveling in circles, therefore, it ends the process. Latency: * * corresponds to the time period in milliseconds that is needed to take a turn between the source and destination machines. As a general rule, the delay of a package should not exceed 200 ms. ping statistics: * * Collects all the information showing us the lost, sent and received packages. It also shows us the package with lower latency and greater as well as an arithmetic mean. PING -T This parameter will allow us to do an infinite ping that is not to end until we kill the process, if we did not put it by default only 4 traces were sent. To complete this execution of this command we will press CTRL + C.\nWhen we stop the execution you will show us the statistics you have collected, packages sent, packages received and packages lost as well as the average back and forth times.\nPING -A This parameter serves to solve an ip in a host name, printing a line indicating the host name to which the tracks are being directed, allowing us to identify the machines more easily:\nPING -N This parameter is used to specify the number of requests that we want when sending packages, this will indicate it with a number between 1 - 4294967295.\nFor example if we want to send 10 traces the command would be as follows:\nWe can check at the bottom that you have sent in number that we have indicated.\nPING -L It allows us to change the byte size of the packages sent, we will need to specify a number between 0 and 65000.\nPING -F This parameter serves to prevent packages from fragmenting, the maximum size of unfragmented packages is 1472 bytes.\nWe can see that if we get over this number, it will give us a mistake by informing us that it is necessary to fragment the package:\nPING-I This parameter allows us to specify the maximum number that can be given to reach the destination, the maximum value that we can enter 255.\nWhen we specify a TTL this sets the maximum number of jumps, by passing through a new device (a router) this discount 1 to the TTL specifying until it reaches 0, in this case the destination will be shown as unattainable, thus preventing a package from travelling through the network indefinitely looking for a destination that may not exist.\nPING -4 -6 Ping -4: Force the host response specified with an IPv4 address. It is necessary that both the equipment that launches the ping and the destination have a correct IPv4 configuration.\nPing -6: Force the host response specified with an IPv6 address. It is necessary that both the equipment that launches the ping and the destination have a correct IPv6 configuration.\n# # Check connectivity in a network We will perform a series of tests to check the operation and find errors. The first thing will be to make ourselves ping for it:\nIf the output is correct this shows that our network adapter works properly.\nWe\u0026rsquo;re going to ping a machine on our local network, so we\u0026rsquo;ll show that the physical connections are correct:\nWe are going to do ping to the gateway, if successful it shows that there is connection to the computer that provides the Internet:\nWe will ping to an Internet site using ip, to check that we have Internet connection:\nFinally, doing ping to an Internet domain, if successful, shows that there is Internet connection and the DNS servers configured in the connection work correctly:\nGeneral use of the ipconfig command This command is used to view the current configuration of our computer\u0026rsquo;s network adapters, an example of general command use is as follows:\nThis shows us the following information:\nDescription of the adapter * *: Name of the adapter or network card used in the connection. IPV4 address: * * It\u0026rsquo;s the IP address assigned to the team on the local network. Default link door: * * It is the IP address of the computer provides Internet access. DNS servers: * * Address ip of the controller of solving domain name to IP address of the requested pages. There are usually two, the main and the secondary. DHCP State: * * Dynamic host configuration, in the case of the equipment shown is enabled, that means that an IP address assigned by this service will always be used. From these parameters we can consult the adapter information or identify an inconsistency in its configuration.\nIPCONFIG / ALL It will return all available information from the network adapters, it is a more detailed output than if we omitted this parameter, with this we can consult DNS servers and MAC addresses.\nIPCONFIG / RELEASE It is used to release an ip address in the DHCP service, we will not be reassigned one until we run ipconfig / reew\nWe can specify the adapter from which we want to release the ip by writing it then, if we omit the name apply them to all.\nEJ: ipconfig / release Ethernet0 - \u0026gt; Only release the ip from the Ethernet0 adapter * *\\ * * * * If we want to release an ipv6 address we will use the parameter / review6\nIPCONFIG / RENEW Once the previous command has been executed, we will have to run this to ask the DHCP server for a new IP address.\nWe can specify the adapter from which we want the DHCP offer to be renewed by writing it below.\nEJ: ipconfig / reew Ethernet0 - \u0026gt; It will only renew the Ethernet0 * *\\ * * Adapter award * * If we want to renew an ipv6 address we will use the parameter / reew6\nIPCONFIG / FLUSHDNS It is used to empty the DNS resolution cache from our local team, usually used when we want to check the proper operation of the DNS server.\nIPCONFIG / REGISTERDNS Update all DHCP concessions and re-register DNS names. This command is oriented to work in domain environments and to updating the dynamic records of the DNS server in which it is running, taking into account that if it is blocked in some way the dynamic update will not be done.\nIPCONFIG / DISPLAYDNS This command simply shows us the DNS queries that are stored in the cache of our system as shown in the image, show data from IPv4 and IPv6 protocol records.\nIPCONFIG / SHOWCLASSID This command allows us to check the user classes configured on our DHCP server and that will be available to different customers.\n\\ * If we want to check for IPV6 we will use the / showclass6 parameter.\nGeneral use ARP The arp command shows and modifies the IP address conversion tables in directions\nMAC using the address resolution protocol (ARP).\nARP-A Ask for current protocol data and show current ARP entries. If inet\\ _ addr is specified, only the IP and physical addresses of the specified equipment are shown. If there is more than one network interface using ARP, the entries of each ARP table are shown.\nThe -g option does the same function: As shown in the screen capture, the arp-a command lists all the devices currently in the host ARP cache, including the IPv4 address, the physical direction and the type of direction (static / dynamic) for each device.\nIf we want to delete the cache arp we will use the -d option followed by the\\ * wildcard to delete all the entries in this table, if we would just want to remove a query we would put the IP address.\nWe can request the MAC of an address using arp + IP of the device and then see it on our table with arp -a.\nGeneral use netstat The netstat command generates visualizations that show the state of the network and protocol statistics. The status of TCP, SCTP and UDP final points can be viewed in table format. Information about the routing table and interface information can also be viewed.\nNETSTAT -A It shows all the connections and listening ports of our team, as well as the state of the port and the remote direction which is using the same:\nNETSTAT -B It shows the executable file involved in creating each connection or listening port.\nNETSTAT -E It shows us statistics on network interfaces, it serves to see the activity that has had this:\nNETSTAT -R It shows us the routing table, so we can see the sites our team is able to reach through the network:\nNETSTAT -N It shows us the active connections with a table format, similar to the parameter - only that it indicates the port number instead of the name.\nNETSTAT -O Similar to the above parameter but this one adds the process PID:\nNETSTAT -P It allows us to filter connections according to protocol (TCP, UDP, tcpv6 or tcpv4\u0026hellip;)\nNETSTAT -T Shows the current connection\u0026rsquo;s download status:\nNetstat is very interesting to see statistical data on the connection, but it will also be very useful to analyze the open ports at a given time and thus identify problems. It is essential for certain applications and to achieve optimal performance.\nGeneral use nslookup It is an application included in all Windows systems, to consult, obtain information, test and solve problems with DNS servers.\nBy invoking it without specifying any parameter, it will return the name of the default DNS server and its IP address:\nThe command has two modes of use, the traditional through command line and the interactive. We can use it to solve address names from the terminal by putting nslookup followed by the name we want to solve:\nWe can also do reverse consultations, that is, through the ip tell us the name:\nFor example we can select the type of DNS records to make requests which are:\nA: * * to search for A records that are related to the IPv4 address.. AAAA: * * to search for AAAA records that are related to the IPv6 address. If a web uses IPv6 and so do we, then we will have to indicate this DNS record. PTR: * * to look for reverse records. MX * *: to search for Mail Exchange records of the mail. TXT: * *, to search for text records such as SPF or DKIM. CNAME: * * to search for domain aliases, this is also known as subdomains, for example, the \u0026ldquo;www\u0026rdquo; is always a main subdomain \u0026ldquo;or the typical\u0026rdquo; ftp. \u0026ldquo;which is also a subdomain. To change the registration type we use the set type = Registry name, for example:\nWe can also choose the server from which we consult as follows:\nGeneral use tracert It serves to map the route that makes an incoming package that comes from a host or network point to your computer, so we know where our trip is.\nSaying one by one all the nodes and routers through which you pass the test message you sent, their IP addresses and the latency of each of them until they reach their destination.\nThere are some nodes that are not able to answer for that the spent waiting time entries.\nWe have some interesting parameters such as:\n-d: does not convert addresses to host names -h: allows us to select the maximum number of jumps -4 or -6: Force using IPV4 or IPV6: -w: allows us to specify the waiting time in milliseconds: General use route print The Route command is used to visualize and modify the routing table. Route print shows a list of current IP routes for the host. Route add is used to add routes to the table, and route delete is used to delete routes from the table.\nSo we can specify the way to reach a network or device.\nThe syntax is as follows: route [-f] [-p] [command [destination]] [MASK network mask]\nRute print command without parameters to show all the contents of the routing table:\nIf we want to delete the routing table we must use the -f parameter:\nIn addition, we can add manual routes as follows:\n→ route add IP\\ _ Destination Mascara\\ _ Destination Door\\ _ of\\ _ interface metric link\nIf we want to change a route, the syntax is the same as the previous command by changing the add-by-change command:\nWhen we just want to remove a route, we will use the delete order followed by the destination:\nHow can you find out your router\u0026rsquo;s public IP? There is a lot of way to know this from Windows, we can use the curl command to order the following web and return the ip:\nAnother way from the command line is to do a dns consultation with nslookup to the opendns service:\nIf we have a browser we can use one of the many websites that tell us the public ip address of the router, I use the following \u0026lt;https: ipchicken.com=\u0026rdquo;\u0026quot;\u0026gt;\u0026lt;/https:\u0026gt; :\nLinux Configure a network interface To set up a Linux network card we can do it from the graphical interface or from the command line.\nFrom the graphic interface we go to Settings \u0026gt; Wireless or Network. Once here we turn on the card and give the gear.\nOnce here we can manually configure the network settings of our card.\nThe same can be done from the command line by editing the / etc / network / interfaces file with superuser permissions.\nWithin this we can indicate the configuration of our network adapters, here I tell you with commented lines the basic parameters that we can indicate in this file.\nOnce we have configured our interfaces the changes will not be applied automatically, to do this we have several forms, the most comfortable is to restart the service:\nAnother way to change the DNS servers used is through the / etc / resolf.conf file\nHere followed by nameserver we will put the address ip or name of our DNS server\nGeneral use ifconfig * * Explains the usefulness of the ifconfig command from a real capture. Is there any information from which ipconfig / all is obtained that does not appear? Try to get it another way. * *\nIt is similar to ifconfig and is focused on the same functions, this command is also used to view, change and manage all current computer network configurations.\nThis is installed with the net-tools package, to install it:\nTo use this tool we will need to do it as a superuser, with its simplest use it will show us the basic TCP / IP configuration of our network card as well as statistics of it:\nFor example with ipconfig / all we can see the configured DNS servers which with ifconfig we can\u0026rsquo;t see.\nSo we\u0026rsquo;ll have to see the / etc / resolf.conf file\nA common use of this command is to quickly set up a network interface, for example:\nWe can put this in one line.\nWe can also lift and download the network card\nGeneral use dhclient This uses the dynamic host configuration protocol to dynamically configure the network parameters of the network interface.\nThe following command will tell dhclient to release the current concession it has from the DHCP server, i.e. we want to release the current ip. We will use the -r and -v parameters\nIf we want to reorder a network configuration to the dhcp command we will use only the -v parameter.\nMainly this command is used for this, to solve problems with DHCP service configuration.\nSome parameters that I have not mentioned and may be useful are:\n-6: Serve to indicate you want IPV6 -p: Serves to indicate another port to do the consultation -s: Serves to indicate the DHCP server address Differences in netstat and ping commands with respect to Windows employees netstat shows information about the network subsystem on our computer as well as Windows. If you look at the manual, it tells us that this application is partially obsolete. The replacement of netstat is ss, for netstat -r has ip route, for netstat -i can use ip -s link and for netstat -g has ip maddr.\nIf we launch the parameter we can see to the naked view that shows us more information without indicating any parameter, otherwise these are the same as on Windows.\nWhile the ping command the difference is that it is by infinite default, unlike Windows this will not end until we stop it.\nIn this the parameters with respect to Windows change their \u0026ldquo;letter,\u0026rdquo; here would be:\n-i: Indicate the interval to send the next package in seconds (default is 1) -s: Change package size to bytes -f: flood, to test the network performance under a heavy load (send a lot of packages as quickly as possible) -c: indicate the number of traces sent -w: Stop printing the results after the indicated seconds -q: Remove the command output, quiet option -a: makes a sound when there\u0026rsquo;s an answer -V indicates the command version The utility of this is still the same, solving problems of accessibility of hosts in a network. This helps us understand why a website is not loaded.\nGeneral use command dig Dig is a command that allows you to consult DNS servers for information related to this service. To install it in our system, we will make an apt install dnsutils.\nWe can do a dns consultation, for example to the institute to check if we are able to get your address ip:\nUsing the + trace option, it does iterative consultations to solve the search for names. It will consult the server names from the root and then cross the name space tree through iterative consultations following the references on the way:\nWe can also conduct reverse consultations with the -x option:\nLinux traceroute command differences with Windows tracert command The traceroute tool is exactly the same as the tracert, but it is called otherwise, although it can internally make use of different protocols, as in some operating systems the ICMP Echo Request / reply protocol is used, and in others it makes use of UDP messages directly to check how many jumps there are from one host to another.\nThese are used to detect where the error is when accessing a particular computer and to know where the \u0026ldquo;error\u0026rdquo; occurs.\nSome parameters that may interest us are:\n-f,: Set the distance between the first jump and the next jump. -g,: allows us to indicate the link door. I: Use ICMP ECHO -m,: Set the number of jumps; the default value is 64. -M,: the follow-up routes are carried out with ICMP or UDP; the default method is UDP. -p: Define the network port; the default value is 33434. -q: Define the number of packages per jump. -resolve-hostnames: you can use this syntax to correct the host names. -w,: Define the waiting time in seconds. General use Wget is a computer tool created by the GNU Project. You can use it to recover content and files from several web servers. The name is a combination of World Wide Web and the word get. It supports downloads through FTP, SFTP, HTTP and HTTPS.\nTo install it we use the apt install wget command.\nAn example is to download files, for example an iso. We would put the command followed by the url:\nThis will download the file to us in the current work directory.\nWe can use the command -or to indicate a different name when downloading the file:\nSome interesting parameters are:\n-P: Indicate the directory where we want to save the file \u0026ndash;limit-rate: serves to limit the download speed -tries: allows us to indicate the number of reattempts of the download -b: Make the download in the background -c to indicate that a discharge is resumed If we wanted to download files from a ftp server we would use the following syntax: wget -ftp-user = usario\u0026ndash;ftp-password = password\nGeneral use of tcpdump Tcpdump is a command line tool whose main utility is to analyze the traffic that flows through the network. Allows the user to capture and show in real time the packages transmitted and received by the network to which the computer is connected\nThe most common parameters are:\n-i allows to specify the network interface in which we are going to serve traffic. -c It allows to limit the number of packages captured in a given number. - n Avoid resolution of ports and addresses ip to names. e Show ethernet headers in addition to the ip package. t Do not print the capture time frame for each package. -x shows the hexadecimal content of the captured plot. -xx Idem to -x, but also shows the content of the Ethernet header. -X shows the hexadecimal and ASCII content of the captured plot. It just shows the ASCII content of the captured package. s Show only the first bytes from the beginning of the package. - -vv Displays additional information, including parameters of protocol headers. -w file Allows to save output in a file with pcap format. -r file allows you to read the packages previously captured and stored in a pcap file. For example we can make a capture of our network of up to 50 packages:\nAs you see the output is indecipherable, to read it we will use the ngrep command to search for coincidences without taking into account capital and lower case.\nGeneral use of the arp command The arp command will allow us to interact with the arp resolution cache, modifying it for example.\nWe can also find out the MAC address of a device, looking for it in the table:\nThe parameters are the same as we can find on Windows:\n-a: Find a particular address in the table -v: Shows all entries -n: Displays all entries in numerical form -d: removes a particular resolution We can also do this with the ip command:\nFor this the basic syntax is as follows:\nadd: Add resolution of: Delete resolution change: Change a resolution replace: replace a resolution For example to add a table:\nip command We can view and configure IP addresses, view and configure routing tables, view and configure IP tunnels, and also view and configure the physical interface.\nThis is added a \u0026ldquo;second command\u0026rdquo; to indicate your function, are as follows:\nlink: it serves us to configure physical or logical network interfaces, for example, to see the status of all network interfaces. address: allows to view and configure the IPv4 and IPv6 addresses associated with the different network interfaces. Each interface must have at least one configured IP address. addrlabel: allows to add a label nearby: allows to see the neighborhood links, that is, you can see the ARP table of the operating system. rule: allows to view and configure routing policies and change them, this is used especially when you are going to set up several routing tables. route: allows to see and configure the routing tables, both of the main routing table and of the \u0026ldquo;secondary\u0026rdquo; that you configure. tunnel: allows to view IP tunnels and also to configure them. maddr: allows to view and configure the multilayer addresses. mroute: allows to view and configure the multicast routing table. mrule: allows to view and set up multi-direction routing policies. monitor: allows to monitor the status of network cards on a continuous basis, also IP addresses and routes. ntable: manages the neighbour cache (ARP) tuntap: manages TUN / TAP interfaces, oriented to VPN such as OpenVPN or WireGuard. maddress: configuration of the multicast addresses xfrm: manages IPsec policies. netgs: manage network name spaces l2tp: L2TP configuration tcp\\ _ metrics: manages TCP metrics. token: manages the identifiers with token of the interfaces. Bibliography [Change TCP / IP configuration] (https: / / support.microsoft.com / es-en / windows / change-la-configuration% C3% B3n-de-tcp-ip-bd0a07af-15f5-cd6a-363f-ca2b6f391ace # WindowsVersion = Windows _ 10) [General information on commands] (https: / / openwebinars.net / blog / 20-mandios-de-red-mass-importantes-code%)\n[PING Command] (https: / / apontesjulio.com / como-usar-el-comando-ping /)\n[NSLOOKUP command] (https: / / axarnet.es / blog / que-es-nslookup)\n[Description of command parameters] (http: / / trajano.us.es / ~ fornes / ARSSP / CommandosRedWindows.pdf) [Debian network configuration] (https: / / wiki.debian.org / es / NetworkConfiguration)\n[ifconfig command] (http: / / somebooks.es / comando-ifconfig-ubuntu /)\n[ip command] (https: / / www.redeszone.net / tutorials / servers / configure -linux-comand-ip-iproute2-suite /)\n","date":"September 8, 2023","hero":"/images/redes/comando_de_supervision_de_redes/comando_de_supervision_de_redes.png","permalink":"https://www.javiercd.es/en/posts/redes/comandos_de_supervision_de_redes/comandos_de_supervisi%C3%B3n_de_redes/","summary":"\u003cp\u003eA document in which the main commands are detailed when it comes to detecting and solving network incidents.\u003c/p\u003e\n\u003ch3 id=\"windows-command\"\u003eWindows Command\u003c/h3\u003e\n\u003ch3 id=\"explains-the-meaning-of-the-different-parameters-to-be-configured-in-the-tcp--ip-properties-in-windows\"\u003eExplains the meaning of the different parameters to be configured in the TCP / IP Properties in Windows\u003c/h3\u003e\n\u003cp\u003eWe have to keep in mind that every configuration we make is independent for each of our network adapters.\u003c/p\u003e\n\u003cp\u003eTo access these parameters we will follow the following route in our system:\u003c/p\u003e","tags":["Network","comands"],"title":"Network monitoring commands"},{"categories":null,"contents":"In this practice, we will explore the creation of a scenario through the OpenStack orchestration and then we will conduct the routing to ensure connectivity between the different virtual machines. This exercise will allow us to understand and apply the use of OpenStack to manage virtual environments, as well as to set up the network efficiently to facilitate communication between different devices on the stage.\nScenario to ride in OpenStack In order to mount our OpenStack scenario due to the current situation of the images available, we will need to prepare an instance that has password access enabled. In addition, if you want to set up another one to enable the ssh password access for this user.\nThis will have to be created with the same flavour that we will generate the stage with to avoid errors.\nAs long as we get our instance ready, we\u0026rsquo;ll check that you can log in from time to time:\nNow we\u0026rsquo;ll create a snapshot:\nWe will copy the ID of the snapshot:\nAnd we\u0026rsquo;ll add it to the file:\nAnd we\u0026rsquo;ll deploy it:\nWe see that it has been created correctly:\nChart of the configuration The scheme would be as follows:\nHaving the following relation of IPS:\nIP Relations: Machine IP Interface PC1 10.0.100.144 ens3 R1-PC1 10.0.100.68 ens3 R1-R2 10.0.110.78 ens4 R2-R1 10.0.110.30 ens3 R2-PC2 10.0.120.191 ens4 PC2 10.0.120.203 ens3 R2-R3 10.0.130.146 ens5 R3-R2 10.0.130.36 ens3 R3-PC3 10.0.140.127 ens4 PC3 10.0.140.158 ens3 Routing Tables Router R1: R1 10.0.100.0/24 0.0.0.0 ens3 10.0.110.0/24 0.0.0.0 ens4 10.0.120.0/24 10.0.110.30 ens4 10.0.130.0/24 10.0.110.30 ens4 10.0.140.0/24 10.0.110.30 ens4 0.0.0.0/0 10.0.110.30 ens4 Note: Networks to which we are directly connected will automatically create the routes.\nRouter R2: R2 10.0.100.0/24 10.0.110.178 ens3 10.0.110.0/24 0.0.0.0 ens3 10.0.120.0/24 0.0.0.0 ens4 10.0.130.0/24 0.0.0.0 ens5 10.0.140.0/24 10.0.130.36 ens5 0.0.0.0/0 10.0.130.36 ens5 Note: Networks to which we are directly connected will automatically create the routes.\nRouter R3: R3 10.0.100.0/24 10.0.130.146 ens3 10.0.110.0/24 10.0.130.146 ens3 10.0.120.0/24 10.0.130.146 ens3 10.0.130.0/24 0.0.0.0 ens3 10.0.140.0/24 0.0.0.0 ens4 0.0.0.0/0 10.0.130.146 ens4 Note: Networks to which we are directly connected will automatically create the routes.\nConfiguration commands for each node Router 1\nAs it is a router we will have to activate the forward bit for it we will enter the following command:\necho 1 \u0026gt; /proc/sys/net/ipv4/ip\\_forward We\u0026rsquo;ll create the routing table:\nStatic routes:\nip route add 10.0.100.0/24 via 0.0.0.0 dev ens3 The default route:\nip route add default via 10.0.110.30 dev ens4 So we\u0026rsquo;d have the routing table:\nPC1 We will delete the default route on the device\nAnd we\u0026rsquo;ll add the new route.\nRouter 2\nAs it is a router we will have to activate the forward bit for it we will enter the following command:\necho 1 \u0026gt; /proc/sys/net/ipv4/ip\\_forward We\u0026rsquo;ll create the routing table:\nIt would be like this:\nP2 As we did before, we will remove the default route that it brings and add the new one:\nWe will activate the forwarding bit with the following command:\necho 1 \u0026gt; /proc/sys/net/ipv4/ip\\_forward We will create the routing table for our stage:\nThe routing table would be as follows:\nP2 As with others we will have to change the default route to the ip of the router to which we are connected:\nConfiguration and clarification summary For routers Activate the forward bit Create routing tables Modify the default route For PCs Modify the default route The modification of the default route is because I can\u0026rsquo;t modify the configuration of the network cards so I can\u0026rsquo;t modify the link door.\nBy default when using the script this comes with the X.X.X.1 link door however this does not match the client link door.\nFor routers we must also modify it to indicate where we will send the traffic \u0026ldquo;by default.\u0026rdquo;\nIf we want to make the forwarding bit keep permanently so that when we restart the team it will not return to 0:\nWe write directly in the /etc/sysctl.conf file:\nIf we want to turn the configuration of the routing tables into a file to have a backup of them we use:\nIf we want to restore the copy:\nVerification of connectivity (ping) between nodes PC1 PC1 - PC2\nPC1-PC3\nP2 PC2-PC1\nPC2-PC3\nP2 PC3-PC1\nPC3-PC2\nTraffic capture on the r2 or r3 router showing traffic between h1 and h3. To capture a particular interface and save it in a file we will use tcpdump:\ntcpdump -i NOMBRE\\_INTERFAZ -w NOMBRE\\_ARCHIVO If we want to have an output to the command instead of saving the file we will use the -n parameter: Here we see how the ICMP REQUEST comes from PC3 to PC1 and the ICMP REPLY from PC1 to PC3\nI have also captured a request and arp response from PC3:\nBibliography How to make routing tables ","date":"September 8, 2023","hero":"/images/redes/enrutamiento_os/portada.png","permalink":"https://www.javiercd.es/en/posts/redes/enroutamiento_openstack/enroutamiento_openstack/","summary":"\u003cp\u003eIn this practice, we will explore the creation of a scenario through the OpenStack orchestration and then we will conduct the routing to ensure connectivity between the different virtual machines. This exercise will allow us to understand and apply the use of OpenStack to manage virtual environments, as well as to set up the network efficiently to facilitate communication between different devices on the stage.\u003c/p\u003e\n\u003ch3 id=\"scenario-to-ride-in-openstack\"\u003eScenario to ride in OpenStack\u003c/h3\u003e\n\u003cp\u003eIn order to mount our OpenStack scenario due to the current situation of the images available, we will need to prepare an instance that has password access enabled. In addition, if you want to set up another one to enable the ssh password access for this user.\u003c/p\u003e","tags":["Redes","Enrutamiento"],"title":"OpenStack routing"},{"categories":null,"contents":"Packers and compressors are key elements in the management of files and data in the computer field. The packers allow to group several files in a single container, facilitating their handling and transport. On the other hand, compressors apply techniques to reduce file size, contributing to storage space savings and expediting data transfer. These tools play a crucial role in resource optimization and operational efficiency by more effectively organizing, distributing and supporting information.\nTAR It is a file packer that as its own name indicates uses the .tar format, it is basically used to store files and directories in the same file.\nThe name of the package is tar.\nCreate a .tar file You can create compressions. An example of this type of file is:\ntar -cvf sampleArchive.tar /home/sampleArchive Here / home / sampleArchive is the directory that needs to be compressed creating ampleArchive.tar. This command uses the -cvf options that mean:\nc - create a new .tar file v - shows a detailed description of the progress of the compression f - file name Create a .tar.gz file If you want better compression, you can also use .tar.gz. An example of this is:\ntar -cvzf sampleArchive.tar.gz /home/sampleArchive The additional option * * z * * represents gzip compression. Alternatively, you can create a .tgz file that is similar to tar.gz. We show you an example of the latter:\ntar -cvzf sampleArchive.tgz /home/sampleArchive Create a .tar.bz2 file The .bz2 file provides more compression compared to gzip. However, this alternative will take more time to compress and decompress. To use it, you must use the -j option. An example of how the operation would look is as follows:\ntar -cvjf sampleArchive.tar.bz2 /home/sampleArchive This operation is similar to .tar.tbz or .tar.tb2. I\u0026rsquo;ll show you an example below:\ntar -cvjf sampleArchive.tar.tbz /home/sampleArchive tar -cvjf sampleArchive.tar.tb2 /home/sampleArchive How to decompress .tar files The Linux Tar command can also be used to extract a file. The following command will remove the files in the current directory:\ntar -xvf sampleArchive.tar If you want to extract your files to a different directory, you can use the -C option. We show you an example of this below:\ntar -xvf sampleArchive.tar -C /home/ExtractedFiles/ You can use a similar command to uncompress .tar.gz files, as shown below:\ntar -xvf sampleArchive.tar.gz tar -xvf sampleArchive.tar.gz -C /home/ExtractedFiles/ .tar.bz2 or .tar.tbz or .tar.tb2 files can be decompressed in a similar way. For this you will need to type the following command in the command line:\ntar -xvf sampleArchive.tar.bz2 How to list the content of a .tar file Once you have created the file, you can list the content by a command similar to the following:\ntar -tvf sampleArchive.tar This will show the complete list of files along with time marks and permissions. Similarly, for .tar.gz, you can use a command like:\ntar -tvf sampleArchive.tar.gz This would also work for .tar.bz2 files as shown below: tar -tvf sampleArchive.tar.bz2\nHow to decompress a single .tar file Once you create a compressed file, you can extract a single file from that tablet. This you can do with the command we show you below:\ntar -xvf sampleArchive.tar example.sh Here example.sh is a unique file that will be removed from the sample tablet Archive.tar. Alternatively, you can also use the following command:\ntar --extract --file= sampleArchive.tar example.sh To extract a single file from a .tar.gz tablet you can use a command similar to that shown below:\ntar -zxvf sampleArchive.tar.gz example.sh Or alternatively:\ntar --extract --file= sampleArchive.tar.gz example.sh To extract a single file from a .tar.bz2 tablet you can use a command like this:\ntar -jxvf sampleArchive.tar.bz2 example.sh Or, alternatively, one like this:\ntar --extract --file= sampleArchive.tar.bz2 example.sh How to extract multiple files from .tar files In case you want to extract several files, use the following command format:\ntar -xvf sampleArchive.tar \u0026#34;file1\u0026#34; \u0026#34;file2\u0026#34; For .tar.gz you can use:\ntar -zxvf sampleArchive.tar.gz \u0026#34;file1\u0026#34; \u0026#34;file2\u0026#34; For .tar.bz2 you can use:\ntar -jxvf sampleArchive.tar.bz2 \u0026#34;file1\u0026#34; \u0026#34;file2\u0026#34; Extract multiple files with a pattern If you want to remove from the tablet specific file patterns like only .jpg, use the wildcards command. A sample of this command is shown below:\ntar -xvf sampleArchive.tar --wildcards \u0026#39;\\*.jpg\u0026#39; For .tar.gz you can use:\ntar -zxvf sampleArchive.tar.gz --wildcards \u0026#39;\\*.jpg\u0026#39; For .tar.bz2 you can use:\ntar -jxvf sampleArchive.tar.bz2 --wildcards \u0026#39;\\*.jpg\u0026#39; How to add files to a .tar file While you can extract specific files, you can also add new files to an existing compressed file. To do so, you must use the -r option that means adding. The Tar command can add both files and directories.\nBelow is an example in which we are adding example.jpg to the existing sampleArchive.tar.\ntar -rvf sampleArchive.tar example.jpg We can also add a directory. In the example shown below, the image\\ _ dir directory is added to the sampleArchive.tar file\ntar -rvf sampleArchive.tar image\\_dir You cannot add files or folders to .tar.gz or .tar.bz2. tablets\nHow to verify a .tar file Using Tar can verify a file. This is one of the ways you can do it:\ntar -tvf sampleArchive.tar This cannot be applied in .tar.gz or .tar.bz2. files\nHow to verify the size of the .tar file Once you create a file, you can check its size. This will be shown in KB (Kilobytes).\nBelow are several examples of the command to be used to verify the size of different types of compressed files:\ntar -czf - sampleArchive.tar | wc -c tar -czf - sampleArchive.tar.gz | wc -c tar -czf - sampleArchive.tar.bz2 | wc -c GZIP You can compress a file using gzip with the command called gzip. Name of this package is gzip.\nThis is the simplest use: gzip filename\nThis will compress the file and add an .gz extension to it. The original file is deleted. To avoid this, you can use the - c and use the output redirection to write the output on the filename.gzfile:\ngzip -c filename \u0026gt; filename.gz the -c The option specifies that the output will go to the standard output flow, leaving the original file intact or you can use the -k option:\ngzip -k filename There are several levels of compression. The longer the compression, the longer it will take to compress (and decompress). The levels range from 1 (faster, worse compression) to 9 (slower, better compression), and the default value is 6.\nYou can choose a specific level with the - option: gzip -1 filename You can compress several files by listing them:\ngzip filename1 filename2 You can compress all files in a directory, recursively, using the -r:\ngzip -r folder gzipcan also be used to decompress a file, using the -d option:\ngzip -d filename.gz BZIP2 The bzip2 is very similar to the gzip program. The main difference is that it uses a different compression algorithm called Burrows-Wheeler block classification text compression algorithm and Huffman coding. The bzip2 compressed files will end with the .bz2. extension\nAs I said, the use of bzip2 is almost the same as gzip. We will simply have to replace gzip in the above examples with bzip2, gunzip by bunzip2, zcat with bzcat and so on.\nTo compress a file using bzip2, replacing it with a compressed version, we will run: * * bzip2 prueba.txt # Nos creara un archivo prueba.txt.bz2 Compress files without removing the original file * * If we do not want to replace the original file, we will use the -c option and write the result into a new file.\nBzip2 -c prueba.txt # prueba.txt.bz2 Uncompress files * * To decompress a compressed file we will use one of the following two possibilities:\nbzip2 -d prueba.txt.bz2 bunzip2 prueba.txt.bz2 See the contents of the compressed files without uncompressing them * * To see the content of a compressed file without uncompressing it, we will have to use any of the options:\nbunzip2 -c ubunlog.txt.bz2 bzcat ubunlog.txt.bz2 XZ The packages are xz-utils\n♪ Compress ♪\nThe simplest example of compression of a xz file is the following. File Compression with XZ\nxz deb.iso The -z option can also be used to perform the compression:\nxz -z deb.iso These orders will compress the file, but will remove the source file. If we do not seek to delete the source files, we will use the -k option as follows:\nxz -k deb.iso Uncompress * * To decompress a file, we will be able to use the -d option:\nxz -d deb.iso unxz deb.iso Forging compression * * If an operation fails, for example, if there is a compressed file with the same name, we will use the -f option to force the process:\nxz -kf deb.iso Set compression levels * * This tool supports different pre-established compression levels (0 to 9. With a default value of 6). We will also be able to use aliases like -fast (will be fast, but with less compression) to set as 0 and -best to set as 9 (slow but higher compression). Examples of how to set these levels are:\nxz -k -8 deb.iso xz -k --best deb.iso Limit memory * * In case you have a small amount of system memory and want to compress a huge file, we will have the possibility to use the -memory = limit option (the limit value may be in MB or as a percentage of RAM) to set a memory use limit for compression:\nxz -k --best --memlimit-compress=10% deb.iso ♪ Enable silent mode ♪\nIf we are interested in running the compression in silent mode, only the -q option will have to be added. We can also enable the detailed mode with -v, as shown below:\nxz -k -q deb.iso xz -k -qv deb.iso Create a tar.xz file * * The following is an example of use to get a file with the tar.xz. extension.\ntar -cf *.txt | xz -7 \u0026gt; deb.tar.xz Create a tar.xz file option 2\ntar -cJf deb.tar.xz *.txt Check the integrity of the compressed files * * We can test the integrity of the compressed files using the -t option. Using -l we can see information about a compressed file.\nxz -t deb.tar.xz xz -l deb.tar.xz #7Z\nThis compressor has two packages:\np7zip offers support for 7zr (a light version of 7z and 7za). It allows you to compress and decompress packages in these formats by using your system\u0026rsquo;s graphic tool (file-roll in Ubuntu and Debian) but does not have the encryption functionality. p7zip-full is, to put it in some way, the most complete version. Supports 7z and 7za formats and incorporates encryption functionality, in addition to compression tools ZIP Compress One or Several Files * * The format is always the same, it consists of placing 7z, followed by the option to (to compress or pack), followed by the name you want to give to the final package (no need to place the extension .7z) and ending with the name of the file to compress. You can see that 7-Zip is able to take advantage of all the cores of your processor during the operation.\n7z a paquete-comprimido archivo-a-comprimir 7z a paquete-comprimido archivo-1 archivo-2 If we want to put a password, we use the -p parameter:\n7z a -p paquete-comprimido archivo-a-comprimir 7-Zip supports several compression or packaging formats, other than its own, with this sentence you can choose to explicitly indicate which format you want to use (you can choose between 7z, zip, gzip, bzip2 or tar).\n7z a -tgzip paquete-comprimido archivo-a-comprimir List Tablet Folder Content * * Another interesting option can be to list the content within a file and see the details. To do this, you must also place yourself in the directory where the compressed file or folder is located and type the following sentence.\n7z l paquete-comprimido.7z Uncompress Package and Remove Files * * Once you have known the content within the file, to pull out all the content within the current work directory, you can use the following command:\n7z e paquete-comprimido.7z Check Data Integrity * * As an additional option, you can also check the integrity of the different files inside the compressed file. This is what you use:\n7z t paquete-comprimida.7z RAR The package to install it is rar.\nHow to compress RAR in Linux * * To compress a file or all of a folder:\nrar a nombre_fichero_comprimido.rar nombre_fichero_a_comprimir rar a nombre_fichero_comprimido.rar How to decompress RAR in Linux * * And to decompress in the same directory or another different one:\nunrar x nombre\\_del\\_rar.rar unrar x nombre\\_del\\_rar.rar /ruta/destino/descomprimido ZIP The name of the package is zip.\nTo compress files:\nzip archivo.zip archivos To decompress files:\nunzip archivo.zip See content:\nunzip -v archivo.zip Bibliography [Tar command guide] (https: / / www.hostinger.es / tutorials / como-usar-comando -tar-linux) [Gzip command guide] (https: / / tech-wiki.online / es / linux-command-gzip.html) [Bzip2 command guide] (https: / / ubunlog.com / comprymir-decomprymir-gzip-bzip2 / # The _ program _ bzip2) [Guide xz] (https: / / ubunlog.com / compression-xz-datos-sin-lost /) [Command guide 7z] (https: / / computernewage.com / 2016 / 01 / 10 / 7-zip-linux-guia -para-comprimir-y-decomprimir-files / # install -7-zip) [Rar command guide] (https: / / www.linuxaditos.com / tutorial-para-install-rari-en-linux@-@ y-learn-use) ","date":"September 8, 2023","hero":"/images/sistemas/empaquetadores/portada.jpg","permalink":"https://www.javiercd.es/en/posts/sistemas/comandos_linux/empaquetadores_compresores/empaquetadores-compresores-descompresores/","summary":"\u003cp\u003ePackers and compressors are key elements in the management of files and data in the computer field. The packers allow to group several files in a single container, facilitating their handling and transport. On the other hand, compressors apply techniques to reduce file size, contributing to storage space savings and expediting data transfer. These tools play a crucial role in resource optimization and operational efficiency by more effectively organizing, distributing and supporting information.\u003c/p\u003e","tags":["Linux","Sistemas","ISO","ASO"],"title":"Packaging and compressors in Linux"},{"categories":null,"contents":"The NFS (Network File System) technology has been a key part of file sharing in network environments. Developed by Sun Microsystems, NFS allows Unix and Linux operating systems to share file resources transparently, providing access to remote files and directories as if they were stored locally.\n1.Installation and NFS configuration We installed the nfs-kernel-server package.\nWe will create the directory we are going to share and change the owners and permissions of it:\nIn the file etc / exports we will indicate what our directory is and their respective permissions:\nro * *: directory reading only permission rw * *: reading and writing permission of the directory subtree _ check * *: specifies subdirectories verification no _ subtree _ check: * * prevents subdirectories verification sync: * * Write all changes to the disk before applying it Async: * * ignores synchronization verification to improve speed We apply the changes and restart the service:\n2.Visualize it on a debian client We will install the following package:\nWe put it on our client:\nWe can also do this permanently in the fstab:\nWe can view the content:\nLet\u0026rsquo;s create a file and check that it has been created on the server:\n3 Visualization on Windows We download the NFS client feature:\nWe map the network unit:\nWe created a file remotely and we checked that it was created.\nWe also checked on the server:\n","date":"September 8, 2023","hero":"/images/sistemas/nfs/portada.png","permalink":"https://www.javiercd.es/en/posts/sistemas/nfs_debian/nfs/","summary":"\u003cp\u003eThe NFS (Network File System) technology has been a key part of file sharing in network environments. Developed by Sun Microsystems, NFS allows Unix and Linux operating systems to share file resources transparently, providing access to remote files and directories as if they were stored locally.\u003c/p\u003e\n\u003ch2 id=\"1installation-and-nfs-configuration\"\u003e1.Installation and NFS configuration\u003c/h2\u003e\n\u003cp\u003eWe installed the nfs-kernel-server package.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/nfs_debian/img/Aspose.Words.11ce2099-f519-43cd-a00b-9a47a367ade4.001.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eWe will create the directory we are going to share and change the owners and permissions of it:\u003c/p\u003e","tags":["Linux","Sistemas","ISO","ASO"],"title":"Share directories with NFS in debian"},{"categories":null,"contents":"In the business environment, the capacity to share resources in network is essential for collaboration and operational efficiency. In this article, we will explore how to share directories in a Windows Server environment, addressing the methods through both the graphical interface and cmd and PowerShell.\nFrom the graphic interface We can share a directory of our server, accessing its properties. Once here we click on the share menu:\nWe will now give permission to users who wish to have access to this:\nOnce shared it will show us the route we will have to put to access this resource, which we can modify to our taste in advanced shared use:\nFrom a client we can see the resources that our server is sharing using net view:\nWe can map the network drive from the command line using net use:\nLet\u0026rsquo;s create a directory and check that it has been created:\nWe see that the server has been created:\nWe can also do this from the management of users and groups of active directory:\nShare resources from cmd Now let\u0026rsquo;s use net share to share a network resource through the command line:\nIf from another client we see the resources that the core server shares, we will see:\nIf we want to change the permissions of a shared resource we can use the cacls and icacls commands. We also have the possibility to do so using the graphical interface with RSAT.\nCommands powershell We will create the shared resource\nNew-SmbShare -Name JCD\\_comp -Path \u0026#34;C:\\compartir\\\u0026#34; -FullAccess \u0026#34;Administrador\u0026#34; If we want to add specific permissions to a group when creating the shared resource would be:\nNew-SmbShare -Name \u0026lt;Nombre-de-la-carpeta\u0026gt; -Path \u0026lt;Ruta-de-la-carpeta\u0026gt; -ReadAccess \u0026#34;\u0026lt;Grupo-o-usuario-que-tiene-acceso-de-lectura\u0026gt;\u0026#34; -FullAccess \u0026#34;\u0026lt;Grupo-o-usuario-que-tiene- acceso-total\u0026gt;\u0026#34; If after this we want to add or remove permissions to any user or group to the shared samba directory:\nSet-SmbPathAcl -Path \u0026#34;C:\\compartir\u0026#34; -AceType Allow -AccessType Write -AccountName UsuariosCompartidos If on the contrary we want to remove permissions to the user or group:\nRemove-SmbPathAcl -Path \u0026#34;C:\\compartir\u0026#34; -AceType Allow -AccessType Write -AccountName UsuariosCompartidos To mount this shared directory on another Windows host:\nNew-PSDrive -Name J -PSProvider FileSystem -Root [\\\\172.22.9.143\\JCD_comp](file://172.22.9.143/JCD_comp) We can also list to see if it has been mounted correctly:\nWe will list the content of it to see if we have access to the:\n","date":"September 8, 2023","hero":"/images/sistemas/compartir_directorios_win/portada.jpg","permalink":"https://www.javiercd.es/en/posts/sistemas/comparticion_de_directorios_en_windows/comparticion_de_directorios_en_windows/","summary":"\u003cp\u003eIn the business environment, the capacity to share resources in network is essential for collaboration and operational efficiency. In this article, we will explore how to share directories in a Windows Server environment, addressing the methods through both the graphical interface and cmd and PowerShell.\u003c/p\u003e\n\u003ch3 id=\"from-the-graphic-interface\"\u003eFrom the graphic interface\u003c/h3\u003e\n\u003cp\u003eWe can share a directory of our server, accessing its properties. Once here we click on the share menu:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/comparticion_de_directorios_en_windows/img/Aspose.Words.2ac587b0-02fe-41e0-b2ab-82492960a464.001.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eWe will now give permission to users who wish to have access to this:\u003c/p\u003e","tags":["Windows","Sistemas","ISO","ASO"],"title":"Sharing Network Resources on Windows Server"},{"categories":null,"contents":"#SSH server under debian\nRemote management using SSH The first thing we should do is install the package on the server and the client:\nFor safety it is usually not allowed to connect the root to the server; for this, the /etc/ssh/sshd config file should be modified, and the following option is put:\nAnd we restart the service to apply the changes:\nConnect to ssh server We\u0026rsquo;re going to install the ssh client, for that:\nTo access the server from the client we type:\nWe\u0026rsquo;d open up remotely.\nRemote execution of graphic applications By ssh there is the possibility of running graphic applications on the server and handling and visualizing them on the client. The ssh server must have the redirection of the X protocol activated, i.e. the following parameter in the / etc / ssh / sshd\\ _ config configuration file:\nIn my case it was already enabled, if we didn\u0026rsquo;t have it we changed it and restarted the service to apply the changes. We must now connect to the -X parameter:\nand then we can run any graphic application, for example, gedit:\nThe program will be opened to us graphically:\nNow we see on the server that has been created:\nTransfer files with ssh To copy a file from the client to the server we enter the following command:\nNow let\u0026rsquo;s check if it\u0026rsquo;s been copied to the server:\nRemote access by asymmetrical encryption Key access configuration We will generate our keys from our client:\nNow let\u0026rsquo;s add it to our server:\nOnce I do this we disable password access on the server by editing the / etc / ssh / sshd\\ _ config file:\nThen we just need to restart the service and when we re-register, we\u0026rsquo;ll be using public key:\n\u0026lsquo;\u0026lsquo;If we try to register with a user which we don\u0026rsquo;t have the public key will tell us the following:\nPort change Now let\u0026rsquo;s edit the configuration file to indicate the port:\nAnd we will restart the service:\nNow if we try to connect as we have done before, it will give us the following mistake:\nTo connect we must specify the port by which we connect with -p:\nConnect with a remote access client using tunnels We will use kitty, when we open it on the first screen we enter the server ip and the port you have configured on the server for the ssh in my case 2222\nNow we add the port by which we will connect using the tunnel and then the ip followed by two points and the same port.\nNow we enter our user and password and we will have connected:\nIf we want to do the same but using a public key from windows, we press windows + r and write the following:\nAnd we generate the public keys:\nNow we go to the route we\u0026rsquo;ve saved it we copy the public key and we put it on the server, for comfort I have copied it from the client using ssh.\nOnce added we save the file:\nWe\u0026rsquo;re going to disable the password authentication and restart the service\nNow from the kitty we have to go to the ssh \u0026gt; auth, we give it to browse and select our private key, which must have the .ppk extension. I copied it into another directory for comfort for the tests.\nAnd we connect:\nHere we have combined to connect with kitty using a tunnel + another port + public key.\nVNCserver We install it with the following command:\nBelow we set the configuration credentials for access users and administrators with the following command:\nNow we go to the client and we enter the ip followed by the port by two points, if we don\u0026rsquo;t know we can look at it with:\nWe will be given a warning as the communication is not encrypted, we give you to continue and we enter the access password, which we have previously put:\nSince we do not have a graphic entry on the server, it will not show us an image, but we can see that we have established a connection in both windows and Linux:\nWeb page management using ssh Once the two virtual sites have been created, we want to establish a secure connection to each of our sites, for this we must establish a ssh tunnel in the same way we have established it to establish a remote connection per vnc. 2.Create a tunnel from the ssh client so that access to the private section of the department website is established by port 9999\nWith both established tunnels check that access to the iesgn.org web can be done smoothly by port 80 I only managed to do my page by default, for that we do a tunnel with kitty for example:\nWe now add the ports of origin and destination of the port:\nWe now register with our user:\nOnce the tunnel is established we enter the localhost browser: 8888:\nAnd so we have established a secure web connection.\nIf we close the tunnel we\u0026rsquo;ll lose the connection:\n","date":"September 8, 2023","hero":"/images/servicios/ssh/portada-ssh.png","permalink":"https://www.javiercd.es/en/posts/servicios/ssh/ssh/","summary":"\u003cp\u003e#SSH server under debian\u003c/p\u003e\n\u003ch2 id=\"remote-management-using-ssh\"\u003eRemote management using SSH\u003c/h2\u003e\n\u003cp\u003eThe first thing we should do is install the package on the server and the client:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/servicios/ssh/img/Aspose.Words.5fca9cc1-3c81-4853-a5ed-a70b0122341b.079.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eFor safety it is usually not allowed to connect the root to the server; for this, the /etc/ssh/sshd config file should be modified, and the following option is put:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/servicios/ssh/img/Aspose.Words.5fca9cc1-3c81-4853-a5ed-a70b0122341b.080.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eAnd we restart the service to apply the changes:\u003c/p\u003e\n\u003ch3 id=\"connect-to-ssh-server\"\u003eConnect to ssh server\u003c/h3\u003e\n\u003cp\u003e\u003cimg src=\"/servicios/ssh/img/Aspose.Words.5fca9cc1-3c81-4853-a5ed-a70b0122341b.081.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eWe\u0026rsquo;re going to install the ssh client, for that:\u003c/p\u003e","tags":["Servicios","NAT","SMR","IPTABLES","SNAT","SSH","FORWARDING"],"title":"SSH under debian"},{"categories":null,"contents":"Storage Spaces is a software-defined storage feature in the Windows Server operating system that allows system administrators to combine several physical disks in a single logical storage space called \u0026ldquo;storage pool.\u0026rdquo; This storage pool can be used to create virtual storage spaces called \u0026ldquo;storage spaces\u0026rdquo; that offer various redundancy functions and advanced storage management capabilities.\nStorage groups The following Windows PowerShell cmdlets perform the same function as the previous procedure. Write each cmdlet in a single line, although here you can appear with line jumps between several lines here due to format restrictions.\nThe following example shows which physical disks are available in the primary group.\nGet-StoragePool -IsPrimordial $true | Get-PhysicalDisk -CanPool $True The following example creates a new storage group called StoragePool1 that uses all available disks:\nNew-StoragePool –FriendlyName StoragePool1 –StorageSubsystemFriendlyName \u0026#34;Windows Storage\\*\u0026#34; –PhysicalDisks (Get-PhysicalDisk –CanPool $True) By default the type of supply is mirror.\nIf we need to add more disks:\nAdd-PhysicalDisk -StoragePoolFriendlyName StoragePool1 -PhysicalDisks (Get-PhysicalDisk - CanPool $True) Create a virtual disk Let\u0026rsquo;s create a virtual disk:\nNew-VirtualDisk –StoragePoolFriendlyName StoragePool1 –FriendlyName VirtualDisk1 –Size (8GB) It will automatically create a volume for us and mount it into a available letter:\nWe can interact with and save information:\nWe see that this is the \u0026ldquo;equivalent\u0026rdquo; to LVM on Windows. We see that there are similarities not only in the structure when creating it, but also that they refer in the official documentation to RAID 5 and RAID 6:\nThe way to store the data in either stripes or by saving the full space, as in Linux:\nBibliography [Official documentation] (https: / / learn.microsoft.com / es-en / windows-server / storage / storage-spaces / deploy-standalone-storage-spaces) ","date":"September 8, 2023","hero":"/images/sistemas/storage_spaces/portada.png","permalink":"https://www.javiercd.es/en/posts/sistemas/almacenamiento_servidor_independiente/almacenamiento_servidor_independiente/","summary":"\u003cp\u003eStorage Spaces is a software-defined storage feature in the Windows Server operating system that allows system administrators to combine several physical disks in a single logical storage space called \u0026ldquo;storage pool.\u0026rdquo; This storage pool can be used to create virtual storage spaces called \u0026ldquo;storage spaces\u0026rdquo; that offer various redundancy functions and advanced storage management capabilities.\u003c/p\u003e\n\u003ch3 id=\"storage-groups\"\u003eStorage groups\u003c/h3\u003e\n\u003cp\u003eThe following Windows PowerShell cmdlets perform the same function as the previous procedure. Write each cmdlet in a single line, although here you can appear with line jumps between several lines here due to format restrictions.\u003c/p\u003e","tags":["Linux","Sistemas","ISO","ASO"],"title":"Storage Spaces on Windows Server"},{"categories":null,"contents":"Introduction You live in UNDERWORLD. In your world, there are different types of species with one goal: to \u0026ldquo;crossbreed\u0026rdquo; with each other. These creatures are:\nVAMPIRES WEREWOLVES (LICÁNTROPOS): Werewolves with the ability to return to their human form. WOLFMEN (HOMBRES LOBO): Werewolves who, after their first transformation, cannot return to their human form. HUMANS: Some annoying little creatures. YOU: A tech-savvy warrior with superpowers like turning around a game that hasn\u0026rsquo;t even been released yet or having the ability to become invisible when going out to party and trying to flirt with a girl by saying things like: \u0026ldquo;Do you want me to compile your kernel, babe?\u0026rdquo; The layout of UNDERWORLD is as follows:\n1. Routing the Scenario Routing Tables on Paper ROUTER HUMANO 192.168.1.0/24 0.0.0.0 F0/0 192.168.2.0/24 0.0.0.0 F1/0 192.168.3.0/24 192.168.2.2 F1/0 192.168.4.0/24 192.168.2.2 F1/0 192.168.5.0/24 192.168.2.2 F1/0 192.168.6.0/24 192.168.2.2 F1/0 192.168.7.0/24 192.168.2.2 F1/0 0.0.0.0/0 192.168.2.2 F1/0 ROUTER VAMPIROS 192.168.1.0/24 192.168.2.1 F1/0 192.168.2.0/24 0.0.0.0 F1/0 192.168.3.0/24 0.0.0.0 F0/0 192.168.4.0/24 0.0.0.0 F2/0 192.168.5.0/24 192.168.4.2 F2/0 192.168.6.0/24 192.168.4.2 F2/0 192.168.7.0/24 192.168.4.2 F2/0 0.0.0.0/0 192.168.4.2 F2/0 ROUTER LICÁNTROPOS 192.168.1.0/24 192.168.4.1 F2/0 192.168.2.0/24 192.168.4.1 F2/0 192.168.3.0/24 192.168.4.1 F2/0 192.168.4.0/24 0.0.0.0 F2/0 192.168.5.0/24 0.0.0.0 F0/0 192.168.6.0/24 0.0.0.0 F1/0 192.168.7.0/24 192.168.6.2 F1/0 0.0.0.0/0 192.168.4.1 F1/0 ROUTER HOMBRE LOBO 192.168.1.0/24 192.168.6.1 F1/0 192.168.2.0/24 192.168.6.1 F1/0 192.168.3.0/24 192.168.6.1 F1/0 192.168.4.0/24 192.168.6.1 F1/0 192.168.5.0/24 192.168.6.1 F1/0 192.168.6.0/24 0.0.0.0 F1/0 192.168.7.0/24 0.0.0.0 F0/0 0.0.0.0/0 192.168.6.1 F1/0 2. Configuring IP Addresses on Interfaces Human Router Save the configuration:\nVampire Router Save the configuration:\nWerewolf Router Save the configuration:\nWolfman Router Save the configuration:\n3. Adding Routing Tables to the Routers Human Router By default, it will create routes to the networks we are connected to. We only need to add the default route:\nThe routing table will look like this:\nSave the configuration:\nVampire Router Add the following routes:\nThe routing table will look like this:\nSave the configuration:\nWerewolf Router Add the following routes:\nThe routing table will look like this:\nSave the configuration:\nWolfman Router Add the following routes:\nThe routing table will look like this:\nSave the configuration:\n4. Routing Test To keep this section concise, I will verify that PC1 can reach all PCs:\n5. Configuring ACLs Everyone uses the network to send messages and flirt (so you must configure the network to allow this initially, meaning all devices can communicate with each other). However, you are fed up with all the weird creatures resulting from crossbreeding (e.g., when a vampire mates with a werewolf, and their offspring mates with a wolfman, and so on). You decide to put an end to this by implementing ACLs on the routers:\nVAMPIRES cannot communicate with the other species. Create a rule to deny traffic from the 192.168.3.0 network:\nApply it to the FastEthernet 0/0 interface (192.168.3.1) and apply it to the outgoing traffic:\nVerify that PCs in the Vampire network cannot communicate with the others. The ACL blocks the traffic:\nIf any other realm tries to communicate with them, the messages will reach them, but the response will not, as the ACL blocks outgoing traffic from the Vampire network:\nWEREWOLVES and WOLFMEN, since they are not as repulsive when they crossbreed, can communicate with each other. They cannot communicate with the other species. For this section, we can implement different solutions. I opted to add an ACL on the F2/0 interface of the Werewolf router.\nCreate the ACL:\nApply it to the outgoing traffic on the F2/0 interface:\nVerify that the ACL works by pinging between machines.\nFrom PC7, we see that we cannot leave the Werewolf router, as it blocks the communication, but we can reach other networks:\nFrom PC5, we observe the same result:\nFrom PC1, we see no response, as we are only blocking outgoing traffic, preventing internal machines from communicating with external ones:\nHUMANS cannot communicate with the other species. With the current ACL setup, it is not necessary to implement a new rule, as communication with them is already impossible. Although messages from PC1 may reach their destination, they will not receive a response.\nHowever, if we still want to prevent humans from sending messages to others from their network, we will implement the following rule on their router:\nNow we are blocking messages from humans on Router 1:\n6. DHCP Server Finally, you decide to do business with the weird creatures because they have no clue about IT. You are hired by these evil entities to perform the following tasks:\nWolfmen\nThe Wolfmen, who are terrible at assigning IP addresses to their machines, ask you to configure the DHCP service so that all their machines automatically receive a free IP.\nWe need to follow these steps:\nUse the command ip dhcp excluded-address 192.168.7.1 to specify the addresses we do not want to distribute via DHCP (exclusions). Use the command ip dhcp pool WOLFMEN to name the range of addresses we are distributing. Enter the configuration for the range and specify the network we want to distribute: network 192.168.7.0 255.255.255.0. Specify the default gateway: default-router 192.168.7.1. If we want to configure a DNS server, for example, Google\u0026rsquo;s: dns-server 8.8.8.8. We can verify that the DHCP server is working correctly with the parameters we specified earlier:\nWerewolves\nThe Werewolves also hire you to assign their IPs via DHCP, but they inform you that they cannot receive the first 10 addresses of their range (excluding the network and gateway addresses), as these are reserved for their clan leaders who are traveling and will return in a few days.\nDeclare the IPs to exclude:\nName the range of addresses we are distributing to configure it:\nSpecify the network we want to distribute:\nSpecify the default gateway:\nVerify that the DHCP server is working:\nWe will create the ACL for humans:\nWe will also create the ACL for Vampires:\nWe will apply it to the inbound interface on each network, both are FastEthernet 0/0:\n*****We must have previously removed the list assigned to the interface; otherwise, it will throw an error. To remove it, use the same command as to assign it, but add a no in front.\nNow we will verify the effectiveness of these rules we have implemented:\nIT KNIGHT → SELENE and SONJA\nWe can see that it only allows traffic to these two specific hosts, as we specified in our ACLs:\nSELENE → IT KNIGHT\nWe can see that it only allows traffic to these two specific hosts, as we specified in our ACLs. If we try to communicate with another host, the ACL will block the traffic:\nSONJA → IT KNIGHT\nWe can see that it only allows traffic to these two specific hosts, as we specified in our ACLs. If we try to communicate with another host, the ACL will block the traffic:\nWe can also check the ACL statistics on the router by looking at the rule hits to see if they are working:\nAlthough we have not explicitly specified deny any in any of the lists, it is not necessary because it is implicit. By default, if no rule is matched, the traffic will be discarded.\n8. Web Server Since flirting is no longer allowed in UNDERWORLD, everyone is bored out of their minds. So, you decide to set up an internal web server in UNDERWORLD. Add a server called FILES to the BRIDGE 1 router with the IP 192.168.8.2/24, creating the necessary ACLs so that the entire UNDERWORLD community can entertain themselves by browsing some cool websites.\nFirst, we will configure the new interface on the Human router:\nNext, we will configure the route to the new network on the Vampire router to ensure proper routing in the scenario:\nFinally, we will configure the IP of our Debian server statically with the address 192.168.8.2:\nWe will also install Apache (you must do this while connected to the NAT cloud):\nOnce the web server is ready and routed in our scenario, we will modify the different ACLs so that traffic can only reach the web server on port 80.\nOn the Human router, we add the following rule, which allows all traffic to the host 192.168.8.2 on port 80:\nTo refresh the list and apply the changes, we must reassign it to the router:\nNow we will do the same on the Vampire router, as it has extended ACLs configured like the Humans:\nNow we will configure an advanced ACL for the Werewolves and Wolfmen:\nWe will verify that we cannot ping the server from the VPCs:\nIn summary, we have maintained the previous rules but allowed traffic to the web server only if it comes through port 80. That’s why we cannot ping it.\nNow we will verify that we can access the web server from the networks:\n→ HUMANS:\n→ VAMPIRES:\n→ WEREWOLVES:\n→ WOLFMEN:\n","date":"September 8, 2023","hero":"/images/redes/underworld/portada_underwolrd.webp","permalink":"https://www.javiercd.es/en/posts/redes/underworld/underworld/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eYou live in UNDERWORLD. In your world, there are different types of species with one goal: to \u0026ldquo;crossbreed\u0026rdquo; with each other. These creatures are:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eVAMPIRES\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eWEREWOLVES (LICÁNTROPOS):\u003c/strong\u003e Werewolves with the ability to return to their human form.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eWOLFMEN (HOMBRES LOBO):\u003c/strong\u003e Werewolves who, after their first transformation, cannot return to their human form.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eHUMANS:\u003c/strong\u003e Some annoying little creatures.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eYOU:\u003c/strong\u003e A tech-savvy warrior with superpowers like turning around a game that hasn\u0026rsquo;t even been released yet or having the ability to become invisible when going out to party and trying to flirt with a girl by saying things like: \u0026ldquo;Do you want me to compile your kernel, babe?\u0026rdquo;\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe layout of UNDERWORLD is as follows:\u003c/p\u003e","tags":["Networking","Wireshark","GNS3","Cisco","Routing","ACLs"],"title":"Underworld"},{"categories":null,"contents":"The world of UNDERWORLD has evolved greatly in recent months, so you must perform network management tasks to face the new situation.\nOn one hand, the Internet has been discovered in the Underworld, allowing each of the sub-worlds (remember: vampires, werewolves, lycanthropes, and humans) to connect to a router that, in turn, connects them to one of the two large routers that form Underworld\u0026rsquo;s Internet, called Marcus (for humans and vampires) and Alexander (for werewolves and lycanthropes). Marcus and Alexander are connected to each other.\nThe scheme would be as follows:\nOn the other hand, the beings of the underworld have discovered a vulnerability in CISCO routers that allows them to bypass the access control lists, returning to the chaos you previously prevented with the ACLs.\nYour tasks will consist of:\nReplacing the CISCO routers in the network infrastructure with Linux machines following the scheme shown. Properly configure the Linux machines to function as routers. Create the necessary routing tables for all machines to communicate with each other, considering that internal networks will have private addresses and we will have public addresses on the Internet. Configure the necessary firewalls on the routers so that: VAMPIRES cannot communicate with the other species. WEREWOLVES and LYCANTHROPES, since they are not so repulsive when they meet, can communicate with each other. They will not have communication with the other species. HUMANS will also not be able to communicate with the other species. Configure the DHCP service that the werewolves and lycanthropes had under the same conditions they had when using CISCO routers. Configure the firewalls with the necessary rules so that, from HUMANLAND, IT KNIGHT can continue communicating with his two favorite vampires (SONJA and SELENE). Perform the necessary configurations to set up a web server in HUMANLAND accessible from anywhere in UNDERWORLD. Preparation of the scenario in Linux Configuration of the network interfaces The first thing we will do is add the necessary network interfaces to each router. To do this, with the machine turned off, we right-click \u0026gt; settings \u0026gt; network and add the slots that are needed for each machine:\nWe will need the following number of network interfaces for each device:\nRouter 1, 2, 3, and 4: will need 2 network interfaces MARCUS and ALEXANDER: will need 3 network interfaces PCs: will need 1 network interface Once this is done, we will edit the file /etc/network/interfaces to perform our network configuration.\nSubsequently, we will restart the networking service with systemctl restart networking.service so that the network configuration we indicated is applied.\nConfiguration of the network interface Router 1:\nConfiguration of the network interface Router 2:\nConfiguration of the network interface Router 3:\nConfiguration of the network interface Router 4:\nConfiguration of the network interface Router MARCUS:\nConfiguration of the network interface Router ALEXANDER:\nEnabling the forwarding bit If we want to make a Linux machine act as a router, which means it routes packets that are not destined for it, we must enable the forwarding bit.\nAdditionally, we will take this opportunity to permanently enable the forwarding bit on the routers of the scenario by editing the file /etc/sysctl.conf and uncommenting this line:\nWe will repeat this for the six routers we have in the scenario:\nRouter 1:\nRouter 2:\nRouter 3:\nRouter 4:\nRouter MARCUS:\nRouter ALEXANDER:\nNow all our machines are configured to act as routers and will route any packets that are sent to them that are not for them.\nRoute configuration Here I will show if I have added any routes manually and the routing tables of the devices.\nRouter MARCUS:\nRouter ALEXANDER:\nRouter 1:\nRouter 2:\nRouter 4:\nWith the network configuration I have on the interfaces, I have only added 2 manual routes on the routers of MARCUS and ALEXANDER; in the rest it was not necessary since it is generated automatically with the gateway we placed when configuring the network interfaces.\nI could have saved writing them if I had placed the IP of the other as the gateway on the interface configured in the network 100.X.X.X.\nConnectivity test We are going to check if we have routed correctly, so I will ping from each router to each one of the edges of the scenario.\nRouter 1:\nRouter 2:\nRouter 3:\nRouter 4:\nIt is confirmed that we have connectivity between all routers; the PCs will not have “connectivity” until we configure the SNAT.\nDHCP Configuration Lycanthropes The lycanthropes, on their part, hire you to assign their IPs via DHCP as well, but they indicate that they cannot receive the first 10 addresses of their range (not counting the network one or the gateway), as these are reserved for the leaders of their clan who are traveling and will return in a few days.\nWith the machine connected to the NAT cloud and the interface that is connected configured via DHCP, we will download the DHCP server; to do this, we must first run an apt update because the machine does not have the repositories loaded in memory:\nWhen it finishes installing, it will give us an error; this is because the service is not configured and does not know which interface the server should assign addresses to:\nTo do this, we will edit the file /etc/default/isc-dhcp-server and add the name of the interface in the IPV4 section:\nNow we will configure the scope with the requirements requested by the lycanthropes by editing the file /etc/dhcp/dhcpd.conf:\nWe must keep in mind that the configuration we put here is consistent with the network configuration we have; we need to consider that we have a /28, so in this case, we can only have 14 assignable addresses.\nBut if we follow the statement, they do not want the first 10, so we can only assign 3 to our clients.\nOnce this is done, we will restart the service:\nAnd we will see if it is working, checking the status:\nWe will assign an IP to a PC to check that it works:\nWerewolves The werewolves, who are quite clumsy at entering IP addresses into their machines, ask you to configure the DHCP service for all their machines to receive an IP automatically.\nWith the machine connected to the NAT cloud and the interface that is connected configured via DHCP, we will download the DHCP server; to do this, we must first run an apt update because the machine does not have the repositories loaded in memory:\nWhen it finishes installing, it will give us an error; this is because the service is not configured and does not know which interface the server should assign addresses to:\nTo do this, we will edit the file /etc/default/isc-dhcp-server and add the name of the interface in the IPV4 section:\nFortunately, the werewolves are less demanding, and they want the entire range of addresses distributed, so for this, we will edit the file /etc/dhcp/dhcpd.conf:\nNow we will restart the service:\nWe will check the status to ensure that it is working correctly:\nWe will assign an address to a client to make sure everything works correctly:\nSNAT Configuration To complete the preparation phase, we will need to configure SNAT so that the different races can communicate with each other.\nRouter 1:\nI created a file called iptables to save all the rules from the practice:\nTo demonstrate that the rule works, here is a capture between Router 1 and PC1:\nWe see that once outside the network between R1 and MARCUS, SNAT has been applied:\nRouter 2:\nI created a file called iptables to save all the rules from the practice:\nTo demonstrate that the rule works, here is a capture between Router 2 and PC3. We see that the source is a private IP address:\nWe see that once outside the network between R2 and MARCUS, SNAT has been applied, since the source is now a public IP address:\nRouter 3:\nI created a file called iptables to save all the rules from the practice:\nTo demonstrate that the rule works, here is a capture between Router 3 and PC5. We see that the source is a private IP address:\nWe see that once outside the network between R3 and ALEXANDER, SNAT has been applied, since the source is now a public IP address:\nRouter 4:\nI created a file called iptables to save all the rules from the practice:\nTo demonstrate that the rule works, here is a capture between Router 4 and PC7. We see that the source is a private IP address:\nWe see that once outside the network between R4 and ALEXANDER, SNAT has been applied since the source is now a public IP address:\nWith the current scenario, any PC is capable of reaching all public addresses in our network:\nDNAT Configuration For the machines to be able to communicate with each other, ssh has been installed on them, so we will need to configure DNAT.\nR1\nFor this network, since we have two clients, I changed the port that ssh uses:\nWe check that I can connect to both hosts from another network, thus confirming that DNAT works.\nSonja:\nSelene:\nR2\nIn this network, we only have one client that we want to be accessible from the outside, so we will only have one DNAT rule:\nTo check the rule, I will connect from the vampires to the humans:\nR3\nIn this network, since there is a DHCP service running, for the DNAT rule to function correctly, we must reserve our host or configure the interface statically.\nI will do the former for convenience, for this we go to the file /etc/dhcp/dhcpd.conf and write the following:\nhost ReservationName { hardware ethernet HOST_MAC_ADDR; fixed-address RESERVED_IP;} Once this is done, we restart the service:\nAnd I will set the following rule:\nNow let\u0026rsquo;s check that I can connect to this host:\nR4\nIn this network, we will also configure a reservation on the server to keep our rules active; in this case, I will assign the address 192.168.4.5.\nWe will restart the service and check that our host has been assigned the reserved IP; if not, we will request another with dhclient:\nNow we will add the DNAT rule so that the ssh server can be reached:\nWe check that the rule is functioning, and we can connect from another network:\nFirewall Configuration Vampires cannot communicate with the other species I will set a default DROP policy in the FORWARD table to block all traffic coming from the vampire network:\nWe will verify that the vampires are unable to reach the other networks:\nWe can see the hits it has made to confirm that the rule is working:\nAllow communication between Werewolves and Lycanthropes WEREWOLVES and LYCANTHROPES, since they are not so repulsive when they cross paths, will be able to communicate with each other. They will not have communication with the other species.\nI will set a default DROP policy in the FORWARD table, then allow traffic that comes in through interface ens4 and goes out through ens5, and vice versa to permit traffic between these two networks:\nWe see that they can communicate with each other; however, they cannot access Humans or Vampires:\nWe will check that the rules have hits:\nHUMANS will also not be able to communicate with the other species With the rules we currently have, communication between Humans and other species is not possible; we can see that in R2 without any additional rules, we cannot connect:\nWe see that we cannot communicate:\nIf we want to prohibit human traffic on our router and not rely on external rules in case they change, we will add a default DROP policy:\nWe will see the hits in the default policy:\nConfigure the necessary rules in the firewalls so that, from HUMANLAND, IT KNIGHT can continue communicating with his two favorite vampires (SONJA and SELENE). The IPs of these machines are:\nIT KNIGHT (SSH) –\u0026gt; 192.168.2.3:22 SONJA (SSH) –\u0026gt; 192.168.1.4:22 SELENE (SSH) –\u0026gt; 192.168.1.5:2222 In router 1, the necessary rules to allow this communication are:\nIn router 2, the necessary rules to allow this communication are:\nWe will check action by action to ensure that these rules fulfill their purpose.\nSELENE –\u0026gt; ITKNIGHT\nIn router 1:\nIn router 2:\nSONJA –\u0026gt; ITKNIGHT\nWe ssh:\nWe see the hits from router 1:\nWe see the hits from router 2 (same rule as the previous section):\nITKNIGHT –\u0026gt; SONJA\nWe ssh:\nWe see the hits from router 1:\nWe see the hits from router 2:\nITKNIGHT –\u0026gt; SELENE\nWe launch the ssh:\nWe see the hits from router 1:\nWe see the hits from router 2:\nHUMANLAND Web Server Perform the necessary configurations to set up a web server in HUMANLAND accessible from anywhere in UNDERWORLD.\nI have assigned it the IP 192.168.2.10.\nThe first thing we must configure is the DNAT on router R2 (HUMANLAND):\nNow in router 2, we will allow requests to the server and their responses:\nIn router 1, we allow requests and their responses:\nFinally, in ALEXANDER, we allow web requests to pass through:\nLet\u0026rsquo;s check that it can be accessed from all networks.\nVAMPIRES:\nWe check the hits in router 1:\nWEREWOLVES AND LYCANTHROPES\nWe make the web request from both networks:\nWe check the hits in router ALEXANDER:\nFinally, we see the hits in Router 2 (HUMANS) for the DNAT rule:\nScenario with Cisco routers Configuration of the interfaces R1\nR2\nR3\nR4\nMARCUS\nALEXANDER\nRouting Tables R1\nWe add the default route:\nThus, R1\u0026rsquo;s routing table will look like:\nR2\nWe add the default route:\nThus, R2\u0026rsquo;s routing table will look like:\nR3\nWe add the default route:\nThus, R3\u0026rsquo;s routing table will look like:\nR4\nWe add the default route:\nThus, R4\u0026rsquo;s routing table will look like:\nMARCUS\nWe add the default route:\nThus, MARCUS\u0026rsquo;s routing table will look like:\nALEXANDER\nWe add the default route:\nThus, ALEXANDER\u0026rsquo;s routing table will look like:\nConnectivity Test We will check that we have routed correctly, so I will ping from each router to each of the edges of the scenario.\nR1 → to the edges:\nR2 → to the edges:\nR3 → to the edges:\nR4 → to the edges:\nDHCP Configuration Lycanthropes The lycanthropes, on their part, hire you to assign their IPs via DHCP as well, but they indicate that they cannot receive the first 10 addresses of their range (not counting the network one or the gateway), as these are reserved for the leaders of their clan who are traveling and will return in a few days.\nThe first thing we will do is establish the range of excluded IPs from the set (pool) of addresses that the service will assign by indicating the initial and final IP of the range, both included:\nWe name the DHCP service range:\nWe define the network to which it will provide DHCP service:\nWe include the gateway that will offer the service:\nWith this, we would have set up the DHCP server. With the following command, we can view the service statistics to see if it is running:\nWe will also confirm that the lease has been granted to our host:\nDHCP Werewolves The werewolves, who are quite clumsy at entering IP addresses into their machines, ask you to configure the DHCP service for all their machines to receive an available IP automatically.\nIn the previous section, I detailed each part of the configuration of a DHCP server in Cisco; here I show you the configuration for the Werewolf network:\nWe will check that it is working:\nSNAT Configuration Router 1:\nThe first step is to create an ACL to allow the traffic we want to perform SNAT on:\nWe will assign this rule to the internal interface of our network:\nNow we will create a pool with the public IPs; the command would be this, but it does not show completely in the terminal:\nWe enable NAT:\nWe indicate which interface is for “inside”:\nWe specify the “outside” interface:\nThe SNAT should be working, so let\u0026rsquo;s verify it:\nWe see that the rule has HITS:\nRouter 2:\nThe first step is to create an ACL to allow the traffic we want to perform SNAT on:\nWe will assign this rule to the internal interface of our network:\nNow we will create a pool with the public IPs; the command would be this, but it does not show completely in the terminal:\nWe enable NAT:\nWe indicate which interface is for “inside”:\nWe specify the “outside” interface:\nThe SNAT should be working, so let\u0026rsquo;s verify it by checking if the rule has HITS:\nRouter 3:\nThe first step is to create an ACL to allow the traffic we want to perform SNAT on:\nWe will assign this rule to the internal interface of our network:\nNow we will create a pool with the public IPs; the command would be this, but it does not show completely in the terminal:\nWe enable NAT:\nWe indicate which interface is for “inside”:\nWe specify the “outside” interface:\nThe SNAT should be working, so let\u0026rsquo;s verify it by checking if the rule has HITS:\nRouter 4:\nThe first step is to create an ACL to allow the traffic we want to perform SNAT on:\nWe will assign this rule to the internal interface of our network:\nNow we will create a pool with the public IPs; the command would be this, but it does not show completely in the terminal:\nWe enable NAT:\nWe indicate which interface is for “inside”:\nWe specify the \u0026ldquo;outside\u0026rdquo; interface:\nThe SNAT should be working, so let\u0026rsquo;s verify it by checking if the rule has HITS:\nDNAT Configuration R1\nChecking:\nR2\nChecking:\nR3\nChecking:\nR4\nChecking:\nFirewall Configuration Vampires cannot communicate with the other species For this, we will delete the existing rule in the list:\nNow we will deny outgoing traffic from the vampire network:\nWe confirm they cannot communicate:\nWe look at the hits from the rules:\nAllow communication between Werewolves and Lycanthropes WEREWOLVES and LYCANTHROPES, since they are not so repulsive when they cross paths, will be able to communicate with each other. They will not have communication with the other species.\nWith these two rules, we allow any host from our local networks to exit when the destination is werewolves or lycanthropes:\nR3 → 180.0.0.1 R4 → 190.0.0.1 We see that it blocks the packets that are not from HL to LC or from LC to HL:\nHUMANS will also not be able to communicate with the other species With the rules we currently have, communication with other species by humans is not possible; we can see that in R2 without any additional rules, we cannot connect since our packets will reach the networks.\nTo truly prevent humans from communicating without depending on the rules of the other kingdoms, we will prevent them from exiting the kingdom:\nIf we check now, they will not be able to exit the kingdom:\nWe look at the hits:\nConfigure the necessary rules in the firewalls so that, from HUMANLAND, IT KNIGHT can continue communicating with his two favorite vampires (SONJA and SELENE). The IPs of these machines are:\nIT KNIGHT (SSH) –\u0026gt; 192.168.2.3:22 SONJA (SSH) –\u0026gt; 192.168.1.4:22 SELENE (SSH) –\u0026gt; 192.168.1.5:2222 To allow the vampires to communicate with humans:\nWe allow outgoing messages to the public of the vampires when the port is 22 and 2222:\nNow we will allow the vampires to connect to the humans using port 22:\nI don’t know why it’s not working\u0026hellip; it only goes through if I don’t place any rules; even allowing ALL SSH traffic doesn’t help\u0026hellip; I have also allowed all ICMP, but it still occurs.\nThe nat and SNAT are working fine, but when it comes to making the ssh rules, the following happens in the local network. Since the router drops them back despite the traffic being allowed.\n","date":"September 8, 2023","hero":"/images/redes/underworld_evolution/portada.jpeg","permalink":"https://www.javiercd.es/en/posts/redes/underworld_evolution/underworld_evolution/","summary":"\u003cp\u003eThe world of UNDERWORLD has evolved greatly in recent months, so you must perform network management tasks to face the new situation.\u003c/p\u003e\n\u003cp\u003eOn one hand, the Internet has been discovered in the Underworld, allowing each of the sub-worlds (remember: vampires, werewolves, lycanthropes, and humans) to connect to a router that, in turn, connects them to one of the two large routers that form Underworld\u0026rsquo;s Internet, called Marcus (for humans and vampires) and Alexander (for werewolves and lycanthropes). Marcus and Alexander are connected to each other.\u003c/p\u003e","tags":["Networking","SNAT","DNAT","Cisco","Linux"],"title":"Underworld evolution"},{"categories":null,"contents":"1.Installation of the feature The first thing we\u0026rsquo;ll check is to check if the ssh server is installed in the machine we want to connect to.\nGet-WindowsCapability -Online | Where-Object Name -like \u0026#39;OpenSSH\\*\u0026#39; In case we have the feature we will install it:\nAdd-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0 By default the service will be stopped so we take it off:\nWe can set it to automatically boot when you restart the computer:\n#2. Connect us using key pair\nThe first thing we will do is generate a couple of keys in the client, with ssh-keygen:\nUsing SCP we can either take our published key or manually add it to the automated _ keys file:\nAnd we try to connect using the key:\nIf we want the service to only work with public and private keys, we edit the C:\\ ProgramData\\ ssh\\ sshd\\ _ config file.\nIf we want to connect with a Linux client, we will have to do the same process. If the server was Linux we could use the ssh-copy-id utility however it is not compatible with Windows servers so we will use scp:\nOnce added, we can connect:\n","date":"September 8, 2023","hero":"/images/sistemas/ssh_win/windows-ssh.jpg","permalink":"https://www.javiercd.es/en/posts/sistemas/ssh_windows/ssh_windows/","summary":"\u003ch2 id=\"1installation-of-the-feature\"\u003e1.Installation of the feature\u003c/h2\u003e\n\u003cp\u003eThe first thing we\u0026rsquo;ll check is to check if the ssh server is installed in the machine we want to connect to.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-ps\" data-lang=\"ps\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eGet-WindowsCapability\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e-Online\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e|\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eWhere-Object\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eName\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e-like\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e\u0026#39;OpenSSH\\*\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"/sistemas/ssh_windows/img/Aspose.Words.abd631a7-a62e-4d27-bef0-1d38f74ce102.001.jpeg\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eIn case we have the feature we will install it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-ps\" data-lang=\"ps\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eAdd-WindowsCapability\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e-Online\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e-Name\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eOpenSSH.Server~~~~0.0.1.0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"/sistemas/ssh_windows/img/Aspose.Words.abd631a7-a62e-4d27-bef0-1d38f74ce102.002.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eBy default the service will be stopped so we take it off:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/ssh_windows/img/Aspose.Words.abd631a7-a62e-4d27-bef0-1d38f74ce102.003.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eWe can set it to automatically boot when you restart the computer:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/sistemas/ssh_windows/img/Aspose.Words.abd631a7-a62e-4d27-bef0-1d38f74ce102.004.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003e#2. Connect us using key pair\u003c/p\u003e","tags":["Windows","Sistemas","ISO","ASO"],"title":"Windows Ssh Service Settings"}]