<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Implementation of a perimeter firewall with Nftables I on Atlas</title><link>https://www.javiercd.es/en/posts/cortafuegos/nftables_uno/</link><description>Recent content in Implementation of a perimeter firewall with Nftables I on Atlas</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 28 Mar 2024 10:00:00 +0000</lastBuildDate><atom:link href="https://www.javiercd.es/en/posts/cortafuegos/nftables_uno/index.xml" rel="self" type="application/rss+xml"/><item><title>Implementation of a perimeter firewall with Nftables I</title><link>https://www.javiercd.es/en/posts/cortafuegos/nftables_uno/cortafuegos_uno/</link><pubDate>Thu, 28 Mar 2024 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/en/posts/cortafuegos/nftables_uno/cortafuegos_uno/</guid><description>&lt;p&gt;In this post on a Debian machine scenario, we will apply rules with Nfables to match the traffic that goes into and out of our network, trying to imitate a scenario.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[NOTE]
To deploy the stage to perform these exercises you will need to deploy the .yaml file you will find in the link to the next paragraph. This will be in charge of deploying 2 machines one that will make firewall and one that will simulate a client that will be connected to the first machine to simulate a local network.&lt;/p&gt;</description></item></channel></rss>