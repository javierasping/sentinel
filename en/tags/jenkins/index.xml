<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jenkins on Atlas</title><link>https://www.javiercd.es/en/tags/jenkins/</link><description>Recent content in Jenkins on Atlas</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 14 Mar 2024 10:00:00 +0000</lastBuildDate><atom:link href="https://www.javiercd.es/en/tags/jenkins/index.xml" rel="self" type="application/rss+xml"/><item><title>Practice CI/CD with Jenkins</title><link>https://www.javiercd.es/en/posts/ci_cd/practica_jenkins/practica_jenkins/</link><pubDate>Thu, 14 Mar 2024 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/en/posts/ci_cd/practica_jenkins/practica_jenkins/</guid><description>&lt;p>The objective of this practice is the gradual development of a Pipeline that will perform tasks on the repository of an application.&lt;/p>
&lt;p>The application we&amp;rsquo;re going to work with will be your fork of the Django Polls application. As we have seen, this application that implements the Django tutorial has a test module.&lt;/p>
&lt;p>We will build the Pipeline in several phases:&lt;/p>
&lt;h2 id="exercise-1-construction-of-a-docker-image">&lt;a href="https://fp.josedomingo.org/iaw/5_ic/practica.html#exercise-1-construccion-de-una-imagen-docker" target="_blank" rel="noopener">Exercise 1: Construction of a Docker image&lt;/a>&lt;/h2>
&lt;p>We start from the pipeline that we have developed in the &lt;a href="https://fp.josedomingo.org/iaw/5_ic/taller3.html" target="_blank" rel="noopener">Workshop 3: Continuous integration of Django application (Test)&lt;/a>, where we have automated the application test.&lt;/p></description></item><item><title>Workshop 2: Valid HTML5 Check and surge.sh Deployment (Test and Deploy)</title><link>https://www.javiercd.es/en/posts/ci_cd/taller2_jenkins/taller2/</link><pubDate>Thu, 14 Mar 2024 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/en/posts/ci_cd/taller2_jenkins/taller2/</guid><description>&lt;p>In this exercise, we want to deploy an HTML5 page on the service &lt;em>surge.sh&lt;/em>. We also want to check if the HTML5 code is valid. These two operations—checking if the HTML5 is valid (test) and deploying to surge.sh (deploy)—will be automated using Jenkins (CI/CD).&lt;/p>
&lt;p>Remember that the repository is &lt;a href="https://github.com/josedom24/ic-html5" target="_blank" rel="noopener">https://github.com/josedom24/ic-html5&lt;/a>.&lt;/p>
&lt;p>As we saw in Example 2, to do the deployment, we need to save the token obtained from surge.sh. Let&amp;rsquo;s see how to work with credentials in Jenkins.&lt;/p></description></item><item><title>Workshop 3: Continuous Integration of Django Application (Test)</title><link>https://www.javiercd.es/en/posts/ci_cd/taller3_jenkins/taller3/</link><pubDate>Thu, 14 Mar 2024 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/en/posts/ci_cd/taller3_jenkins/taller3/</guid><description>&lt;p>We will work with the application repository &lt;a href="https://github.com/josedom24/django_tutorial" target="_blank" rel="noopener">django_tutorial&lt;/a>. This application has a series of tests defined, which can be studied in the &lt;code>tests.py&lt;/code> file in the &lt;code>polls&lt;/code> directory.&lt;/p>
&lt;p>Each test is defined by a function. In the file, you can read the comments to understand what each test is checking, or you can refer to the document &lt;a href="https://fp.josedomingo.org/iaw/5_ic/test_tutorial_django.html" target="_blank" rel="noopener">Tests in the Django tutorial application&lt;/a>.&lt;/p>
&lt;p>To run the tests, execute:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>python3 manage.py test
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>At this moment, a temporary database is created where the defined tests are executed:&lt;/p></description></item></channel></rss>