<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Networking on Atlas</title><link>https://www.javiercd.es/en/tags/networking/</link><description>Recent content in Networking on Atlas</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 18 Oct 2025 09:00:00 +0000</lastBuildDate><atom:link href="https://www.javiercd.es/en/tags/networking/index.xml" rel="self" type="application/rss+xml"/><item><title>Network types in KVM (NAT, isolated and bridged)</title><link>https://www.javiercd.es/en/posts/virtualizacion-kvm-linux/redes-kvm/tipos-redes-kvm/tipos-redes-kvm/</link><pubDate>Sat, 18 Oct 2025 09:00:00 +0000</pubDate><guid>https://www.javiercd.es/en/posts/virtualizacion-kvm-linux/redes-kvm/tipos-redes-kvm/tipos-redes-kvm/</guid><description>&lt;p&gt;In KVM, network virtualization is mainly managed through &lt;strong&gt;libvirt&lt;/strong&gt;, which lets us create and administer various kinds of virtual networks to which our virtual machines connect. Understanding the available network types is key to properly configuring guest connectivity and the host interaction.&lt;/p&gt;
&lt;p&gt;There are two broad categories of networks in KVM:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Private virtual networks&lt;/strong&gt;: Internal networks isolated from the outside, managed via virtual bridges created by libvirt.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bridged networks&lt;/strong&gt;: Networks that connect virtual machines directly to the host&amp;rsquo;s physical network.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id="private-virtual-networks"&gt;Private virtual networks&lt;/h2&gt;
&lt;p&gt;These networks are created on the host and provide a controlled environment for virtual machines. They fall into three main types:&lt;/p&gt;</description></item><item><title>How to create and configure private virtual networks</title><link>https://www.javiercd.es/en/posts/virtualizacion-kvm-linux/redes-kvm/crear-redes-virtuales-privadas-kvm/crear-redes-virtuales-privadas-kvm/</link><pubDate>Sat, 18 Oct 2025 09:00:00 +0000</pubDate><guid>https://www.javiercd.es/en/posts/virtualizacion-kvm-linux/redes-kvm/crear-redes-virtuales-privadas-kvm/crear-redes-virtuales-privadas-kvm/</guid><description>&lt;p&gt;In this step-by-step guide you&amp;rsquo;ll create three types of virtual networks managed by libvirt and learn simple ways to verify them:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NAT (Network Address Translation)&lt;/li&gt;
&lt;li&gt;Isolated&lt;/li&gt;
&lt;li&gt;Very isolated (L2 only)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We&amp;rsquo;ll use &lt;code&gt;virsh&lt;/code&gt; and XML definitions (you can do the same with &lt;code&gt;virt-manager&lt;/code&gt;, but we&amp;rsquo;ll focus on the CLI). After each creation, there&amp;rsquo;s a quick check to confirm everything looks good.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id="before-you-start-quick-requirements"&gt;Before you start: quick requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Packages: &lt;code&gt;libvirt-daemon&lt;/code&gt; and &lt;code&gt;libvirt-daemon-system&lt;/code&gt; (or your distro equivalents). Optional: &lt;code&gt;virt-manager&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Run commands as root or with &lt;code&gt;sudo&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Service: &lt;code&gt;systemctl status libvirtd&lt;/code&gt; should be active.&lt;/li&gt;
&lt;li&gt;See current networks: &lt;code&gt;virsh net-list --all&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Persistent config paths: &lt;code&gt;/etc/libvirt/qemu/networks/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tip: avoid subnet conflicts; choose ranges that don&amp;rsquo;t collide with your physical LAN or other libvirt networks.&lt;/p&gt;</description></item><item><title>How to create a bridge interface on the KVM host</title><link>https://www.javiercd.es/en/posts/virtualizacion-kvm-linux/redes-kvm/crear-interfaz-puente/crear-interfaz-puente/</link><pubDate>Sat, 18 Oct 2025 09:00:00 +0000</pubDate><guid>https://www.javiercd.es/en/posts/virtualizacion-kvm-linux/redes-kvm/crear-interfaz-puente/crear-interfaz-puente/</guid><description>&lt;p&gt;A bridge on the host allows your virtual machines to connect directly to the physical network as if they were another machine on the LAN. It&amp;rsquo;s the basis for &amp;ldquo;bridged networks&amp;rdquo; covered in the network types section.&lt;/p&gt;
&lt;p&gt;Important: if you perform these changes over remote SSH you may lose connectivity. Whenever possible use local/console access or have a recovery plan (KVM/IPMI, a second interface, maintenance window, etc.).&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id="0-preparation-identify-your-physical-interface-and-back-up-configs"&gt;0. Preparation: identify your physical interface and back up configs&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Identify the physical interface connected to your LAN/Internet (for example: &lt;code&gt;enp1s0&lt;/code&gt;, &lt;code&gt;enp3s0&lt;/code&gt;, &lt;code&gt;eth0&lt;/code&gt;):&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;ip -br link
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;ip -br addr
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start="2"&gt;
&lt;li&gt;Back up your network configuration files before changing anything — use the command appropriate to your setup:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo cp -a /etc/netplan /etc/netplan.bak.&lt;span style="color:#66d9ef"&gt;$(&lt;/span&gt;date +%F&lt;span style="color:#66d9ef"&gt;)&lt;/span&gt; 2&amp;gt;/dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo cp -a /etc/network/interfaces /etc/network/interfaces.bak.&lt;span style="color:#66d9ef"&gt;$(&lt;/span&gt;date +%F&lt;span style="color:#66d9ef"&gt;)&lt;/span&gt; 2&amp;gt;/dev/null
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start="3"&gt;
&lt;li&gt;Important note: the IP must live on the bridge (&lt;code&gt;br0&lt;/code&gt;), not on the physical interface. The physical interface will be left without an IP and become a slave of the bridge.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id="option-a-netplan-modern-ubuntudebian"&gt;Option A: Netplan (modern Ubuntu/Debian)&lt;/h2&gt;
&lt;p&gt;Applies to systems using Netplan (Ubuntu Server ≥ 18.04, Debian when migrated). The most common renderer is &lt;code&gt;networkd&lt;/code&gt;, but &lt;code&gt;NetworkManager&lt;/code&gt; can also be used. Here we configure &lt;code&gt;br0&lt;/code&gt; and enslave the physical interface to the bridge.&lt;/p&gt;</description></item><item><title>IPv6 Tunnels</title><link>https://www.javiercd.es/en/posts/redes/tuneles_ipv6/tuneles_ipv6/</link><pubDate>Fri, 08 Sep 2023 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/en/posts/redes/tuneles_ipv6/tuneles_ipv6/</guid><description>&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In this detailed post, we explore the process of configuring IPv6 to IPv4 tunnels and vice versa in Linux and Cisco environments. As the migration to IPv6 gains importance, the ability to establish communication between IPv4 and IPv6 networks becomes essential. We will cover the basics of tunnel configuration, including the most common types of tunnels, such as 6to4 and Teredo. Additionally, we will provide step-by-step instructions for configuration on both Linux systems and Cisco devices.&lt;/p&gt;</description></item><item><title>Underworld</title><link>https://www.javiercd.es/en/posts/redes/underworld/underworld/</link><pubDate>Fri, 08 Sep 2023 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/en/posts/redes/underworld/underworld/</guid><description>&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;
&lt;p&gt;You live in UNDERWORLD. In your world, there are different types of species with one goal: to &amp;ldquo;crossbreed&amp;rdquo; with each other. These creatures are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;VAMPIRES&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WEREWOLVES (LICÁNTROPOS):&lt;/strong&gt; Werewolves with the ability to return to their human form.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WOLFMEN (HOMBRES LOBO):&lt;/strong&gt; Werewolves who, after their first transformation, cannot return to their human form.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HUMANS:&lt;/strong&gt; Some annoying little creatures.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;YOU:&lt;/strong&gt; A tech-savvy warrior with superpowers like turning around a game that hasn&amp;rsquo;t even been released yet or having the ability to become invisible when going out to party and trying to flirt with a girl by saying things like: &amp;ldquo;Do you want me to compile your kernel, babe?&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The layout of UNDERWORLD is as follows:&lt;/p&gt;</description></item><item><title>Underworld evolution</title><link>https://www.javiercd.es/en/posts/redes/underworld_evolution/underworld_evolution/</link><pubDate>Fri, 08 Sep 2023 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/en/posts/redes/underworld_evolution/underworld_evolution/</guid><description>&lt;p&gt;The world of UNDERWORLD has evolved greatly in recent months, so you must perform network management tasks to face the new situation.&lt;/p&gt;
&lt;p&gt;On one hand, the Internet has been discovered in the Underworld, allowing each of the sub-worlds (remember: vampires, werewolves, lycanthropes, and humans) to connect to a router that, in turn, connects them to one of the two large routers that form Underworld&amp;rsquo;s Internet, called Marcus (for humans and vampires) and Alexander (for werewolves and lycanthropes). Marcus and Alexander are connected to each other.&lt;/p&gt;</description></item></channel></rss>