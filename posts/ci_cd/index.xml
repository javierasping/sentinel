<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CI/CD Jenkins on Atlas</title><link>https://www.javiercd.es/posts/ci_cd/</link><description>Recent content in CI/CD Jenkins on Atlas</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Thu, 14 Mar 2024 10:00:00 +0000</lastBuildDate><atom:link href="https://www.javiercd.es/posts/ci_cd/index.xml" rel="self" type="application/rss+xml"/><item><title>Práctica CI/CD con Jenkins</title><link>https://www.javiercd.es/posts/ci_cd/practica_jenkins/practica_jenkins/</link><pubDate>Thu, 14 Mar 2024 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/posts/ci_cd/practica_jenkins/practica_jenkins/</guid><description>&lt;p>El objetivo de esta práctica es el desarrollo gradual de un Pipeline que vaya realizando tareas sobre el repositorio de una aplicación.&lt;/p>
&lt;p>La aplicación con la que vamos a trabajar será tu fork de la aplicación django Polls. Como hemos visto esta aplicación que implementa el tutorial de Django tiene implementado un módulo de pruebas.&lt;/p>
&lt;p>Vamos a construir el Pipeline en varias fases:&lt;/p>
&lt;h2 id="ejercicio-1-construcción-de-una-imagen-docker">&lt;a href="https://fp.josedomingo.org/iaw/5_ic/practica.html#ejercicio-1-construcci%C3%B3n-de-una-imagen-docker" target="_blank" rel="noopener">Ejercicio 1: Construcción de una imagen docker&lt;/a>&lt;/h2>
&lt;p>Partimos del pipeline que hemos desarrollado en el &lt;a href="https://fp.josedomingo.org/iaw/5_ic/taller3.html" target="_blank" rel="noopener">Taller 3: Integración continua de aplicación django (Test)&lt;/a>, donde hemos automatizado el test de la aplicación.&lt;/p></description></item><item><title>Taller 1: Corrector ortográfico de documentos markdown (test)</title><link>https://www.javiercd.es/posts/ci_cd/taller1_jenkins/taller1/</link><pubDate>Thu, 14 Mar 2024 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/posts/ci_cd/taller1_jenkins/taller1/</guid><description>&lt;h1 id="taller-1-corrector-ortográfico-de-documentos-markdown-test">Taller 1: Corrector ortográfico de documentos markdown (test)&lt;/h1>
&lt;h2 id="qué-tienes-que-entregar">&lt;a href="https://fp.josedomingo.org/iaw/5_ic/taller1.html#qu%C3%A9-tienes-que-entregar" target="_blank" rel="noopener">¿Qué tienes que entregar?&lt;/a>&lt;/h2>
&lt;ol>
&lt;li>La URL del tu repositorio GitHub.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>https://github.com/javierasping/taller1_jenkins_ic-diccionario
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>El contenido de la tu fichero &lt;code>Jenkinfile&lt;/code>.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pipeline &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> agent &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> docker &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> image &lt;span style="color:#e6db74">&amp;#39;debian&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> args &lt;span style="color:#e6db74">&amp;#39;-u root:root&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stages &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stage&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;Clone&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> steps &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git branch:&lt;span style="color:#e6db74">&amp;#39;master&amp;#39;&lt;/span>, url:&lt;span style="color:#e6db74">&amp;#39;https://github.com/javierasping/taller1_jenkins_ic-diccionario.git&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stage&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;Install&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> steps &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sh &lt;span style="color:#e6db74">&amp;#39;apt-get update &amp;amp;&amp;amp; apt-get install -y aspell-es &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stage&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;Test&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> steps &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sh &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> export LC_ALL=C.UTF-8
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> OUTPUT=`cat doc/*.md | aspell list -d es -p ./.aspell.es.pws`
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> if [ -n &amp;#34;$OUTPUT&amp;#34; ]; then
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> echo $OUTPUT
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> exit 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> fi
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> post &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> always &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mail to: &lt;span style="color:#e6db74">&amp;#39;javierasping@gmail.com&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> subject: &lt;span style="color:#e6db74">&amp;#34;Status of pipeline: &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>currentBuild.fullDisplayName&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> body: &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>env.BUILD_URL&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> has result &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>currentBuild.result&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Una captura de pantalla donde se vea la configuración del disparador del pipeline.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://www.javiercd.es/ci_cd/taller1_jenkins/img/Pasted_image_20240229084423.png" alt="">&lt;/p></description></item><item><title>Taller 2 Comprobación de HTML5 válido y despliegue en surge.sh (test y deploy)</title><link>https://www.javiercd.es/posts/ci_cd/taller2_jenkins/taller2/</link><pubDate>Thu, 14 Mar 2024 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/posts/ci_cd/taller2_jenkins/taller2/</guid><description>&lt;p>En este ejercicio queremos desplegar una página HTML5 en el servicio &lt;em>surge.sh&lt;/em>, además queremos comprobar si el código HTML5 es válido. Estas dos operaciones: comprobar si el HTML5 es válido (test) y el despliegue en surge.sh (deploy) lo vamos a hacer con Jenkins de forma automática (IC y DC). Recuerda que el repositorio es &lt;a href="https://github.com/josedom24/ic-html5" target="_blank" rel="noopener">https://github.com/josedom24/ic-html5&lt;/a>.&lt;/p>
&lt;p>Como vimos en el ejemplo 2, para hacer el despliegue necesitamos guardar el token que hemos obtenido de surge para que nos autentifiquemos. veamos como trabajar con credenciales en Jenkins.&lt;/p></description></item><item><title>Taller 3: Integración continua de aplicación django (Test)</title><link>https://www.javiercd.es/posts/ci_cd/taller3_jenkins/taller3/</link><pubDate>Thu, 14 Mar 2024 10:00:00 +0000</pubDate><guid>https://www.javiercd.es/posts/ci_cd/taller3_jenkins/taller3/</guid><description>&lt;p>Vamos a trabajar con el repositorio de la aplicación &lt;a href="https://github.com/josedom24/django_tutorial" target="_blank" rel="noopener">django_tutorial&lt;/a>. Esta aplicación tiene definidas una serie de test, que podemos estudiar en el fichero &lt;code>tests.py&lt;/code> del directorio &lt;code>polls&lt;/code>.&lt;/p>
&lt;p>Cada test viene definido por una función. En el fichero puedes leer los comentarios para saber que es lo que prueba cada test, o puedes ver el documento &lt;a href="https://fp.josedomingo.org/iaw/5_ic/test_tutorial_django.html" target="_blank" rel="noopener">Tests en la aplicación tutorial Django&lt;/a>.&lt;/p>
&lt;p>Para ejecutar los test ejecutamos:&lt;/p>
&lt;pre tabindex="0">&lt;code>python3 manage.py test
&lt;/code>&lt;/pre>&lt;p>En ese momento se crea una base de datos temporal, donde se van a ir realizando las pruebas que están definidas:&lt;/p></description></item></channel></rss>