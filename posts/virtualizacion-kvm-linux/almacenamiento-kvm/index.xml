<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Almacenamiento en KVM on Atlas</title><link>https://www.javiercd.es/posts/virtualizacion-kvm-linux/almacenamiento-kvm/</link><description>Recent content in Almacenamiento en KVM on Atlas</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Sat, 25 Oct 2025 09:00:00 +0000</lastBuildDate><atom:link href="https://www.javiercd.es/posts/virtualizacion-kvm-linux/almacenamiento-kvm/index.xml" rel="self" type="application/rss+xml"/><item><title>Introducción al almacenamiento en KVM/libvirt</title><link>https://www.javiercd.es/posts/virtualizacion-kvm-linux/almacenamiento-kvm/introduccion-almacenamiento-kvm/introduccion-almacenamiento-kvm/</link><pubDate>Sat, 25 Oct 2025 09:00:00 +0000</pubDate><guid>https://www.javiercd.es/posts/virtualizacion-kvm-linux/almacenamiento-kvm/introduccion-almacenamiento-kvm/introduccion-almacenamiento-kvm/</guid><description>&lt;p&gt;El almacenamiento es un pilar en la virtualización: define cómo y dónde se guardan los discos de las máquinas virtuales, cómo se gestionan instantáneas (snapshots), y qué opciones de rendimiento y protección están disponibles.&lt;/p&gt;
&lt;p&gt;En el ecosistema KVM/libvirt el almacenamiento se organiza en dos conceptos básicos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pools de almacenamiento (storage pools): agrupaciones lógicas que representan una fuente de almacenamiento (por ejemplo, un directorio, un conjunto LVM, un target iSCSI o un pool Ceph). Libvirt expone y gestiona estos pools para simplificar el uso del almacenamiento por parte de las VMs.&lt;/li&gt;
&lt;li&gt;Volúmenes de almacenamiento (storage volumes): las unidades dentro de un pool que sirven como discos virtuales para las máquinas.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="tipos-de-pools"&gt;Tipos de pools&lt;/h2&gt;
&lt;p&gt;Libvirt soporta múltiples tipos de pool. A modo de resumen práctico:&lt;/p&gt;</description></item><item><title>Cómo gestionar pools de almacenamiento</title><link>https://www.javiercd.es/posts/virtualizacion-kvm-linux/almacenamiento-kvm/gestion-pools-almacenamiento/gestion-pools-almacenamiento/</link><pubDate>Sat, 25 Oct 2025 09:00:00 +0000</pubDate><guid>https://www.javiercd.es/posts/virtualizacion-kvm-linux/almacenamiento-kvm/gestion-pools-almacenamiento/gestion-pools-almacenamiento/</guid><description>&lt;p&gt;Tienes que incluir y responder a las siguientes preguntas en este post .&lt;/p&gt;
&lt;p&gt;Que es un pool
Como se crea y que formas utilizan&lt;/p&gt;
&lt;p&gt;El almacenamiento en KVM/libvirt se organiza en &amp;ldquo;storage pools&amp;rdquo; y &amp;ldquo;storage volumes&amp;rdquo;. En este artículo explicaremos qué es un pool, por qué se usan, y cómo gestionarlos con &lt;code&gt;virsh&lt;/code&gt; o mediante ficheros XML. Incluiremos ejemplos y recomendaciones prácticas, así como notas sobre pools basados en LVM.&lt;/p&gt;
&lt;h2 id="qué-es-un-storage-pool"&gt;¿Qué es un storage pool?&lt;/h2&gt;
&lt;p&gt;Un storage pool es una abstracción que agrupa una fuente de almacenamiento que libvirt puede exponer a las máquinas virtuales. Un pool puede corresponder a un directorio en disco, a un sistema de ficheros montado, a un conjunto de volúmenes lógicos (LVM), a dispositivos iSCSI, o a backends distribuidos como Ceph RBD o Gluster.&lt;/p&gt;</description></item><item><title>Cómo gestionar volúmenes con virsh</title><link>https://www.javiercd.es/posts/virtualizacion-kvm-linux/almacenamiento-kvm/gestion-volumenes-virsh/gestion-volumenes-virsh/</link><pubDate>Sat, 25 Oct 2025 09:00:00 +0000</pubDate><guid>https://www.javiercd.es/posts/virtualizacion-kvm-linux/almacenamiento-kvm/gestion-volumenes-virsh/gestion-volumenes-virsh/</guid><description>&lt;p&gt;Breve: ejemplos de uso de la API de libvirt (&lt;code&gt;virsh vol-*&lt;/code&gt;) para gestionar volúmenes dentro de pools y las diferencias según el backend.&lt;/p&gt;
&lt;h2 id="gestión-de-volúmenes-de-almacenamiento-con-virsh"&gt;Gestión de volúmenes de almacenamiento con virsh&lt;/h2&gt;
&lt;p&gt;En este apartado vamos a estudiar la gestión de volúmenes de almacenamiento usando la API de libvirt (herramienta &lt;code&gt;virsh&lt;/code&gt;). Trabajaremos sobre pools de tipo &lt;code&gt;dir&lt;/code&gt; (ficheros de imagen en disco), aunque muchas de las operaciones son compatibles con otros backends; donde existan diferencias, se indicará.&lt;/p&gt;</description></item><item><title>Cómo redimensionar discos de máquinas virtuales</title><link>https://www.javiercd.es/posts/virtualizacion-kvm-linux/almacenamiento-kvm/redimension-discos-vms/redimension-discos-vms/</link><pubDate>Sat, 25 Oct 2025 09:00:00 +0000</pubDate><guid>https://www.javiercd.es/posts/virtualizacion-kvm-linux/almacenamiento-kvm/redimension-discos-vms/redimension-discos-vms/</guid><description>&lt;p&gt;En este ejemplo usaremos el pool &lt;code&gt;default&lt;/code&gt; y un volumen llamado &lt;code&gt;vdisk-10G.img&lt;/code&gt;. Mostraremos cómo crear el volumen desde el host, cómo formatearlo con los sistemas de ficheros más comunes (ext4, FAT32, XFS, btrfs) usando la VM invitada, y finalmente cómo añadir 10 GB al volumen y redimensionar la partición y el sistema de ficheros.&lt;/p&gt;
&lt;p&gt;Nota: los comandos que actúan sobre la gestión de volúmenes (crear, redimensionar) se ejecutan en el host y usan tu prompt de ejemplo. Los comandos que se ejecutan dentro del invitado (para particionar y formatear) se muestran con el prompt del invitado &lt;code&gt;javiercruces@debian13:~$&lt;/code&gt;.&lt;/p&gt;</description></item></channel></rss>